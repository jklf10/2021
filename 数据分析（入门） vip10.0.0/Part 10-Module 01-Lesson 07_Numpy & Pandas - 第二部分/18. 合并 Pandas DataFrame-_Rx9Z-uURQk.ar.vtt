WEBVTT
Kind: captions
Language: ar

00:00:00.300 --> 00:00:03.690
وفي هذا الدرس حتى الآن، عملتَ مع
.إطار بيانات واحد فقط في المرة

00:00:03.690 --> 00:00:06.510
ومع ذلك، في الغالب
سيكون لديك إطارات بيانات متعددة قد ترغب في

00:00:06.510 --> 00:00:07.910
.العمل معها

00:00:07.910 --> 00:00:10.890
،على سبيل المثال، في الدرس 1
.كان لديك ثلاثة ملفات CSV

00:00:10.890 --> 00:00:12.340
،ولهذا السبب، إذا كنت تستخدم Pandas

00:00:12.340 --> 00:00:14.950
فقد قمت بتحميلها في
.ثلاثة إطارات بيانات

00:00:14.950 --> 00:00:17.750
على سبيل المثال، افترض أني أردتُ تحليل
مدى احتمال إلغاء الطلاب لتسجيلهم بمجرد

00:00:17.750 --> 00:00:20.370
إرسالهم
.للمشاريع

00:00:20.370 --> 00:00:23.560
فقد يتطلب هذا معلومات من
جدول عمليات إرسال المشاريع وجدول

00:00:23.560 --> 00:00:25.200
.عمليات التسجيل على حد سواء

00:00:25.200 --> 00:00:29.050
ولقد أدرجت بعض الأعمدة فقط
.من كل جدول لتبسيط المثال

00:00:29.050 --> 00:00:32.729
تشتمل Pandas على عملية تُسمى الدمج
ستتيح لي دمج الجدولين

00:00:32.729 --> 00:00:34.740
.في جدول واحد

00:00:34.740 --> 00:00:38.300
ستؤدي هذه العملية إلى إنشاء جدول جديد
.يحتوي على جميع أعمدة كلا الجدولين

00:00:38.300 --> 00:00:40.650
لاحظ أنه لا توجد عملية تسجيل
بدون عملية إرسال

00:00:40.650 --> 00:00:42.100
.مشروع موافقة

00:00:42.100 --> 00:00:45.620
في هذا المثال، أُركز فقط على الطلاب
الذين لم يرسلوا مشروعًا واحدًا، لهذا

00:00:45.620 --> 00:00:47.430
.لن أُدرج ذلك الصف

00:00:47.430 --> 00:00:49.640
.وسترى كيف أقوم بذلك خلال دقيقة

00:00:49.640 --> 00:00:50.520
ولهذا السبب، سيحتوي الجدول الجديد على

00:00:50.520 --> 00:00:54.150
صف واحد
.لكل صف في جدول الإرسال

00:00:54.150 --> 00:00:57.100
وستتم مطابقة الأعمدة الموافقة لعمليات التسجيل
حسب

00:00:57.100 --> 00:00:58.540
.مفتاح الحساب

00:00:58.540 --> 00:01:01.270
ولهذا فإن تاريخ المشاركة لمفتاح الحساب
.1 كان 5/11

00:01:01.270 --> 00:01:06.760
وكان تاريخ المشاركة لمفتاح الحساب
.2 كان 5/13، وهكذا

00:01:06.760 --> 00:01:09.670
لاحظ أنه في حالة وجود إدخال مكرر
في جدول التسجيل، مثل عمليتي تسجيل

00:01:09.670 --> 00:01:12.260
لمفتاح الحساب
،2

00:01:12.260 --> 00:01:17.680
فقد يتم أيضًا تكرار أية مشاريع يتم إرسالها بواسطة مفتاح الحساب
.2

00:01:17.680 --> 00:01:20.110
،وبالنسبة لنفس عملية إرسال المشروع حتى الآن
قد يكون هناك صف

00:01:20.110 --> 00:01:22.310
لعملية التسجيل الأولى وصف
.لعملية التسجيل الثانية

00:01:23.330 --> 00:01:26.560
ولهذا السبب، قد يكون من الجيد
إزالة التكرارات من جدول عمليات التسجيل

00:01:26.560 --> 00:01:30.630
،قبل إجراء الدمج
.وفقًا لحالة الاستخدام

00:01:30.630 --> 00:01:34.667
والتعليمة البرمجية التي قد أكتبها لإجراء عملية الدمج هذه
،هي submissions.merge (enrolments

00:01:34.667 --> 00:01:37.159
.(on='account_key', how='left'

00:01:37.159 --> 00:01:40.830
تحدد on='account_key كيفية
مطابقة صفوف مختلفة من

00:01:40.830 --> 00:01:42.130
.جداول مختلفة

00:01:42.130 --> 00:01:45.090
ولهذا السبب، في هذه الحالة تمت مطابقة الصفوف المختلفة حسب
.مفتاح الحساب

00:01:45.090 --> 00:01:47.960
تحدد how=left ما يحدث
إذا وجدت بعض مفاتيح الحسابات

00:01:47.960 --> 00:01:51.680
في جدول واحد
.ولكن ليس في الآخر مثل هذا الجدول على سبيل المثال

00:01:51.680 --> 00:01:56.210
تتمثل خيارات هذه الوسيطة
."في "الداخلي" و"الأيمن" و "الأيسر" و"الخارجي

00:01:56.210 --> 00:01:59.330
وفي هذه الحالة قد تعمل الوسيطة how=inner
.أيضًا

00:01:59.330 --> 00:02:03.440
عند استخدام الخيار "الداخل"، فلن تُحفظ إلا الصفوف التي لها مفتاح الحساب
في كلا الجدولين ولهذا فقد تم تجاهل هذا

00:02:03.440 --> 00:02:05.643
.الصف

00:02:05.643 --> 00:02:07.037
،"ولو كانت how مساوية للخيار "الأيمن

00:02:07.037 --> 00:02:10.205
لكانت الصفوف من الجدول الأيمن
،لعمليات التسجيل قد حُفظت

00:02:10.205 --> 00:02:13.900
حتى ولو لم يكن هناك إدخال مطابق
.في جدول عمليات الإرسال

00:02:13.900 --> 00:02:17.560
وحيث إنه لا توجد بيانات لمفتاح الحساب هذا
،في جدول عمليات إرسال المشاريع

00:02:17.560 --> 00:02:20.140
فقد كانت تتم تعبئة NaN
.لهذه الأعمدة

00:02:20.140 --> 00:02:22.480
.كيف تؤدي equals left العكس تمامًا

00:02:22.480 --> 00:02:25.520
إذا كانت هناك صفوف في الجدول الأيسر
لا توجد في الجدول الأيمن

00:02:25.520 --> 00:02:27.520
.فيتم الاحتفاظ بتلك الصفوف ،

00:02:27.520 --> 00:02:29.390
وفي هذه الحالة، لا توجد أية صفوف
مثل ذلك ولهذا السبب

00:02:29.390 --> 00:02:31.580
.فإن الخيار "أيسر" و"داخلي" يقومان بنفس الشيء

00:02:31.580 --> 00:02:34.960
وإذا استخدمت الخيار "الخارجي"، ستُحفظ جميع الصفوف
من كلا الجدولين وستتم تعبئة nan

00:02:34.960 --> 00:02:35.980
.إذا لزم الأمر

00:02:36.980 --> 00:02:40.470
ولقد اكتشفتُ أن الخيار "الداخلي" هو أشهر أنواع الدمج
التي أرغب في القيام بها، ولكنه

00:02:40.470 --> 00:02:42.040
.يعتمد حقًا على المثال

00:02:43.060 --> 00:02:44.750
،وبالمناسبة، إذا استخدمتَ SQL

00:02:44.750 --> 00:02:48.950
فقد تدرك أن عملية دمج في Pandas
.مشابهة للغاية بعملية مشاركة في SQL

00:02:48.950 --> 00:02:51.920
،وإذا لم تكن قد استخدمت sequel
.فمع ذلك لا تقلق

00:02:51.920 --> 00:02:54.030
،والآن، بالنسبة لمجموعة بيانات نيويورك
،وبيانات قطار الأنفاق

00:02:54.030 --> 00:02:57.950
وبيانات الطقس، فقد جُمعت من مصادر
.مختلفة في الأصل

00:02:57.950 --> 00:03:01.700
في التمرين التالي، أرغب في أن تستخدم
دالة الدمج merge

00:03:01.700 --> 00:03:04.810
لدمج الملفين
.في إطار بيانات واحد

00:03:04.810 --> 00:03:07.620
سيضع هذا البيانات في تنسيق مشابه
كنت تستخدمه في

00:03:07.620 --> 00:03:08.780
.الدرس حتى الآن

