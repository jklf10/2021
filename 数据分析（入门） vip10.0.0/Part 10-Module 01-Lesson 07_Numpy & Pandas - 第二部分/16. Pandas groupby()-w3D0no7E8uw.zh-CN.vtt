WEBVTT
Kind: captions
Language: zh-CN

00:00:00.290 --> 00:00:03.530
我决定以日期为单位 绘制地铁客流量的图表

00:00:03.530 --> 00:00:05.980
首先 我要观察一下数据

00:00:05.980 --> 00:00:08.490
记住这些信息的储存位置

00:00:08.490 --> 00:00:12.050
可以看到 它们位于 day_week 一列

00:00:12.050 --> 00:00:14.590
所以 我要做的第一件事就是

00:00:14.590 --> 00:00:16.170
按照一周的每一天对地铁数据进行分组

00:00:16.170 --> 00:00:19.470
与此前一样 我会得到 DataFrameGroupBy 对象

00:00:19.470 --> 00:00:20.860
所以 我无法得知具体情况

00:00:21.980 --> 00:00:24.960
接下来 我想计算一周每天的平均客流量

00:00:24.960 --> 00:00:26.570
因此 我需要添加 .mean

00:00:26.570 --> 00:00:28.240
这一次 我能看到一些结果了

00:00:28.240 --> 00:00:32.590
它针对一周每一天的每一列给出了平均值

00:00:32.590 --> 00:00:35.500
我对 ENTRIESn_hourly 尤其感兴趣

00:00:35.500 --> 00:00:36.860
所以我要查看这一列

00:00:36.860 --> 00:00:40.650
再次运行后 我看到了

00:00:40.650 --> 00:00:42.760
仅含有 ENTRIESn_hourly 列值的 series

00:00:42.760 --> 00:00:45.930
我将它命名为 ridership_by_day

00:00:45.930 --> 00:00:48.400
接下来 我要绘制这些值的图

00:00:48.400 --> 00:00:52.330
与往常一样 我用 %pylab inline 来确保绘图位于 notebook 之内

00:00:52.330 --> 00:00:57.350
并用 import seaborn as sns 让图表更为美观

00:00:57.350 --> 00:00:59.724
接下来 我要调用 ridership_by_day.plot

00:01:00.750 --> 00:01:02.010
我得到的图表是这样的

00:01:02.010 --> 00:01:05.080
我发现 最突出的一点是

00:01:05.080 --> 00:01:08.800
第五和第六天的客流量明显低于这一周的其它天

00:01:08.800 --> 00:01:12.180
而这两天是周末 所以比较合理

