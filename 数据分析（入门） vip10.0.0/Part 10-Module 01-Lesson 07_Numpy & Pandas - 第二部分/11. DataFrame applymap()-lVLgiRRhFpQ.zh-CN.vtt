WEBVTT
Kind: captions
Language: zh-CN

00:00:00.250 --> 00:00:03.900
与 pandasSeries 一样 有时你可能无法通过

00:00:03.900 --> 00:00:07.280
内置函数或算法来完成

00:00:07.280 --> 00:00:07.880
你需要在DataFrame中进行的计算

00:00:08.910 --> 00:00:12.860
与 series 相同 你可以写出一个函数 f

00:00:12.860 --> 00:00:17.140
使其从DataFrame中取出一个元素并返回一个新元素

00:00:17.140 --> 00:00:19.720
然后 你可以对原DataFrame中的每个元素 

00:00:19.720 --> 00:00:23.175
调用 (apply) 这个函数 f 从而获得新的DataFrame

00:00:25.020 --> 00:00:28.650
例如 在上节课中 我写了一个名为 clean_state 的函数

00:00:28.650 --> 00:00:31.780
它将各种格式的状态

00:00:31.780 --> 00:00:33.180
转换成标准格式

00:00:34.610 --> 00:00:37.240
要对DataFrame df 的每一个元素调用该函数

00:00:37.240 --> 00:00:41.940
你需要调用 df.applymap(clean_state)

00:00:41.940 --> 00:00:44.750
那么 为什么这个函数被称为 applymap

00:00:44.750 --> 00:00:47.420
而不是像 series 那样的调用？

00:00:47.420 --> 00:00:51.090
这个问题有点棘手 但在下一个视频中

00:00:51.090 --> 00:00:54.080
你会了解到调用在DataFrame中的作用有些不同

00:00:54.080 --> 00:00:56.870
在下一个练习中 

00:00:56.870 --> 00:00:59.260
你需要写一个将分数成绩转换成字母成绩的函数

00:00:59.260 --> 00:01:02.360
你会得到一个DataFrame 它的每一列代表一科考试

00:01:02.360 --> 00:01:06.460
每一行代表一个学生 每一个值代表某一学生某一科的考试成绩

00:01:07.510 --> 00:01:11.272
你要用的规则是 大于或等于 90 分的成绩为 A

00:01:11.272 --> 00:01:13.322
大于或等于 80 分的成绩为 B 以此类推

00:01:13.322 --> 00:01:15.456
利用 applymap 创建一个新的DataFrame

00:01:15.456 --> 00:01:18.860
并用字母代替相应的分数成绩

