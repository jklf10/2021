WEBVTT
Kind: captions
Language: ar

00:00:00.190 --> 00:00:02.500
في الدرس الأخير، أجريت الكثير من العمل على البيانات أحادية
.البُعد

00:00:02.500 --> 00:00:05.689
وفي هذا الدرس، ستجرب استخدام البيانات
،ثنائية الأبعاد

00:00:05.689 --> 00:00:07.480
.أي البيانات التي تتضمن الصفوف والأعمدة

00:00:08.790 --> 00:00:11.080
في Python المنقحة الخالية من أية مكتبات

00:00:11.080 --> 00:00:13.860
قد تعرض هذه البيانات
.باستخدام قائمة تتكون من مجموعة قوائم

00:00:13.860 --> 00:00:17.740
أي قائمة للصف الأول
وقائمة للصف الثاني وهكذا، ثم تضع

00:00:17.740 --> 00:00:19.880
كل هذه القوائم
.في قائمة

00:00:20.950 --> 00:00:23.740
في صفيف NumPy، بدلاً من إنشاء صفيف يتكون من مجموعة صفائف
يمكنك إنشاء

00:00:23.740 --> 00:00:26.770
صفيف ثنائي
.الأبعاد

00:00:26.770 --> 00:00:27.300
،وفي Pandas

00:00:27.300 --> 00:00:30.900
هناك بنية بيانات مختلفة
.للبيانات ثنائية الأبعاد تُسمى إطار البيانات

00:00:30.900 --> 00:00:34.250
وعلى غرار الدرس الأخير، أُفضلُ
استخدام Pandas لأنها تتميز بوظيفة

00:00:34.250 --> 00:00:37.610
إضافية، ولكني سأبدأ بـ NumPy لأنه
.أبسط

00:00:38.700 --> 00:00:41.350
ولهذا ما الفرق بين إنشاء صفيف فردي ثنائي الأبعاد
في NumPy بدلاً من إنشاء صفيف

00:00:41.350 --> 00:00:44.900
أحادي البُعد
تمثل عناصره

00:00:44.900 --> 00:00:47.180
صفائف أيضًا؟

00:00:47.180 --> 00:00:50.300
أحد الاختلافات المهمة أنه نظرًا لكيفية
تنفيذ صفيف NumPy، فإن إنشاء

00:00:50.300 --> 00:00:53.320
صفيف ثنائي الأبعاد
.أكثر توفيرًا لمساحة الذاكرة

00:00:53.320 --> 00:00:57.330
،وإذا كنت تريد أن تعرف المزيد عن هذا
.فاتبع الرابط الوارد في ملاحظات المدرب

00:00:57.330 --> 00:01:00.950
كما أن صيغة الوصول إلى العناصر
.مختلفة قليلاً أيضًا

00:01:00.950 --> 00:01:05.360
ولنفترض أنك أردتَ الوصول إلى العنصر الوارد في
.الصف الأول والعمود الثالث

00:01:05.360 --> 00:01:09.265
يمكنك القيام بهذا باستخدام
التعليمة البرمجية a[1,3] بدلاً من

00:01:09.265 --> 00:01:14.580
a[1][3] التي قد تستخدمها مع صفيف
.من الصفائف

00:01:14.580 --> 00:01:18.380
كما يمكنك أن تجعل موضع الصف أو موضع
العمود أو

00:01:18.380 --> 00:01:21.070
،كليهما عبارة عن جزء
بدلاً من رقم أحادي

00:01:21.070 --> 00:01:24.160
باستخدام تدوين علامة النقطتين
.الذي تعلمته في الدرس الأخير

00:01:24.160 --> 00:01:27.280
وهناك اختلاف آخر مع الدوال تعلمته أنت في
الدرس الأخير، وهو المتوسط، أي

00:01:27.280 --> 00:01:29.260
.الانحراف المعياري وهكذا

00:01:29.260 --> 00:01:30.900
،باستخدام صفيف ثنائي الأبعاد

00:01:30.900 --> 00:01:33.720
ستعمل هذه الدوال
.على الصفيف بالكامل

00:01:33.720 --> 00:01:37.100
ولهذا في هذه الحالة، قد يحسب المتوسط
،متوسط جميع تلك القيم

00:01:37.100 --> 00:01:39.620
مع تجاهل الصفوف
.والأعمدة التي كانت بها

00:01:39.620 --> 00:01:41.690
ولا يمكنك استخراج متوسط صفيف من الصفائف
على الرغم من أنه

00:01:41.690 --> 00:01:44.860
يمكنك استخراج متوسط كل
.صف فردي

00:01:44.860 --> 00:01:47.470
في الشاشة التالية، ستحصل على
فرصة للتجربة باستخدام

00:01:47.470 --> 00:01:50.270
صفيف أساسي
.لعرض عدد ركاب قطار الأنفاق

00:01:50.270 --> 00:01:54.540
سيمثل كل صف تاريخًا مختلفًا بينما سيمثل
.كل عمود محطة مختلفة

00:01:54.540 --> 00:01:57.350
حاول تجربة التعليمة البرمجية النموذجية
.المحددة لترى ما ينتج عن استخدامها

00:01:57.350 --> 00:02:00.870
ثم اكتب دالة تبحث أولاً عن
المحطة التي تحتوي على الحد الأقصى لعدد الركاب في

00:02:00.870 --> 00:02:01.430
.أول يوم

00:02:02.440 --> 00:02:06.030
ثم ابحث عن متوسط عدد الركاب&lrm;
.في كل يوم بالنسبة لتلك المحطة

00:02:06.030 --> 00:02:09.590
ثم قم بإرجاع متوسط عدد الركاب&lrm;
.كل يوم بالنسبة لجميع المحطات للمقارنة

