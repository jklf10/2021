WEBVTT
Kind: captions
Language: zh-CN

00:00:00.380 --> 00:00:03.380
我要运行每一个示例代码 以了解它们的用途

00:00:03.380 --> 00:00:07.068
第一个代码是用于 Series 和方形 DataFrame 之间的加法

00:00:07.068 --> 00:00:10.606
方形 DataFrame 是行与列数量相等的 DataFrame 

00:00:10.606 --> 00:00:16.230
我把索引值和列名均设为 0、1、2 和 3

00:00:16.230 --> 00:00:18.870
为了方便比较 

00:00:18.870 --> 00:00:21.840
我把原 DataFrame 和添加 Series 后的结果都打了出来

00:00:21.840 --> 00:00:25.600
可以看到 第一列的每个值都加了 1

00:00:25.600 --> 00:00:30.400
第二列的每个值都加了 2 以此类推

00:00:30.400 --> 00:00:33.610
看起来 Series 的每个值好像都与

00:00:33.610 --> 00:00:35.770
DataFrame 各列相加了

00:00:35.770 --> 00:00:39.650
看到这里 我大概知道了

00:00:39.650 --> 00:00:40.660
DataFrame 单行与 Series 相加的结果

00:00:40.660 --> 00:00:41.610
但我还是要试验一下

00:00:42.760 --> 00:00:45.730
同样地 为方便比较 我打出了两个 DataFrame

00:00:45.730 --> 00:00:49.150
与之前一样 Series 的每一个值好像

00:00:49.150 --> 00:00:49.860
都与 DataFrame 的每一列相加了

00:00:50.935 --> 00:00:54.470
第一列的每个值都加了 1 第二列的每个值都加了 2 以此类推

00:00:55.470 --> 00:00:58.870
不太明显的一点是

00:00:58.870 --> 00:01:01.620
如果我把 Series 与仅有一列的 DataFrame 相加 会怎么样呢？

00:01:01.620 --> 00:01:04.489
它会自动将每个值

00:01:04.489 --> 00:01:06.990
与 DataFrame 的每一行相加吗？

00:01:06.990 --> 00:01:10.060
我试了一下 可以看到 结果并非如此

00:01:10.060 --> 00:01:13.690
事实上 相加后的结果有四列

00:01:13.690 --> 00:01:17.770
每一列对应 Series 的一个值 而除第一列外的其它列都含有 NaN

00:01:18.900 --> 00:01:22.120
与之前一样 第一列的每个值都加了 1

00:01:23.310 --> 00:01:28.670
顺便说一下 代码 df.add(s) 通常与 df+s 相同

00:01:28.670 --> 00:01:31.290
所以 我一般不调用这个函数

00:01:31.290 --> 00:01:34.040
但使用这个函数的好处在于

00:01:34.040 --> 00:01:35.790
你还可以使用数轴参数

00:01:35.790 --> 00:01:41.192
如果我设数轴等于列 那么所得结果与 df+s 的相同

00:01:41.192 --> 00:01:46.009
但如果我设数轴等于索引值 那么 

00:01:46.009 --> 00:01:50.175
Series 的每一个值会与 DataFrame 的各行相加 有时 这可能是我们需要的

00:01:51.635 --> 00:01:55.455
在我试验的所有示例中 

00:01:55.455 --> 00:01:59.530
Series 的索引值均与 DataFrame 的列名相同 即 0、1、2、3

00:01:59.530 --> 00:02:02.790
现在我要试一个不同情况的例子

00:02:02.790 --> 00:02:05.850
这里的 Series 索引值为 B、C、D、E

00:02:05.850 --> 00:02:09.580
而 DataFrame 的列名则是 a、b、c、d

00:02:09.580 --> 00:02:13.510
结果与我们把 pandasSeries 相加时的结果十分相似

00:02:13.510 --> 00:02:16.020
这里的索引值并不匹配

00:02:16.020 --> 00:02:18.840
对于不同时存在于 DataFrame 和 Series 的字母

00:02:18.840 --> 00:02:21.470
其结果为 NaN

00:02:21.470 --> 00:02:23.190
对于两者均拥有的字母

00:02:23.190 --> 00:02:25.210
其相加结果是根据字母匹配的

00:02:26.220 --> 00:02:30.300
所以 b 列的每一个值都加了 1

00:02:30.300 --> 00:02:32.680
而 1 正是 Series 中索引 b 的值

00:02:33.810 --> 00:02:36.420
总体来说 将 DataFrame 和 Series 相加

00:02:36.420 --> 00:02:40.170
就是将 DataFrame 的每一列与 Series 的每一个值相加

00:02:40.170 --> 00:02:43.850
它根据 Series 的索引值和 DataFrame 的列名

00:02:43.850 --> 00:02:45.390
匹配 Series 和 DataFrame

