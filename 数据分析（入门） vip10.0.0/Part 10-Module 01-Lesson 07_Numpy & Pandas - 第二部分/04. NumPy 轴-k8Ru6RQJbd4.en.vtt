WEBVTT
Kind: captions
Language: en

00:00:00.440 --> 00:00:04.950
You just saw that NumPy functions like
mean operate on the array as a whole but

00:00:04.950 --> 00:00:08.920
in many cases it might make sense to
calculate the operation by row or

00:00:08.920 --> 00:00:09.430
by column.

00:00:10.450 --> 00:00:13.710
For example, consider the array of
subway riders that you just looked at,

00:00:13.710 --> 00:00:17.490
where each column is a station and
each row is a date.

00:00:17.490 --> 00:00:20.570
It might make sense to take the mean
ridership per day across all subway

00:00:20.570 --> 00:00:24.840
stations like you just did but you might
also want to take the mean ridership for

00:00:24.840 --> 00:00:28.280
each station or for each date.

00:00:28.280 --> 00:00:31.820
Most functions built into NumPy take
an axis argument for this reason,

00:00:31.820 --> 00:00:33.800
which can be either zero or one.

00:00:33.800 --> 00:00:37.390
If the axis is zero,
then the function will be calculated for

00:00:37.390 --> 00:00:42.430
each column and if the axis is one,
it will be calculated for each row.

00:00:42.430 --> 00:00:45.650
I find it hard to remember which
axis is zero and which is one so,

00:00:45.650 --> 00:00:50.180
I always just try it out and
see before using the axis argument.

00:00:50.180 --> 00:00:53.310
To get some practice, I want you to
write some code to find the mean

00:00:53.310 --> 00:00:56.240
ridership per day for
each subway station.

00:00:56.240 --> 00:00:59.000
Then, out of all the subway stations,
return the maximum and

00:00:59.000 --> 00:01:00.430
the minimum ridership per day.

