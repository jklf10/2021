WEBVTT
Kind: captions
Language: zh-CN

00:00:00.380 --> 00:00:05.110
我在上一个视频中提到 DataFrame 还有 apply 函数

00:00:05.110 --> 00:00:06.770
它是干什么用的呢？

00:00:06.770 --> 00:00:08.210
从某种意义上来说

00:00:08.210 --> 00:00:12.900
DataFrame 的 apply 就是直接对 Series 中 apply 的模拟

00:00:12.900 --> 00:00:16.400
它取决于你对 DataFrame 的定义

00:00:16.400 --> 00:00:20.960
你可以把一列数据视为一条 DataFrame 而不只是一个单独的元素

00:00:22.670 --> 00:00:27.390
你输入调用的这个函数 f 载入 pandasSeries

00:00:27.390 --> 00:00:29.970
也就是 DataFrame 的全部列

00:00:29.970 --> 00:00:34.670
然后 返回一个新的 pandasSeries 即 DataFrame 的新列

00:00:34.670 --> 00:00:36.886
之后 在调用 df.apply(f) 时

00:00:36.886 --> 00:00:40.537
apply 函数在 DataFrame 的每一列上调用你的函数 f

00:00:43.714 --> 00:00:47.790
你可能会问 为什么要这样做 而不使用 applymap 呢？

00:00:48.940 --> 00:00:51.550
这是因为 你想针对 DataFrame 各元素进行的运算

00:00:51.550 --> 00:00:54.620
可能取决于整个列

00:00:55.710 --> 00:00:58.780
思考一下对分数进行等级划分的例子

00:00:58.780 --> 00:01:04.569
假设我想给予最高成绩中前 20% 的学生 A

00:01:04.569 --> 00:01:09.470
其次的 30% 为 B 再其次的 30% 和 2 个 10% 分别是 C、D、F

00:01:09.470 --> 00:01:13.210
我们先不考虑这个评分方法是否合理

00:01:13.210 --> 00:01:15.290
我们看一下应该怎样编写代码

00:01:16.350 --> 00:01:19.450
我可以像之前那样储存 DataFrame 中的数字分数

00:01:19.450 --> 00:01:23.340
其每列为一个科目 每行为一个学生

00:01:23.340 --> 00:01:25.880
但这次 我不能用 applymap

00:01:25.880 --> 00:01:28.960
在已知某科目一个分数 而不知道其它分数的情况下 

00:01:28.960 --> 00:01:31.890
我无法确定它相应的字母成绩

00:01:31.890 --> 00:01:34.160
例如 70 分属于 A 吗？

00:01:35.170 --> 00:01:39.980
如果该科目的其它分数都比它高 那 70 就不是 A

00:01:39.980 --> 00:01:43.950
但如果该科目难度较高 其他分数都比它低

00:01:43.950 --> 00:01:45.050
那 70 就可能是 A

00:01:46.330 --> 00:01:50.310
我要做的就是 写出一个函数

00:01:50.310 --> 00:01:53.900
使其载入某一科的分数后 返回其转换后的字母分数

00:01:55.080 --> 00:02:00.670
然后 我要调用 df.apply(f) 在整个 DataFrame 中调用该函数

00:02:00.670 --> 00:02:04.160
apply 函数还有访问参数 因此 如有需要

00:02:04.160 --> 00:02:07.420
你还可以写一个每次仅进行一行运算的函数

00:02:07.420 --> 00:02:11.210
上节课中 我们写了标准化单个 pandasSeries 的函数

00:02:11.210 --> 00:02:14.636
也就是 将每个值转换为

00:02:14.636 --> 00:02:17.520
高于或低于平均值的标准偏差值

00:02:17.520 --> 00:02:20.890
现在 我需要你通过 apply 函数对 DataFrame 的每一列进行标准化

