WEBVTT
Kind: captions
Language: ar

00:00:00.220 --> 00:00:03.860
،وبمجرد أنك أنشأت إطار بيانات
كيف ستصل إلى عناصره؟

00:00:03.860 --> 00:00:06.780
على سبيل المثال، أستخدمُ
نفس بيانات الركاب التي رأيتَها سابقًا

00:00:06.780 --> 00:00:09.160
بحيث يحتوي العمود names على أسماء
.المحطات

00:00:10.220 --> 00:00:14.830
كما سـأستخدم وسيطة الفهرس
.لإضافة التواريخ، كفهارس row

00:00:14.830 --> 00:00:18.250
،وعندما أُلقي نظرة على إطار البيانات
،سيعرضه دفتر ملاحظات iPython كجدول

00:00:18.250 --> 00:00:20.540
بأسماء الأعمدة وفهارس
.row المناسبة

00:00:21.580 --> 00:00:24.200
ويشبه الوصول إلى صف واحد من
إطار للبيانات

00:00:24.200 --> 00:00:26.128
.الوصول إلى عنصر فردي من متسلسلة

00:00:26.128 --> 00:00:30.120
تستخدمُ .loc
.للوصول إلى الصفوف حسب مؤشراتها

00:00:30.120 --> 00:00:32.970
ولهذا السبب ستُخرج لي هذه التعليمة البرمجية
.الصف الثاني من إطار البيانات

00:00:34.060 --> 00:00:37.930
وبالمثل، يمكنك استخدام iloc
للوصول إلى الصفوف حسب الموضع، ولهذا

00:00:37.930 --> 00:00:40.110
ستخرج لي هذه التعليمة البرمجية
.الصف الأخير من إطار البيانات

00:00:41.180 --> 00:00:44.710
،وللوصول إلى عنصر فردي
يمكنك أيضًا استخدام loc وiloc، ولكن

00:00:44.710 --> 00:00:47.040
،في هذه المرة
.للإشارة إلى صف وعمود

00:00:48.050 --> 00:00:54.030
على سبيل المثال، تُخرج iloc عند الموضع 0،3
.العنصر الخاص بالصف 0 والعمود 3

00:00:54.030 --> 00:00:58.390
وبالمثل، باستخدام .loc، يمكنني
تحديد تاريخ ووحدة

00:00:58.390 --> 00:01:00.640
والحصول على القيمة الموافقة 
.لذلك التاريخ والوحدة

00:01:01.860 --> 00:01:04.800
ويمكنك أيضًا الوصول إلى الأعمدة
.باستخدام الأقواس المربعة

00:01:04.800 --> 00:01:07.320
ولهذا السبب
ستخرج لي هذه التعليمة البرمجية

00:01:07.320 --> 00:01:11.980
العمود الخاص بالوحدة R006 فقط ويمكنك أن ترى
.بداية العمود هنا

00:01:11.980 --> 00:01:15.030
،إذا بدأت تشعر أنه يتعذر عليك تعقب ذلك
،فلا تقلق

00:01:15.030 --> 00:01:18.560
فكل ذلك متاح في ورقة الإرشادات المتوفرة
.في القسم القابل للتنزيل

00:01:18.560 --> 00:01:23.010
ويمكنك أيضًا استخدام .values للحصول على صفيف NumPy
ثنائي الأبعاد يحتوي على القيم من

00:01:23.010 --> 00:01:26.030
إطار البيانات فقط
.وليس أسماء الأعمدة أو فهارس row

00:01:27.040 --> 00:01:30.700
بالطبع سينبغي عليك الاهتمام بأنواع
.البيانات إذا قمت بهذا

00:01:30.700 --> 00:01:33.550
وأحد أسباب ذلك
إذا أردتَ استخراج متوسط جميع القيم

00:01:33.550 --> 00:01:37.190
بدلاً من متوسط 
.كل صف أو كل عمود

00:01:37.190 --> 00:01:40.150
هذه العملية غير مدعومة لإطارات بيانات متسلسلات
.Panda

00:01:40.150 --> 00:01:44.500
ولكن يمكنك استدعاء .mean
.بصفيف NumPy باستخدام .values

00:01:44.500 --> 00:01:48.190
في الشاشة التالية، ستحصل على
.فرصة لتجربة إطارات البيانات

00:01:48.190 --> 00:01:51.450
كما أنني أريد الحصول على بعض تمارين
استخدام إطارات البيانات

00:01:51.450 --> 00:01:55.040
من خلال إعادة كتابة إحدى الدوال التي كتبتَها سابقًا
.ولكن لإطارات البيانات هذه المرة

00:01:55.040 --> 00:01:58.580
يمكنك استدعاء .values ببساطة
ثم إعادة استخدام التعليمة البرمجية التي كتبتَها لصفائف

00:01:58.580 --> 00:01:59.826
.NumPy

00:01:59.826 --> 00:02:02.980
ولكني أوصي بأن تكتشف
أي العمليات التي نفذتَها سابقًا

00:02:02.980 --> 00:02:06.630
ستظل فعالة بإطارات البيانات
.وأيها ستستخدم .values لها

