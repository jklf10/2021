WEBVTT
Kind: captions
Language: zh-CN

00:00:00.360 --> 00:00:02.930
DataFrame 也支持向量化运算

00:00:02.930 --> 00:00:06.350
它们与 NumPy 二维数组的运行方式相似

00:00:07.400 --> 00:00:11.080
与 pandasSeries 类似 它根据索引和列名

00:00:11.080 --> 00:00:12.110
而不是根据位置将元素配对

00:00:12.110 --> 00:00:15.010
在下一个屏幕中 你将有机会进行不同的向量运算

00:00:15.010 --> 00:00:18.010
以了解它们的作用

00:00:18.010 --> 00:00:21.240
你还会进行相应的练习

00:00:21.240 --> 00:00:24.000
原始格式的地铁数据并不包括

00:00:24.000 --> 00:00:25.320
每小时的入站和出站人数

00:00:26.500 --> 00:00:30.320
它仅有出入站的总人数

00:00:30.320 --> 00:00:32.460
如果车站开始运营前 5 个小时的

00:00:32.460 --> 00:00:38.070
总入站人数分别为 10、40、60、65 和 85

00:00:38.070 --> 00:00:40.628
那么 第一个小时的入站人数应为 10

00:00:40.628 --> 00:00:44.410
当然 我们假设这是车站开启的第一个小时

00:00:44.410 --> 00:00:46.700
第二个小时的入站人数则是 30

00:00:46.700 --> 00:00:48.930
因为入站人数增加了 30 人 才使总人数由 10 增至 40

00:00:48.930 --> 00:00:53.510
余下的每小时入站人数分别是 20、5 和 20

00:00:53.510 --> 00:00:58.150
我们将出入站的总人数转换成每小时的出入站人数

00:00:58.150 --> 00:01:01.860
你可在下载区的文件中找到相关信息

00:01:01.860 --> 00:01:05.670
在接下来的练习中 你需要写出一个函数

00:01:05.670 --> 00:01:10.110
使其载入第一列为入站总人数 第二列为出站总人数的DataFrame

00:01:10.110 --> 00:01:13.640
然后 返回每小时出入站人数的DataFrame

00:01:13.640 --> 00:01:16.190
在这里 位移函数可能会对你有所帮助

00:01:16.190 --> 00:01:19.110
相关文件可在讲师注释的链接中找到

00:01:19.110 --> 00:01:21.140
但我建议大家自己尝试一下 以了解它的作用

