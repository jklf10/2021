WEBVTT
Kind: captions
Language: ar

00:00:00.160 --> 00:00:03.360
سأعرض كتابة التعليمة البرمجية
لدرجات اختبارين

00:00:03.360 --> 00:00:04.170
.وخمسة طلاب في إطار البيانات هذا

00:00:05.300 --> 00:00:07.840
أولاً، أعلمُ أني سأحتاج
،للحصول على متوسط كل عمود

00:00:07.840 --> 00:00:10.650
.وهو ما يمكنني الحصول عليه باسخدام grades_df.mean

00:00:10.650 --> 00:00:15.490
وهذا يتيح لي معرفة متوسط الاختبار 1 ومتوسط الاختبار 2 في
.متسلسلات Pandas

00:00:15.490 --> 00:00:18.170
كما أنني سألقي نظرة على
.إطار البيانات الأصلي هنا

00:00:18.170 --> 00:00:20.390
والآن، لمعايرة كل عمود
أرغب في،

00:00:20.390 --> 00:00:23.680
طرح متوسط كل
.عمود من ذلك العمود

00:00:23.680 --> 00:00:28.170
لهذا أرغب في طرح المتوسط الأول
،من كل قيمة في العمود الأول

00:00:28.170 --> 00:00:31.240
وأرغب في طرح المتوسط الثاني
.من كل قيمة في العمود الثاني

00:00:32.390 --> 00:00:34.690
ويعمل هذا بنفس الطريقة التي
.رأيتَ الإضافة تعمل بها

00:00:34.690 --> 00:00:38.129
سأقوم بطرح
.grades_df.meanمن grades_dr

00:00:38.129 --> 00:00:41.249
وبالتأكيد، بالنظر إلى
،أول درجتين للاختبار 1

00:00:41.249 --> 00:00:44.789
أرى درجة سلبية لخالد لأن
،درجته كانت أدنى من المتوسط

00:00:44.789 --> 00:00:47.916
وأرى درجة إيجابية لعمر
.لأن درجته كانت فوق المتوسط

00:00:47.916 --> 00:00:51.992
وبعد ذلك، أحتاج إلى تقسيم كل عمود حسب
،انحرافه المعياري الموافق

00:00:51.992 --> 00:00:53.592
.وهو ما يمكنني فعله بنفس الطريقة

00:00:53.592 --> 00:00:57.483
وأستخدم grades_df.std للحصول على الانحراف المعياري
لكل عمود، ثم

00:00:57.483 --> 00:01:01.307
أقسم إطار البيانات على المتسلسلات
لقسمة كل درجة اختبار على

00:01:01.307 --> 00:01:03.670
.انحرافها الموافق

00:01:03.670 --> 00:01:06.180
.وكالعادة، انتبه للأقواس

00:01:06.180 --> 00:01:07.310
،وبتشغيل هذا مجددًا

00:01:07.310 --> 00:01:11.430
يمكنني أن ألاحظ أن كل اختبار تم وضعه في
.وحدات انحراف معياري

00:01:11.430 --> 00:01:13.930
لاحظ أن هذه التعليمة البرمجية تبدو تمامًا مثل
التعليمة البرمجية المستخدمة لمعايرة

00:01:13.930 --> 00:01:16.710
متسلسلة
.واحدة

00:01:16.710 --> 00:01:20.440
وهذا جيد للغاية، ولكنك كما سترى
خلال دقيقة، فهذا نوع من الخداع

00:01:20.440 --> 00:01:24.720
نظرًا لزيادة تضمين معايرة كل
.صف

00:01:24.720 --> 00:01:27.020
ولهذا، كيف أتعامل مع
معايرة كل صف؟

00:01:27.020 --> 00:01:29.899
حسنًا، سألقي نظرة على
.إطار البيانات الأصلي مرة أخرى كمرجع

00:01:31.070 --> 00:01:33.770
وأعلم أنني سأحتاج
،للحصول على متوسط كل صف

00:01:33.770 --> 00:01:36.610
.ويمكنني الحصول عليه باسخدام axis = columns

00:01:36.610 --> 00:01:40.110
وتذكّر أن هذا يعني أن أحصل على
متوسط كل عمود

00:01:40.110 --> 00:01:42.250
.بما يتيح لي الحصول على متوسط كل صف

00:01:42.250 --> 00:01:46.150
وبالتأكيد، أتاح لي هذا الحصول على
.متوسط كل طالب في الاختبارين

00:01:46.150 --> 00:01:49.710
والآن أحتاج إلى طرح المتوسط الأول
،من الصف الأول لإطار البيانات

00:01:49.710 --> 00:01:52.560
والمتوسط الثاني
.من الصف الثاني وهكذا

00:01:52.560 --> 00:01:57.090
ومع ذلك، إذا حاولتُ استخدام دالة طرح grades_df من grades_df.mean
،مثلما فعلت منذ دقيقة

00:01:57.090 --> 00:02:00.880
فستحاول الدالة طرح كمية هذه القيم
من عمود واحد من إطار البيانات

00:02:00.880 --> 00:02:03.380
وهو ما لن ينجح بالفعل

00:02:03.380 --> 00:02:07.150
لأن مؤشرات هذه المتسلسلة
.لا تتطابق مع أسماء أعمدة إطار البيانات

00:02:07.150 --> 00:02:09.449
.ولهذا لن أحصل إلا على مجموعة من الطلبات

00:02:09.449 --> 00:02:12.840
وبدلاً من هذا، سأحتاج إلى استخدام دالة الطرح'\r\n'

00:02:12.840 --> 00:02:16.990
وتؤدي نفس مهمة علامة الطرح 
.ولكنها قد تستخدم وسيطة وصول أيضًا

00:02:16.990 --> 00:02:19.890
وفي هذه الحالة، يجب أن يكون الوصول عبارة عن
مؤشر لأني أرغب في مطابقة

00:02:19.890 --> 00:02:24.240
عناصر المتسلسلات مع عناصر
.إطار البيانات باستخدام فهارس row

00:02:24.240 --> 00:02:25.960
.وسأحاول تجربة هذا

00:02:25.960 --> 00:02:28.170
هنا يمكنني أن ألاحظ أن
القيم المدرجة في العمود واحد والعمود اثنين

00:02:28.170 --> 00:02:31.250
لها نفس
.القيمة المطلقة

00:02:31.250 --> 00:02:35.400
وهو ما يحدث عندما تطرح
.المتوسط من قيمتين فقط

00:02:35.400 --> 00:02:38.650
وسأطلق على متوسط إطار البيانات هذا
.اسم mean_diffs لاستخدامه لاحقًا

00:02:38.650 --> 00:02:41.430
وبعد ذلك، لتقسيم الانحراف المعياري
أحتاج إلى تعليمة برمجية شبيهة ،

00:02:41.430 --> 00:02:42.870
.جدًا بما سبق

00:02:42.870 --> 00:02:45.640
وسأحصل على الانحراف المعياري
لعمود الدرجات مع المحور المساوي

00:02:45.640 --> 00:02:49.090
للأعمدة بحيث أحصل على
.الانحراف المعياري لكل عمود

00:02:49.090 --> 00:02:52.860
ثم سأستخدم mean_diffs.div
لقسمة إطار بيانات mean_diff

00:02:52.860 --> 00:02:54.709
.على متسلسلة الانحراف المعياري

00:02:55.880 --> 00:02:59.490
ثم سأستخدم axis='index لمطابقة
.العناصر على أساس فهرسي row

00:03:00.590 --> 00:03:02.340
يمكنك أن تلاحظ هنا
أن النتائج متطابقة

00:03:02.340 --> 00:03:05.000
لكل صف، وهو ما يحدث مرة أخرى
.نظرا لوجود عمودين اثنين فقط

00:03:06.340 --> 00:03:09.890
والآن تبدو هذه التعليمة البرمجية تمامًا مثل
التعليمة البرمجية المستخدمة لمعايرة

00:03:09.890 --> 00:03:14.870
كل عمود، باستثناء أن وسيطة المحور كانت معاكسة
.للوسيطة الافتراضية

00:03:14.870 --> 00:03:17.950
وهذا شيء يجب مراعاته
.عند كتابة تعليمات Pandas البرمجية

00:03:17.950 --> 00:03:21.360
إذا كنت تنفذ عملية شائعة للغاية
فمن المرجح ألا تحتاج إلى تحديد

00:03:21.360 --> 00:03:24.590
محور لأن المحور الافتراضي
.سيكون مناسبًا لك

00:03:24.590 --> 00:03:27.410
ومن الناحية الاخرى، إذا كنت تقوم بشيء غير متوقع
قليلاً مثل معايرة

00:03:27.410 --> 00:03:30.720
كل صف بدلاً من
،كل عمود من إطار بيانات

00:03:30.720 --> 00:03:34.020
فستحتاج إلى تحديد محاور غير افتراضية
.في المهمة بالكامل

