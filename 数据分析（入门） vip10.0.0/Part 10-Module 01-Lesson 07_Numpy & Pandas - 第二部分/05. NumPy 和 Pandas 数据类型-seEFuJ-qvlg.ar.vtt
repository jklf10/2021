WEBVTT
Kind: captions
Language: ar

00:00:00.350 --> 00:00:03.872
في الدرس الأخير، رأيتَ أن صفائف num pi
تتضمن النوع d وهو نوع

00:00:03.872 --> 00:00:05.352
.كل عنصر في الصفيف

00:00:05.352 --> 00:00:09.253
على سبيل المثال النوع d من
.هذا الصفيف هو int64

00:00:09.253 --> 00:00:11.360
.وتعني Int64 عددًا صحيحًا من 64 بت

00:00:12.985 --> 00:00:16.024
والآن ينطبق هذا أيضًا على
.الصفائف ثنائية الأبعاد

00:00:16.024 --> 00:00:19.341
من المتوقع أن يكون
.لكل عنصر في الصفيف نفس النوع

00:00:19.341 --> 00:00:23.219
وقد يسهل هذا استخدام صفائف num pi
التقليدية لعرض

00:00:23.219 --> 00:00:25.405
.محتويات ملف CSV

00:00:25.405 --> 00:00:29.282
على سبيل المثال، افترض أني حاولتُ إنشاء
صفيف num pi لعرض بيانات تسجيل الطلاب

00:00:29.282 --> 00:00:31.565
.من الدرس الأول

00:00:31.565 --> 00:00:34.530
لقد أعدت إنشاء
.جزء صغير من تلك البيانات هنا

00:00:34.530 --> 00:00:37.300
،وعلى الرغم من أنني عندما أنشأتُ الصفيف
أدخلتُ الأعداد الصحيحة والكميات

00:00:37.300 --> 00:00:41.650
،بدون علامات اقتباس
.تم تحويل كل عنصر إلى سلسلة

00:00:41.650 --> 00:00:46.330
،هذا النوع d يُعد s14 أيضًا
.وهو ما يعني أن أقصى طول للسلاسل هو 14

00:00:46.330 --> 00:00:51.170
ومن الواضح أنه من غير المنطقي استخدام
،(متوسط السلاسل، مثل cancelled (ألغى

00:00:51.170 --> 00:00:55.300
ولكن قد يكون من المنطقي استخدام متوسط
.العمود days_to_cancel

00:00:55.300 --> 00:00:58.910
يُعتبر العمود الثالث هو عمود days_to_cancel
.ولهذا يمكنني الوصول إليه بمثل هذه الطريقة

00:01:00.260 --> 00:01:04.828
ومع ذلك، إذا استخرجت متوسط هذا العمود
.فلن تنجح

00:01:04.828 --> 00:01:09.320
وبدلاً من هذا، يشير صفيف num pi إلى أنه لا يمكنه
إجراء عملية التقليل مع نوع مرن

00:01:09.320 --> 00:01:12.230
وهو ما يعني أن الصفيف لا يعلم
كيفية استخراج المتوسط

00:01:12.230 --> 00:01:14.070
.عندما لا تكون جميع القيم أرقامًا

00:01:14.070 --> 00:01:18.630
وهذه ميزة تتفوق بها إطارات بيانات متسلسلات panda على
.صفائف num pi ثنائية الأبعاد

00:01:18.630 --> 00:01:21.710
كما ان إطار البيانات هو بنية بيانات ثنائي الأبعاد
ولكن من المفترض أن يكون

00:01:21.710 --> 00:01:23.870
كل عمود به من
.نوع مختلف

00:01:24.870 --> 00:01:29.030
وهناك ميزة أخرى وهي وجود مؤشرات بإطارات البيانات
.مشابهة لنظريات متسلسلات Panda

00:01:29.030 --> 00:01:32.050
هناك قيمة مؤشر
.لكل صف واسم لكل عمود

00:01:33.350 --> 00:01:36.990
،ولهذا السبب
.سأنشئ إطار بيانات Pandas من هذه البيانات بدلاً من ذلك

00:01:36.990 --> 00:01:40.150
ولا يمكنني القيام بذلك بتمرير أسماء أعمدة تخطيط
قاموس

00:01:40.150 --> 00:01:42.710
.إلى قوائم من القيم لذلك القاموس

00:01:42.710 --> 00:01:46.450
ولهذا السبب، قد يكون أحد المفاتيح في القاموس
هو account_key وقد تكون القائمة

00:01:46.450 --> 00:01:50.160
عبارة عن جميع قيم العمود
.account_key

00:01:50.160 --> 00:01:52.740
.وبالمثل للأعمدة الأخرى

00:01:52.740 --> 00:01:56.390
والآن بعدما ألقيت نظرة على إطار
.البيانات، فإنه يُعرض في جدول رائع

00:01:56.390 --> 00:01:58.191
ترد أسماء الأعمدة في أعلى الجدول

00:01:58.191 --> 00:02:00.870
وتكون مؤشرات الأدوار أرقامًا صحيحة
.تبدأ من صفر

00:02:00.870 --> 00:02:03.740
هناك بعض الطرق الأخرى لإنشاء
،إطارات بيانات Pandas أيضًا

00:02:03.740 --> 00:02:04.940
.وهو ما ستلقي نظرة عليه قريبًا

00:02:06.100 --> 00:02:08.000
والآن، إذا استخرجت متوسط
،إطار البيانات

00:02:08.000 --> 00:02:11.610
سيتم استخراج المتوسط لكل عمود
.رقمي وتجاهل المتوسطات الأخرى

00:02:11.610 --> 00:02:15.690
ويخص udacity العمود الرقمي الموضح هنا
"الذي يُشير فيها الرقم واحد إلى القيم "صحيح

00:02:15.690 --> 00:02:17.980
."ويشير الرقم صفر إلى القيم "خطأ

00:02:17.980 --> 00:02:21.680
وستلاحظ أن Pandas لم تستخرج
،متوسط إطار البيانات بالكامل هنا

00:02:21.680 --> 00:02:23.430
.ولكن استخرجت متوسط كل عمود

00:02:23.430 --> 00:02:26.240
وحيث أنه من المفترض أن يكون كل عمود
،من نوع مختلف

00:02:26.240 --> 00:02:28.760
.فهذا يبدو منطقيًا أكثر لـ Pandas

00:02:28.760 --> 00:02:32.680
كما يمكنك أيضًا استخدام وسيطة المحور
،لاستخراج متوسط كل صف بدلاً من ذلك

00:02:32.680 --> 00:02:34.240
،على الرغم من أن هذا لن ينجح في هذه الحالة

00:02:34.240 --> 00:02:36.760
لأن كل صف يحتوي على بعض
.البيانات غير الرقمية

