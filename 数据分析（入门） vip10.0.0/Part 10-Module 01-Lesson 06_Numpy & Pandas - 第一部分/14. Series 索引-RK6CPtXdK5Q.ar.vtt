WEBVTT
Kind: captions
Language: ar

00:00:00.180 --> 00:00:04.750
إذن، ما مزايا استخدام إحدى متسلسلات panda
بدلاً من صفيف numpy؟

00:00:04.750 --> 00:00:07.590
لقد ذكرتُ سابقًا أن متسلسلات panda&lrm;
تتميز ببعض الوظائف الإضافية غير

00:00:07.590 --> 00:00:09.270
.المتوفرة في صفائف numpy

00:00:09.270 --> 00:00:11.230
.على سبيل المثال، دالة الوصف

00:00:12.340 --> 00:00:15.410
ومع ذلك، يتمثل الاختلاف الرئيسي بين متسلسلات Panda
وصفائف numpy

00:00:15.410 --> 00:00:19.920
في تميز متسلسلات Panda&rlm;
.&lrm; بشيء ما يُسمى المؤشر

00:00:19.920 --> 00:00:21.800
.دعنا نلق نظرة أخرى على أحد الأمثلة

00:00:21.800 --> 00:00:23.970
،خلال هذا الدرس
كنا نطلع على بيانات خاصة

00:00:23.970 --> 00:00:26.880
بمجموعة من الدول المختلفة، وقد أنشأتُ
صفيفًا لحفظ نقاط البيانات الفعلية

00:00:26.880 --> 00:00:30.210
وصفيفًا 
.لحفظ أسماء الدول

00:00:30.210 --> 00:00:33.210
،في متسلسلات panda
قد أُنشئُ متسلسلة واحدة فقط وأستخدم

00:00:33.210 --> 00:00:36.430
نقاط البيانات
.كقيم لهذه المتسلسلة

00:00:36.430 --> 00:00:39.960
وقد أستخدم أسماء الدول
.كمؤشر للمتسلسلة

00:00:39.960 --> 00:00:43.510
والآن سأحذفُ تعليمات صفيف numpy البرمجية وأطبعُ
.المتسلسلة

00:00:43.510 --> 00:00:46.850
ويمكنك أن ترى هنا أن متسلسلة Panda تطابق
كل قيمة مؤشر

00:00:46.850 --> 00:00:48.980
.بنقطة البيانات الموافقة

00:00:48.980 --> 00:00:52.910
وقد قلتُ سابقًا أن صفائف numpy
.تُشبه نسخة سريعة من قوائم Python

00:00:54.100 --> 00:00:59.640
وبالمثل، تشبه متسلسلة panda
.نقطة تقاطع بين قائمة وقاموس

00:00:59.640 --> 00:01:04.250
ففي القوائم، تُخزن العناصر بالترتيب
.وتصلُ إليها حسب مواقعها

00:01:04.250 --> 00:01:07.350
ولقد تأكدت للتو
.من صحة هذا بالنسبة للمتسلسلات أيضًا

00:01:07.350 --> 00:01:10.940
حيث تُخزن هذه القيم أيضًا بالترتيب
.ويمكنك الوصول إليها حسب مواقعها

00:01:12.060 --> 00:01:13.520
،وفي القاموس، من ناحية أخرى

00:01:13.520 --> 00:01:15.930
يمكنك الحصول على مفتاح مثل
اسم دولة وقيمة

00:01:15.930 --> 00:01:19.990
مثل متوسط عمر
.ويمكنك البحث عن القيم حسب المفاتيح

00:01:19.990 --> 00:01:23.620
وقد رأيتَ سابقًا
أن متوسط عمر التعليمات البرمجية

00:01:23.620 --> 00:01:28.070
عند القيمة صفر سينتج عنه متوسط العمر عند 
.الموضع صفر في المتسلسلة

00:01:28.070 --> 00:01:31.300
كما تتميز Pandas أيضًا بسمة تُسمى
التجول تتيح لك البحث عن القيم

00:01:31.300 --> 00:01:33.240
.حسب المؤشر الخاص بها

00:01:33.240 --> 00:01:38.550
،وإذا قمت بتشغيل life_expectancy.loc Angola
فسوف أرى متوسط العمر لأنغولا

00:01:38.550 --> 00:01:43.015
بدون الحاجة لمعرفة موقع
.أنغولا في القائمة

00:01:43.015 --> 00:01:46.165
ولهذا، ما الذي سيحدث إذا أنشأتَ
متسلسلة بدون تحديد مؤشر

00:01:46.165 --> 00:01:46.935
مثلما فعلنا سابقًا؟

00:01:48.065 --> 00:01:51.995
حسنًا، تُستخدم الأرقام صفر وواحد واثنان
وما إلى ذلك كمؤشرات بشكل

00:01:51.995 --> 00:01:53.375
.افتراضي

00:01:53.375 --> 00:01:57.005
ولهذا، عندما وصلتُ سابقًا
،إلى العناصر باستخدام الأقواس المربعة

00:01:57.005 --> 00:02:00.870
لم يتضح ما إذا كنتُ أصل إليها حسب
.المؤشر أو الموقع

00:02:00.870 --> 00:02:04.060
وفي هذه المرحلة، يجب أن تفهم أن
الأقواس المربعة تصل إلى

00:02:04.060 --> 00:02:05.250
العناصر حسب مواضعها

00:02:05.250 --> 00:02:09.500
لأنه لا توجد قيمة في متسلسلة متوسط العمر
.بالمؤشر صفر

00:02:09.500 --> 00:02:12.975
وأنا أُفضل أن أكون أكثر وضوحًا
.عند استخدام المتسلسلات على الرغم من ذلك

00:02:12.975 --> 00:02:15.850
تتميز متسلسلات panda بسمة
توافق سمة القفل

00:02:15.850 --> 00:02:19.480
قم باستدعاء ميزة iloc للوصول إلى 
.العناصر حسب مواضعها

00:02:19.480 --> 00:02:21.820
وهذا السطران من التعليمات البرمجية
يؤديان نفس المهمة، ولكني أعتقد أن

00:02:21.820 --> 00:02:24.960
الإصدار الذي يستخدم iloc أوضح
.قليلاً

00:02:26.300 --> 00:02:27.996
.وبالمناسبة، إليك ملاحظة خاصة بالمصطلحات

00:02:27.996 --> 00:02:30.060
،في صفيف numpy هذا

00:02:30.060 --> 00:02:34.220
سيذكر الكثير من الأشخاص شيئًا ما مثل
.دولة ألبانيا عند المؤشر صفر

00:02:34.220 --> 00:02:39.210
وسيقومون بالاتصال باستخدام
أقواس مربعة للوصول إلى عنصر صفيف

00:02:39.210 --> 00:02:41.140
.يمثل مؤشرًا في الصفيف

00:02:41.140 --> 00:02:43.880
وقد كنت أحاول تجنب
هذه المصلحات

00:02:43.880 --> 00:02:48.530
وأدعو هذا الموضع "صفرًا" بدلاً من
المؤشر صفر، لأنه في متسلسلات panda، لا تتطابق

00:02:48.530 --> 00:02:51.200
المؤشرات
.والمواضع

00:02:51.200 --> 00:02:54.410
ولكن تذكر أنك قد تسمع
المصطلح "مؤشر" يُستخدم بصورة ثابتة

00:02:54.410 --> 00:02:55.520
.في مجالات أخرى

00:02:55.520 --> 00:02:58.140
،في الشاشة التالية
أرغب في إعادة كتابة الدالة max_employment

00:02:58.140 --> 00:03:00.710
التي كتبتَها
.بداية هذا الدرس

00:03:00.710 --> 00:03:03.710
وهي التي تبحث عن أعلى معدل للتوظيف
في بعض البيانات المحددة واسم

00:03:03.710 --> 00:03:05.970
الدولة
.التي تشهد معدل التوظيف المشار إليه

00:03:05.970 --> 00:03:10.250
وهذه المرة، سيكون الإدخال متسلسلة فردية
بدلاً من صفائف numpy وسيكون

00:03:10.250 --> 00:03:13.400
مؤشر هذه المتسلسلة
.هو أسماء الدول

00:03:13.400 --> 00:03:16.230
.حاول استخدام دالة argmax بمتسلسلات panda

00:03:16.230 --> 00:03:18.820
ويوجد رابط المستندات
.في ملاحظات المدرب

