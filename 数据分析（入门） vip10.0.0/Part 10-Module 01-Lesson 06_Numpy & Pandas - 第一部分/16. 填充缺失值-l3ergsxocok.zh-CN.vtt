WEBVTT
Kind: captions
Language: zh-CN

00:00:00.390 --> 00:00:02.796
你刚刚看到 如果把两个索引值不同的 Series 相加

00:00:02.796 --> 00:00:05.960
其结果就是 NaN

00:00:05.960 --> 00:00:08.620
但在大多数情况下 我可能不希望

00:00:08.620 --> 00:00:11.360
输出的 Series 中出现 NaN 或非数字

00:00:11.360 --> 00:00:14.950
所以 我怎样才能使结果中不出现 NaN？

00:00:14.950 --> 00:00:19.000
针对此类问题 在 Pandas 中几乎总能找到相应的解决方法 

00:00:19.000 --> 00:00:21.740
但要找到这个方法可能比较困难

00:00:21.740 --> 00:00:26.490
我的方法就是在 Google 搜索 Pandas 如何删除缺失值

00:00:26.490 --> 00:00:29.690
第二个搜索结果是 dropna 看起来不错

00:00:29.690 --> 00:00:33.050
我在文件中发现的第一点是 

00:00:33.050 --> 00:00:35.020
它在DataFrame上运行 而不是 Series

00:00:35.020 --> 00:00:37.430
你会在下一节课中学到DataFrame (Dataframe)

00:00:37.430 --> 00:00:40.480
Pandas 的文件有时会有不足之处

00:00:40.480 --> 00:00:44.640
当我看到这个文件时 我在想 dropna 是否也可以在 Series 上使用

00:00:44.640 --> 00:00:47.260
我决定试一下 结果是可以的

00:00:47.260 --> 00:00:50.400
这个文件还提到了数轴 (axis)

00:00:50.400 --> 00:00:53.710
这个你也会在下节课中学到

00:00:53.710 --> 00:00:57.500
目前来看 这个函数消除部分或全部缺失数据标签

00:00:57.500 --> 00:01:00.400
的功能听起来就很不错了

00:01:00.400 --> 00:01:03.998
所以我试着把加法的结果保存至变量的 sum_result

00:01:03.998 --> 00:01:07.830
然后 我运行 sum_result.dropna

00:01:07.830 --> 00:01:11.680
我得到了一个缺失值被删除的新 Series

00:01:11.680 --> 00:01:15.600
在 Pandas 中 解决这个问题还有其它方法

00:01:15.600 --> 00:01:16.160
例如

00:01:16.160 --> 00:01:19.940
可以在进行加法计算前将缺失值视为 0

00:01:19.940 --> 00:01:23.160
这样以来 两个 Series 相加后

00:01:23.160 --> 00:01:26.320
索引 a 的结果就是 1 因为 Series 2 中的这个值为 0

00:01:26.320 --> 00:01:29.370
看看你能否用这个方法解决这个问题

00:01:29.370 --> 00:01:33.480
如果你能找到解决 NaN 问题的第三种方法 那也很好

00:01:33.480 --> 00:01:37.280
通过 Google 搜索来解决此类问题可能比较难

00:01:37.280 --> 00:01:38.930
但也非常重要

00:01:38.930 --> 00:01:40.810
Pandas 有很多功能

00:01:40.810 --> 00:01:43.090
这节课无法讲解所有功能

00:01:43.090 --> 00:01:44.430
如果不能马上找到你需要的功能 

00:01:44.430 --> 00:01:46.930
你可以尝试一些其它的查询方法

00:01:46.930 --> 00:01:49.060
如果你无法解决这个问题 可以直接观看解答视频

00:01:49.060 --> 00:01:51.820
你可以利用下一个屏幕中的编程测试

00:01:51.820 --> 00:01:53.700
来检查你的解决方案是否有效

