WEBVTT
Kind: captions
Language: zh-CN

00:00:00.200 --> 00:00:02.310
我来解释一下 为什么 Numpy 和 pandas 非常有用

00:00:02.310 --> 00:00:04.790
我要重新回顾上节课的一些代码

00:00:04.790 --> 00:00:07.400
我们看一下 如果用 pandas 编写会是什么样子

00:00:07.400 --> 00:00:10.980
这个代码将 CSV 文件读取成列表

00:00:10.980 --> 00:00:13.420
然后 从列表中读取唯一账号

00:00:13.420 --> 00:00:15.920
我在完整的每日参与文件上运行这个代码

00:00:15.920 --> 00:00:20.080
这个文件比较大 pandas 适合处理较大的文件

00:00:20.080 --> 00:00:24.900
运行代码需要一段时间将文件加载为 CSV

00:00:24.900 --> 00:00:26.330
终于结束了

00:00:26.330 --> 00:00:29.230
我们的视频剪掉了加载时间

00:00:29.230 --> 00:00:31.220
事实上 它花了一分钟左右

00:00:31.220 --> 00:00:35.250
之后 读取去重后的学生数据也需要一段时间

00:00:35.250 --> 00:00:40.700
事实上这个需要六秒钟 现在结束了

00:00:40.700 --> 00:00:42.640
之后你会看到 如果我用 pandas

00:00:42.640 --> 00:00:44.580
代码的运行时间会大大缩短

00:00:44.580 --> 00:00:47.910
在 pandas 中 这个也需要三行代码

00:00:47.910 --> 00:00:49.970
一个是导入语句

00:00:49.970 --> 00:00:54.630
第二个 我会利用 pandas 的内置 read_csv 函数读取文件

00:00:54.630 --> 00:00:58.500
最后 我可以设置查看 acct 列

00:00:58.500 --> 00:01:02.470
然后 用 pandas 的内置 unique 函数读取唯一账号

00:01:02.470 --> 00:01:07.370
可以看到 pandas 有很多使用方便的函数

00:01:07.370 --> 00:01:10.130
比如 之前我们编写的 read_csv 和 unique 函数

00:01:10.130 --> 00:01:13.530
在这三行代码中 运行时间最长的就是导入 pandas 库的语句

00:01:13.530 --> 00:01:17.560
第一次运行时需要十几秒钟

00:01:17.560 --> 00:01:20.780
对读取一个库来说 这个时间已经很长了

00:01:20.780 --> 00:01:24.980
但其他代码的运行速度极快 弥补了这个不足

00:01:24.980 --> 00:01:28.930
之后 将读取 CSV 的数据只需要几秒钟

00:01:28.930 --> 00:01:31.380
不像之前 需要等一分钟

00:01:31.380 --> 00:01:34.610
而获取唯一账号的速度更快

