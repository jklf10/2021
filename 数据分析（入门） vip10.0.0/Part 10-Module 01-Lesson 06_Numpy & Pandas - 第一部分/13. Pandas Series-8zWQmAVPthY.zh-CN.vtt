WEBVTT
Kind: captions
Language: zh-CN

00:00:00.380 --> 00:00:04.680
既然你们已经熟悉了 NumPy 数组 我们来了解一下 Pandas Series

00:00:04.680 --> 00:00:07.100
Series 与 NumPy 数组类似

00:00:07.100 --> 00:00:09.710
但它具有其它功能

00:00:09.710 --> 00:00:13.730
比如 如果你有一个名为 s 的 Series 

00:00:13.730 --> 00:00:17.910
那么 s.describe 函数可以打出平均值、标准偏差、中位数以及

00:00:17.910 --> 00:00:21.970
与 Series 有关的其它统计数据 但 NumPy 数组没有这个函数

00:00:21.970 --> 00:00:25.120
Series 还有一些其它优于数组的地方

00:00:25.120 --> 00:00:25.760
稍后我会一一讲解

00:00:26.910 --> 00:00:30.310
现在 我想先讲 Series 和数组的相同点

00:00:31.340 --> 00:00:33.930
你刚刚学到在 Numpy 数组上的运算

00:00:33.930 --> 00:00:36.420
也适用于 Pandas Series

00:00:36.420 --> 00:00:40.030
你可以利用中括号获取元素

00:00:40.030 --> 00:00:42.460
可以得到单个元素或一个元素切片

00:00:42.460 --> 00:00:44.950
你可以遍历 Series

00:00:44.950 --> 00:00:48.610
可以调用同样的函数

00:00:48.610 --> 00:00:52.220
比如平均值和最大值 你也可以用向量运算

00:00:52.220 --> 00:00:55.590
与 NumPy 一样 Pandas Series 也使用 C 语言

00:00:55.590 --> 00:00:57.700
因此它比 Python 列表的运算更快

00:00:58.990 --> 00:01:00.130
在下一个屏幕中

00:01:00.130 --> 00:01:03.000
你会看到一些用 Pandas Series 运行的测试代码

00:01:04.180 --> 00:01:07.770
我还希望你编写一个将两个 Series 作为参数的函数

00:01:07.770 --> 00:01:11.190
例如 2007 年的预期寿命和 GDP

00:01:11.190 --> 00:01:15.480
这两个数据及其对应的国家名称排列顺序相同

00:01:15.480 --> 00:01:18.070
这个函数应执行以下的简单规则

00:01:18.070 --> 00:01:21.430
来检查这两个变量是否具有相关性

00:01:21.430 --> 00:01:24.120
该函数将查看 当某一国家的预期寿命高于平均值时

00:01:24.120 --> 00:01:28.730
其 GDP 是否也高于平均值？

00:01:28.730 --> 00:01:29.780
反之亦然

00:01:29.780 --> 00:01:33.090
若预期寿命低于平均值 那么 GDP 是否也低于平均值？

00:01:34.480 --> 00:01:36.390
你的函数应该返回两个数字

00:01:36.390 --> 00:01:38.920
第一个数字是

00:01:38.920 --> 00:01:43.330
两个值都低于或高于平均值的国家数量

00:01:43.330 --> 00:01:46.560
第二个是一个值低于平均值 

00:01:46.560 --> 00:01:48.970
另一个值高于平均值的国家数量

00:01:48.970 --> 00:01:52.560
所以 这两个数字相加应该等于国家总数

00:01:52.560 --> 00:01:55.840
之前提到 输入应该是 Pandas Series

00:01:55.840 --> 00:02:00.270
但你解决这个问题的代码和使用 NumPy 数组时的代码相同

00:02:00.270 --> 00:02:02.780
为了使你的代码更简洁 我给你一个小提示

00:02:02.780 --> 00:02:05.700
在 Python 中 你可以把布尔值相加

00:02:05.700 --> 00:02:09.340
真值被视为 1 假值被视为 0

00:02:09.340 --> 00:02:12.440
所以 在 Python 中 真值 + 真值 = 2

00:02:12.440 --> 00:02:16.970
我会这样解决这个问题 先创建一个布尔数组

00:02:16.970 --> 00:02:19.760
若两各个值都低于或高于平均值

00:02:19.760 --> 00:02:22.520
则布尔值为真 否则为假

00:02:22.520 --> 00:02:25.840
然后我计算这个数组的总和

00:02:25.840 --> 00:02:26.430
从而得出满足条件的国家数量

