WEBVTT
Kind: captions
Language: en

00:00:00.130 --> 00:00:02.990
I'll start off by calculating how many
of the pairs of data points are in

00:00:02.990 --> 00:00:05.480
the same direction relative
to their respective means.

00:00:05.480 --> 00:00:07.770
That is, both above the mean or
both below the mean.

00:00:09.000 --> 00:00:12.600
To do this, I'll first create
an array called is_same_direction,

00:00:12.600 --> 00:00:15.650
which contains a boolean for
each pair of data points.

00:00:15.650 --> 00:00:18.830
Now there are two cases for how the
pairs could be in the same direction.

00:00:18.830 --> 00:00:21.570
They could either be both above their
means or both below their means.

00:00:22.950 --> 00:00:26.580
So I'll create two separate arrays
of booleans for those two cases.

00:00:26.580 --> 00:00:29.700
I can use this code to check
whether each value of variable1 is

00:00:29.700 --> 00:00:32.560
greater than the mean of variable1, and

00:00:32.560 --> 00:00:35.900
each value of variable2 is greater
than the mean of variable2.

00:00:35.900 --> 00:00:38.490
Again make sure you add the parentheses.

00:00:38.490 --> 00:00:42.880
It's important to do the comparisons
first and then do the logical and.

00:00:42.880 --> 00:00:46.250
The code to check whether both variables
are below the mean is identical

00:00:46.250 --> 00:00:49.230
except with less than signs
instead of greater than signs.

00:00:49.230 --> 00:00:53.610
Then two variables are in the same
direction, if they are both above or

00:00:53.610 --> 00:00:55.610
both below their means.

00:00:55.610 --> 00:00:57.476
Like I mentioned in
the instruction video,

00:00:57.476 --> 00:01:00.310
you can add up an array of booleans
to see how many of them were true.

00:01:00.310 --> 00:01:04.321
So I can find the number of pairs that
are in the same direction by calculating

00:01:04.321 --> 00:01:05.961
is the same direction dot sum.

00:01:09.351 --> 00:01:14.017
Finally, I can calculate nom different
direction by taking the len of variable

00:01:14.017 --> 00:01:18.020
one minus the number of
pairs in the same direction.

00:01:18.020 --> 00:01:20.980
Last, I'll need to
return the two numbers.

00:01:20.980 --> 00:01:24.940
Now if you ran this function for the
life expectancy and GDP arrays given in

00:01:24.940 --> 00:01:29.115
the programming exercise, you should
have seen that there were 17 pairs that

00:01:29.115 --> 00:01:32.485
went in the same direction, and
three that went in different directions.

00:01:32.485 --> 00:01:35.885
The fact that most of the pairs went in
the same direction indicates that these

00:01:35.885 --> 00:01:38.165
two variables are positively correlated.

00:01:38.165 --> 00:01:41.655
That is, when one is higher,
the other tends to be higher as well.

00:01:41.655 --> 00:01:45.150
If the first number had been small,
and the second number had been large,

00:01:45.150 --> 00:01:48.100
that would indicate that the variables
are negatively correlated.

00:01:48.100 --> 00:01:51.450
When one tends to be large,
the other tends to be small.

00:01:51.450 --> 00:01:53.580
And if the two numbers
had been roughly equal,

00:01:53.580 --> 00:01:56.670
then that indicates that there
might not be a strong relationship.

00:01:56.670 --> 00:01:58.420
It's about equally likely for

00:01:58.420 --> 00:02:02.080
one variable to be positively correlated
with the other as negatively correlated.

