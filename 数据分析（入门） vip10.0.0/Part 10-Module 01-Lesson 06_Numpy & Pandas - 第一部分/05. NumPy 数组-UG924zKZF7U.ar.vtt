WEBVTT
Kind: captions
Language: ar

00:00:00.230 --> 00:00:03.110
سأوضح لك كيفية كتابة الدالة
max_employment أولاً، ثم

00:00:03.110 --> 00:00:06.780
سأتناول الإخراج الذي من المفترض أنك اطلعت عليه
.من التعليمة البرمجية الاختبارية المقدمة

00:00:06.780 --> 00:00:09.890
وسأوضح كيفية تشغيل
.التعليمة البرمجية بالكامل في دفتر ملاحظات iPython

00:00:09.890 --> 00:00:13.290
لكتابة التعليمة البرمجية، بدأت
بالرقم 0 كحد أقصى لقيمة التوظيف

00:00:13.290 --> 00:00:14.770
.وNone للإشارة للدولة الموافقة

00:00:15.910 --> 00:00:19.300
وبعد ذلك، قمت بالتكرار عبر كل
.عنصر من صفيفي NumPy

00:00:19.300 --> 00:00:22.680
وحيث إنه يلزم أن يكون للصفيفين
نفس الطول، فيمكنني استخدام أي سطر من الدول

00:00:22.680 --> 00:00:25.880
،أو سطر من التوظيف هنا
.ولا فرق بين استخدام هذا وذاك

00:00:25.880 --> 00:00:29.010
وبعد ذلك، تحققتُ مما إذا كانت بيانات التوظيف
الخاصة بتلك الدولة أكبر من

00:00:29.010 --> 00:00:31.660
حد التوظيف الأقصى الذي رأيتُه حتى
.الآن

00:00:31.660 --> 00:00:35.055
،ولهذا
قمتُ بتحديث أقصى قيمة للدولة

00:00:35.055 --> 00:00:37.305
.وأقصى قيمة للتوظيف

00:00:37.305 --> 00:00:39.375
.وأخيرًا، أرجعت القيمتين

00:00:39.375 --> 00:00:42.345
ولا يبدو هذا الجزء من التعليمة البرمجية
مختلفًا بأي شكل من الأشكال عما

00:00:42.345 --> 00:00:45.130
كنت لأكتبه إذا كنت
.أستخدم القوائم بدلاً من صفائف NumPy

00:00:45.130 --> 00:00:46.960
وهذا أسلوب رائع
.يُستخدم عند الحاجة

00:00:46.960 --> 00:00:50.040
إذا لم تستطع العثور على دالة NumPy&lrm; معينة
،للقيام بما تريد

00:00:50.040 --> 00:00:52.330
فيمكنك دائمًا كتابة تعليمة برمجية
.للتعامل معها كما تتعامل مع القوائم بالتحديد

00:00:53.430 --> 00:00:57.800
ومع ذلك، في هذه الحالة، هناك طريقة أسهل
.لحل هذا باستخدام صفيف NumPy

00:00:57.800 --> 00:01:01.470
،لم أتوقعُ أنك تعلم ذلك
.ولكني سأريك كيف تعمل هذه الطريقة

00:01:01.470 --> 00:01:05.050
ربما تكون قد أدركتَ أنك تستطيع
استخدام دالة max الخاصة بـ NumPy للعثور على

00:01:05.050 --> 00:01:06.220
.القيمة القصوى للتوظيف

00:01:06.220 --> 00:01:08.940
ولكن ذلك لن يوفر لك اسم الدولة
.الموافقة

00:01:08.940 --> 00:01:13.900
كما أن NumPy تشتمل على دالة تُسمى argmax
وبدلاً من القيمة القصوى، تُرجع هذه الدالة الموضع الذي حدثت به

00:01:13.900 --> 00:01:17.240
القيمة
.القصوى

00:01:17.240 --> 00:01:20.620
،سأُطلق على الموضع اسم i
ثم يمكنني الحصول على اسم الدولة

00:01:20.620 --> 00:01:23.400
وقيمة التوظيف على حد سواء باستخدام
.ذلك الموضع

00:01:23.400 --> 00:01:24.950
.والآن، سأتناول التعليمة البرمجية الاختبارية

00:01:24.950 --> 00:01:27.590
استورد السطر الأول
.مكتبة NumPy

00:01:27.590 --> 00:01:30.770
وينشئ السطر الثاني صفيف NumPy&lrm;
يضم أول 20 دولة

00:01:30.770 --> 00:01:32.290
.لدينا بيانات توظيف بشأنها

00:01:32.290 --> 00:01:36.180
إحدى أسهل الطرق لإنشاء صفيف NumPy&lrm;
.هي الطريقة التي قمت بتنفيذها هنا

00:01:36.180 --> 00:01:39.870
أولاً، تنشئُ قائمة Python ثم تستدعي
np.array باستخدام تلك

00:01:39.870 --> 00:01:43.300
القائمة كوسيطة
.تحولها إلى صفيف NumPy

00:01:43.300 --> 00:01:47.659
ويستخدم السطر التالي نفس الأسلوب
لإنشاء صفيف NumPy لمعدلات

00:01:47.659 --> 00:01:48.608
.التوظيف في عام 2007

00:01:48.608 --> 00:01:52.640
وبعد ذلك، من المفترض أنك قد رأيتَ
،أن هذا السطر قد أدى إلى طباعة الدولة في الموضع 0

00:01:52.640 --> 00:01:55.930
وأن تغيير 0 إلى 3 يؤدي إلى طباعة
.الدولة في الموضع 3

00:01:55.930 --> 00:01:59.270
ويطبع كل من الأسطر القليلة التالية
.جزءًا من الصفيف

00:01:59.270 --> 00:02:03.880
يطبع هذا السطر كل شيء من الموضع 0
.فما فوق ولكن بدون أن يشمل هذا طباعة الموضع 3

00:02:03.880 --> 00:02:06.180
،في هذا السطر
تركتُ هذا الرقم، ولهذا السبب

00:02:06.180 --> 00:02:10.020
يبدأ الجزء في بداية الصفيف
.وهو ما يوفر نفس النتائج

00:02:10.020 --> 00:02:12.360
،وقد تركتُ هنا الرقم الثاني

00:02:12.360 --> 00:02:16.290
ولهذا السبب
.يبدأ الجزء من الموضع 17 وصولاً إلى نهاية الصفيف

00:02:16.290 --> 00:02:19.340
وأخيرًا، يمكنني ترك كلا الرقمين بالفعل
وفي هذه الحالة

00:02:19.340 --> 00:02:22.770
سأحصل على الصفيف بالكامل
.من البداية وحتى النهاية

00:02:22.770 --> 00:02:25.670
ولا يوجد سبب وجيه للقيام بهذا
لأنه يمكنك ببساطة استخدام

00:02:25.670 --> 00:02:28.980
الصفيف الأصلي، ولكن
.هذا سيجعل التعليقات ثابتة

00:02:28.980 --> 00:02:31.280
والآن، سأنظر إلى نوع العنصر
.لبعض الصفائف

00:02:31.280 --> 00:02:33.490
.صفيف NumPy الذي يستدعي dtype

00:02:33.490 --> 00:02:36.260
يمكنني ان أرى أن صفيف الدولة
.من النوع S22

00:02:36.260 --> 00:02:39.010
تشير S إلى السلسلة ويعني العدد 22

00:02:39.010 --> 00:02:42.360
أن طول السلسلة الأطول في الصفيف
.هو 22 حرفًا

00:02:42.360 --> 00:02:46.310
.صفيف التوظيف من النوع float64

00:02:46.310 --> 00:02:49.040
ويعني ذلك أن قيم التوظيف
.عبارة عن قيم فاصلة عائمة

00:02:49.040 --> 00:02:50.900
.ومعنى هذا، أن لها فاصلة عشرية

00:02:50.900 --> 00:02:52.220
.ويتم تخزينها باستخدام 64 بت

00:02:52.220 --> 00:02:56.030
وتحتوي الصفائف الأربع التالية على أعداد صحيحة

00:02:56.030 --> 00:03:00.750
وقيمة بفاصلة عائمة وعوامل منطقية وسلاسل
.طولها حرفان

00:03:00.750 --> 00:03:02.450
،عندما أكرر صفيف الدول

00:03:02.450 --> 00:03:05.340
أرى أن كل دولة تتم طباعتها
.مرة كل مرة

00:03:05.340 --> 00:03:08.430
ويمكنني استخدام هذا النوع من التكرار
لفحص أزواج القيم

00:03:08.430 --> 00:03:09.880
.من صفيفين مختلفين

00:03:09.880 --> 00:03:14.190
في هذه الحالة هنا، يمثل i الموضع في كل صفيف
ثم أحصل على الدولة في هذا الموضع

00:03:14.190 --> 00:03:16.700
وقيمة التوظيف في ذاك
.

00:03:16.700 --> 00:03:18.380
.وأخيرًا، أقوم فقط بطباعة كلتا القيمتين

00:03:19.490 --> 00:03:22.900
إذا لم تكن قد رأيتَ دالة format في
،سلسلة Python قبل ذلك

00:03:22.900 --> 00:03:26.250
فهي تبحث عن كل
مثيل لعلامات الأقواس

00:03:26.250 --> 00:03:29.760
ثم تستبدلها بوسائط
.من الدالة format

00:03:29.760 --> 00:03:33.040
وعندما أشغل هذه السلسلة، أرى كل دولة تُطبع
مع قيمة

00:03:33.040 --> 00:03:33.880
.التوظيف الموافقة لها

00:03:34.920 --> 00:03:39.800
وأخيرًا، تُخرج هذه الدوال المتوسط
والانحراف المعياري والحد الأقصى

00:03:39.800 --> 00:03:41.050
.ومجموع بيانات التوظيف

