WEBVTT
Kind: captions
Language: zh-CN

00:00:08.070 --> 00:00:12.490
大家好 今天我要与大家分享

00:00:12.490 --> 00:00:17.200
共享单车项目的最终版本是如何运行的

00:00:17.200 --> 00:00:18.760
为此

00:00:18.760 --> 00:00:22.924
我们将会看到两个例子

00:00:22.924 --> 00:00:25.480
实际上我们可以通过许多方式

00:00:25.480 --> 00:00:29.155
来通过这个项目的审阅标准

00:00:29.155 --> 00:00:32.268
并且 重要的是 我们为你提供了一个模板

00:00:32.268 --> 00:00:35.125
但你可以随意改变这个模板

00:00:35.125 --> 00:00:39.505
这个模板里提供的函数、定义等数据

00:00:39.505 --> 00:00:41.325
你都可以直接使用

00:00:41.325 --> 00:00:45.615
但如果有些内容并不适用于你理想中项目的最终版本

00:00:45.615 --> 00:00:47.895
请随意改变它的输入

00:00:47.895 --> 00:00:49.485
或是它返回的内容

00:00:49.485 --> 00:00:52.860
重点是你需要得到一个最终的原型

00:00:52.860 --> 00:00:57.315
一个最终版本的项目组合

00:00:57.315 --> 00:01:02.250
它可以和用户互动 并提供审阅标准中要求的信息

00:01:02.250 --> 00:01:06.315
因此 我们来看看这两个答案

00:01:06.315 --> 00:01:09.090
第一个是 solution.py 文件

00:01:09.090 --> 00:01:11.475
另一个是 bikeshare.py 文件

00:01:11.475 --> 00:01:14.700
这两个答案都是正确的

00:01:14.700 --> 00:01:18.830
都是 Bikeshare 项目的最终版本

00:01:18.830 --> 00:01:23.488
如果我们运行 bikeshare.py 项目

00:01:23.488 --> 00:01:27.395
它会提示“你希望查看哪个城市的数据？”

00:01:27.395 --> 00:01:29.990
让我们输入芝加哥

00:01:29.990 --> 00:01:33.080
接着会提示“你希望按照什么标准来筛选数据？月份？星期？”

00:01:33.080 --> 00:01:35.180
“都选？还是都不选？”

00:01:35.180 --> 00:01:37.400
我们输入 none 来取消时间筛选

00:01:37.400 --> 00:01:40.445
你可以看到 每一次运行都会出现这些问题

00:01:40.445 --> 00:01:44.120
模板中提供的原始过滤器并没有出现这些

00:01:44.120 --> 00:01:48.740
但这是答案中提供的高阶特性

00:01:48.740 --> 00:01:51.630
接着我们输入 both

00:01:51.630 --> 00:01:52.920
程序会提示“哪个月份”

00:01:52.920 --> 00:01:54.750
输入 February

00:01:54.750 --> 00:01:58.200
接着选择星期请输入一个整数

00:01:58.200 --> 00:02:03.390
我们输入 3 很好 当你这样筛选数据时

00:02:03.390 --> 00:02:08.745
程序显示最热门的出行时间是 17 点 次数为 723 次

00:02:08.745 --> 00:02:12.900
总骑行时间在这里 次数在这里

00:02:12.900 --> 00:02:14.655
平均骑行时间在这里

00:02:14.655 --> 00:02:16.636
筛选条件输入的是 both

00:02:16.636 --> 00:02:18.600
接着 我们来计算最热门的车站

00:02:18.600 --> 00:02:23.565
那么 最热门的起始车站在这里 次数是 122 次

00:02:23.565 --> 00:02:26.190
最热门的结束车站在这里 次数是110 次

00:02:26.190 --> 00:02:27.845
筛选条件输入的也是 both

00:02:27.845 --> 00:02:31.780
你可以看到这是本项目的标准答案之一

00:02:31.780 --> 00:02:34.105
它能告诉我花费的时间

00:02:34.105 --> 00:02:38.008
还有许多其他信息

00:02:38.008 --> 00:02:40.930
现在程序提示”你想查看个人骑行数据吗？“

00:02:40.930 --> 00:02:44.200
选择是 它将返回一些信息

00:02:44.200 --> 00:02:46.360
接着我选择否 它显示

00:02:46.360 --> 00:02:47.950
”你想重新开始吗？“ 我将会选择否

00:02:47.950 --> 00:02:51.970
很好 所以这是答案之一

00:02:51.970 --> 00:02:55.942
我们来看看另一个例子

00:02:55.942 --> 00:02:58.530
程序提示 ”你想查看哪个城市的情况？“

00:02:58.530 --> 00:03:01.680
所以 你可以看到这个程序设置了这样的提示内容

00:03:01.680 --> 00:03:03.615
”看起来你想了解华盛顿的数据“

00:03:03.615 --> 00:03:05.715
”如果这是错误的请重启程序“

00:03:05.715 --> 00:03:07.415
因此 程序中设置了一个检查机制

00:03:07.415 --> 00:03:11.715
通过过滤器程序会判定它将完成的操作

00:03:11.715 --> 00:03:15.038
你可以在另一个例子的结尾看到 这是如何实现的

00:03:15.038 --> 00:03:16.695
但这两者都是可以接受的

00:03:16.695 --> 00:03:18.300
”你希望按照月份还是星期筛选数据？“

00:03:18.300 --> 00:03:19.995
”还是不筛选数据？“

00:03:19.995 --> 00:03:21.480
那么在这里

00:03:21.480 --> 00:03:23.385
我们选择月份

00:03:23.385 --> 00:03:25.275
”你想选择几月？“

00:03:25.275 --> 00:03:27.150
五月

00:03:27.150 --> 00:03:31.680
很好 你可以看到程序已经开始计算这些数据了

00:03:31.680 --> 00:03:34.605
它的速度更快

00:03:34.605 --> 00:03:39.300
呈现信息的方式也有些不同

00:03:39.300 --> 00:03:40.465
你可以看到程序提示

00:03:40.465 --> 00:03:42.120
”用户的分类是什么？“

00:03:42.120 --> 00:03:43.635
它显示这些信息

00:03:43.635 --> 00:03:48.390
还有 ”最热门的车站是什么？“

00:03:48.390 --> 00:03:52.515
那么 这里是最热门的起始车站和结束车站 这里是计数

00:03:52.515 --> 00:03:56.370
你可以问总骑行时间是什么

00:03:56.370 --> 00:03:59.625
它返回的信息格式有一点不同

00:03:59.625 --> 00:04:02.089
”一天中最热门的出行时间是什么？“

00:04:02.089 --> 00:04:03.420
它返回 5

00:04:03.420 --> 00:04:06.315
”一周中最热门的出行时间是哪一天？“ 是周三

00:04:06.315 --> 00:04:11.880
所以你可以看到这里显示的信息更少

00:04:11.880 --> 00:04:13.950
根据筛选数据的方式不同

00:04:13.950 --> 00:04:17.595
这是因为在这里我选择按月份筛选 而在刚才的例子中我选择的是月份和星期

00:04:17.595 --> 00:04:19.048
接着程序显示”你是否想重新开始“

00:04:19.048 --> 00:04:20.940
让我们重新开始

00:04:20.940 --> 00:04:24.270
程序显示”你想筛选哪个城市的数据？“

00:04:24.270 --> 00:04:28.440
我们输入芝加哥 并按星期筛选数据

00:04:28.440 --> 00:04:31.665
请注意 这里显示你可以这样筛选

00:04:31.665 --> 00:04:35.445
并不是输入数字 而是这些字母值

00:04:35.445 --> 00:04:37.438
那么我们选择星期四

00:04:37.438 --> 00:04:40.770
接着 它开始根据这些筛选条件为我计算信息

00:04:40.770 --> 00:04:46.380
再一次 我们可以看到在最后这里 有两种显示信息的方式

00:04:46.380 --> 00:04:48.300
一般来说它需要是互动式的

00:04:48.300 --> 00:04:52.845
而且它需要提供审阅标准规定的信息

00:04:52.845 --> 00:04:55.490
这也是唯一的两个限制

00:04:55.490 --> 00:04:58.440
它需要满足审阅标准

00:04:58.440 --> 00:05:02.378
也就是提供互动式体验和计算必要数据

00:05:02.378 --> 00:05:04.410
不过这里的模板只是起指导作用

00:05:04.410 --> 00:05:07.110
你可以随意修改它

00:05:07.110 --> 00:05:09.960
来使程序按照你的想法同用户互动

00:05:09.960 --> 00:05:12.540
请按你自己的喜好配置交互内容

00:05:12.540 --> 00:05:15.945
并使你的答案具有创意

00:05:15.945 --> 00:05:18.495
我希望这能给你带来帮助 感谢观看

00:05:18.495 --> 00:05:20.890
祝你好运

