{
  "data": {
    "lesson": {
      "id": 403352,
      "key": "eb0e4ed3-e04a-4328-aece-da8cf6fc2607",
      "title": "项目准备：SQL 和移动平均值",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "zh-cn",
      "summary": "这节课主要介绍了如何使用 SQL 从数据库中提取数据的基础知识，有助于你准备完成“探索未来气候发展趋势”这个项目。",
      "lesson_type": "Classroom",
      "display_workspace_project_only": null,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/eb0e4ed3-e04a-4328-aece-da8cf6fc2607/403352/1544199808491/%E9%A1%B9%E7%9B%AE%E5%87%86%E5%A4%87%EF%BC%9ASQL+%E5%92%8C%E7%A7%BB%E5%8A%A8%E5%B9%B3%E5%9D%87%E5%80%BC+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/eb0e4ed3-e04a-4328-aece-da8cf6fc2607/403352/1544199802909/%E9%A1%B9%E7%9B%AE%E5%87%86%E5%A4%87%EF%BC%9ASQL+%E5%92%8C%E7%A7%BB%E5%8A%A8%E5%B9%B3%E5%9D%87%E5%80%BC+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 403296,
          "key": "c9308080-537f-45e8-bc40-8d6dbc10ed5c",
          "title": "你的第一个项目",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c9308080-537f-45e8-bc40-8d6dbc10ed5c",
            "completed_at": "2018-07-27T05:37:32.523Z",
            "last_viewed_at": "2018-10-07T10:40:31.335Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403200,
              "key": "c282a8ca-2638-4d66-854b-d9266a761182",
              "title": "项目简介：探索未来气候发展趋势",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "xneztkf0TsY",
                "china_cdn_id": "xneztkf0TsY.mp4"
              }
            },
            {
              "id": 403201,
              "key": "98f23da8-5d84-440d-a21f-e207d0dff712",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "文章：[科学家如何测量全球气温](https://www.carbonbrief.org/explainer-how-do-scientists-measure-global-temperature)\n\n# 项目准备\n\n 这个项目需要你完成以下步骤：\n* 使用 SQL 查询从数据库提取数据\n* 计算电子表格中的移动平均值\n* 在电子表格中创建可视化\n\n如果你知道如何执行这三个步骤，就可以直接跳到项目说明部分。如果暂时不清楚，请学习这节课的内容，掌握以上技能，从而独立成功完成实战项目。该课程的讲师是 Mode Analytics 的 CEO —— Derek Steer。",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403305,
          "key": "9f672e93-fdcd-4332-a6ef-41edcf8416f1",
          "title": "视频：SQL 简介",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9f672e93-fdcd-4332-a6ef-41edcf8416f1",
            "completed_at": "2018-07-27T05:39:33.737Z",
            "last_viewed_at": "2019-10-09T16:36:38.658Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403202,
              "key": "18de24f6-1f4e-432a-b780-844d68d9c544",
              "title": "简介",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Z8WNfx9Oq9s",
                "china_cdn_id": "Z8WNfx9Oq9s.mp4"
              }
            }
          ]
        },
        {
          "id": 403306,
          "key": "10de11bf-fedb-4519-9393-92ab7a5bff77",
          "title": "视频：Parch & Posey 数据",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "10de11bf-fedb-4519-9393-92ab7a5bff77",
            "completed_at": "2018-07-27T05:40:14.269Z",
            "last_viewed_at": "2019-10-09T16:39:11.376Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403203,
              "key": "424d277e-717c-4970-b61a-21c87e311392",
              "title": "Parch & Posey 数据库",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "JOMI560DgXg",
                "china_cdn_id": "JOMI560DgXg.mp4"
              }
            }
          ]
        },
        {
          "id": 403307,
          "key": "63924491-9491-4fb8-b39b-611a613c25fd",
          "title": "视频 + 文本：Parch & Posey 数据",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "63924491-9491-4fb8-b39b-611a613c25fd",
            "completed_at": "2018-07-27T05:40:55.451Z",
            "last_viewed_at": "2019-10-09T16:40:04.496Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403204,
              "key": "03a137a7-b05a-49d0-a890-6ebff8afeb76",
              "title": "实体关系图",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "YY2TAJLEINA",
                "china_cdn_id": "YY2TAJLEINA.mp4"
              }
            },
            {
              "id": 403205,
              "key": "d32c3c80-44cb-4241-85c2-a153a41d2e8e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 实体关系图\n\n**实体关系图** (ERD) 是查看数据库中数据的常用方式。下面是 Parch & Posey 数据的 ERD。这些图有助于可视化你正在分析的数据，包括:\n\n1. 表的名称\n2. 每个表中的列\n3. 表格之间的相互关系 \n\n**你可以将下面的每个框看作一个电子表格。**",
              "instructor_notes": ""
            },
            {
              "id": 403206,
              "key": "0b8a67d1-88e3-4173-a0b9-514b7c2084bb",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/August/59821d7d_screen-shot-2017-08-02-at-11.14.25-am/screen-shot-2017-08-02-at-11.14.25-am.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/0b8a67d1-88e3-4173-a0b9-514b7c2084bb",
              "caption": "",
              "alt": null,
              "width": 809,
              "height": 494,
              "instructor_notes": null
            },
            {
              "id": 403207,
              "key": "c605644e-d550-4a99-b7e4-9cb9e7447c91",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 注意事项\n\nParch & Posey 数据一共有五个表，即 5 个电子表格: \n1. **web_events**\n2. **accounts**\n3. **orders**\n4. **sales_reps**\n5. **region** \n\n你可以将每个表视为一个单独的电子表格。然后将每个电子表格中的列放在表名下面。例如，**region** 表有两列: `id` 和 `name`，而 **web_events** 表有四列。\n",
              "instructor_notes": ""
            },
            {
              "id": 403208,
              "key": "1bba74ee-c849-4c28-bbc1-44bb2a15b8b0",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/August/59852269_screen-shot-2017-08-04-at-6.41.07-pm/screen-shot-2017-08-04-at-6.41.07-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/1bba74ee-c849-4c28-bbc1-44bb2a15b8b0",
              "caption": "",
              "alt": null,
              "width": 568,
              "height": 324,
              "instructor_notes": null
            },
            {
              "id": 403209,
              "key": "a5b704b4-0d26-4e21-937b-3c74605d9d30",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "可以通过 [\"crow's foot\" 表示法](http://www.vertabelo.com/blog/technical-articles/crow-s-foot-notation)来标记出一个表格里的列与另一个表格的列之间的关联，比如 region 表格里的 `id` 对应 sales_rep 表格里 `region_id`。在下一节课中，你将进一步了解这些关联对于使用 SQL 和关系型数据库的重要性。",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403308,
          "key": "e0b107e9-9739-4dca-8cb2-78f6f6809aff",
          "title": "视频：为什么使用 SQL",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e0b107e9-9739-4dca-8cb2-78f6f6809aff",
            "completed_at": "2018-07-27T05:42:41.491Z",
            "last_viewed_at": "2019-10-09T16:42:00.638Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403210,
              "key": "678ef03c-6e47-429d-8672-a30c865a7516",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 简介\n\n深入学习编写 SQL 查询之前，我们先来看看为什么使用 SQL。\n\n你可以将 SQL 视为一种语言，一种数据查询语言，跟其他编程语言类似。这也是为什么 SQL 中的最后一个字母 L 其实代表 Language 语言。这门语言最重要的功能就是可以与数据库进行交互。那什么是数据库呢？在本课中，你可以暂时将**数据库**看作一堆存储在某个地方的 excel 电子表格。\n\n# 为什么数据分析师也用 SQL？\n",
              "instructor_notes": ""
            },
            {
              "id": 403211,
              "key": "605276c9-01e9-4125-b3cd-63e548adf620",
              "title": "为什么分析师喜欢用 SQL",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "uCNOtUht2Xc",
                "china_cdn_id": "uCNOtUht2Xc.mp4"
              }
            },
            {
              "id": 403212,
              "key": "bb10cab2-b16b-47e2-92fd-11afab569054",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "使用**传统关系数据库**与 SQL 交互有一些主要优点。最明显的 5 个优点是：\n\n* SQL 很容易理解。\n* 传统的数据库允许我们直接访问数据。\n* 传统的数据库可使我们审核和复制数据。\n* SQL 是一个可一次分析多个表的很好工具。\n* 相对于 Google Analytics 等仪表板工具，SQL 可使我们分析更复杂的问题。\n\n在后面学习编写 SQL 与数据交互时，你将亲自体验到这些优点。\n\n我意识到你可能会有点紧张，或急于开始编写代码，原因是，这可能是你第一次使用任意编程语言编写代码。不过完全不用担心，我们将在你克服这些困难的过程中，全程通过实例为你们提供帮助。\n\n\n## SQL 与 NoSQL\n\n你可能听说过 NoSQL，它表示 Not only SQL（不仅仅是 SQL）。使用 NoSQL 的数据库时，你编写的数据交互代码会与本节课所介绍的方式有所不同。NoSQL 更适用于基于网络数据的环境，而不太适用于我们现在要介绍的基于电子表格的数据分析。最常用的 NoSQL 语言之一是 [MongoDB](https://www.mongodb.com/)。Udacity 上有一个关于 MongoDB 的完整课程，你可以免费观看 [此处](https://www.udacity.com/course/data-wrangling-with-mongodb--ud032)，但这些不是这个课的重点内容。\n\nNoSQL 不是在这个纳米学位项目中分析数据的重点，但可能会用于本课程之外的其他地方！\n",
              "instructor_notes": ""
            },
            {
              "id": 403213,
              "key": "1cdb464f-c9c9-4753-b859-fbbf79b1fb87",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 为什么企业选择使用 SQL？",
              "instructor_notes": ""
            },
            {
              "id": 403214,
              "key": "59dbe20e-c09a-4004-a508-53196bea9232",
              "title": "为什么企业选择使用数据库",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "j4ey7--h9r8",
                "china_cdn_id": "j4ey7--h9r8.mp4"
              }
            },
            {
              "id": 403215,
              "key": "c50b154c-9c38-42d1-89be-eb80182eaf71",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### 为什么企业喜欢使用数据库\n\n1. 只有输入了需要输入的数据，以及只有某些用户能够将数据输入数据库，才能**保证数据的完整性**。<br><br>\n\n2.  **可以快速访问数据** - SQL 可使我们从数据库中快速获取结果。  可以优化代码，快速获取结果。  <br><br>\n\n3.  **可以很容易共享数据** - 多个人可以访问存储在数据库中的数据，所有访问数据库的用户获得的数据都是一样。\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403314,
          "key": "45d7a40b-6cd7-4171-88a3-434ac16055af",
          "title": "视频：数据库如何存储数据",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "45d7a40b-6cd7-4171-88a3-434ac16055af",
            "completed_at": "2018-07-27T05:47:26.464Z",
            "last_viewed_at": "2019-10-09T16:48:49.938Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403226,
              "key": "f36cb40c-bf6b-4420-8a44-70cf05880fb9",
              "title": "数据库如何存储数据",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "H0C9z_sRvLE",
                "china_cdn_id": "H0C9z_sRvLE.mp4"
              }
            },
            {
              "id": 403227,
              "key": "f06e4f20-b63e-4404-96d2-a4bc1d3f7cf9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "关于 SQL 数据库中所存储数据的几个要点：\n\n1.  **数据库中的数据存储在类似于 Excel 电子表格的表中。**<br>大多数情况下，可以将数据库视为一堆 Excel 电子表格。每个电子表格都有行和列。每行保存有关交易、个人、公司等的数据。而每列所保存的数据与你关心的某一特定行相关，如名称、位置、唯一身份等。<br><br>\n\n2. **同一列中的所有数据必须符合数据类型。**<br>将整个列认为是定量离散的或是某种字符串。这说明如果特定列中有一行字符串，那么整个列可能会更改为文本数据类型。  **如果想使用此列进行数学计算，这可能会非常糟糕！** <br><br>\n\n3. **列类型一致是快速使用数据库的主要原因之一**。 <br>数据库通常会存储**海量**数据。因此，知道这些列都是相同类型的数据意味着可快速从数据库获取数据。<br><br>\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403311,
          "key": "e4564313-0e76-4fe0-a526-a5c5d0a90606",
          "title": "视频：语句类型",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e4564313-0e76-4fe0-a526-a5c5d0a90606",
            "completed_at": "2018-07-27T05:48:37.799Z",
            "last_viewed_at": "2019-10-09T16:50:11.010Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403222,
              "key": "28be0a81-2b5e-4bf6-bfbc-84e602ce2262",
              "title": "语句类型",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "vLvJbIz94C4",
                "china_cdn_id": "vLvJbIz94C4.mp4"
              }
            },
            {
              "id": 403223,
              "key": "6046d8cc-7702-440a-a93a-2e38e0295c44",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "SQL 的关键是理解**语句**。这几个语句包括：\n\n1. **CREATE TABLE** 是一个在数据库中创建新表的语句。\n2.  **DROP TABLE** 是删除数据库中表的语句。\n3.  **SELECT** 读取并显示数据。我们将这称为**查询**。\n\n**SELECT** 语句是分析师使用的通用语句，我们将在这节课中为你具体讲解这些语句！\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403313,
          "key": "5f3395cb-bfcf-417e-863b-891d272d407e",
          "title": "语句",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5f3395cb-bfcf-417e-863b-891d272d407e",
            "completed_at": "2018-07-29T05:50:52.363Z",
            "last_viewed_at": "2019-10-09T16:51:13.814Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403224,
              "key": "85f6e528-d6b5-4e92-9178-35410ac6d1b8",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "85f6e528-d6b5-4e92-9178-35410ac6d1b8",
                "completed_at": "2018-07-29T05:51:06.819Z",
                "last_viewed_at": "2019-02-17T13:38:39.335Z",
                "unstructured": "{\"selected_ids\":[\"a1501693169150\",\"a1501693689328\",\"a1501693823397\"],\"is_correct\":true}"
              },
              "question": {
                "prompt": "在 SQL 中，可以将语句视为（选择所有适用的语句）：",
                "answers": [
                  {
                    "id": "a1501693169150",
                    "text": "一段编写正确的 SQL 代码。",
                    "is_correct": true
                  },
                  {
                    "id": "a1501693689328",
                    "text": "一种处理数据库中所存储数据的方式。",
                    "is_correct": true
                  },
                  {
                    "id": "a1501693723176",
                    "text": "一句话。",
                    "is_correct": false
                  },
                  {
                    "id": "a1501693823397",
                    "text": "一种读取数据库中所存储数据的方式。",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 403225,
              "key": "323f0aa0-964a-42b6-978d-eaa30ab92185",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "323f0aa0-964a-42b6-978d-eaa30ab92185",
                "completed_at": "2018-07-29T05:52:09.950Z",
                "last_viewed_at": "2019-02-07T13:17:08.090Z",
                "unstructured": "{\"selected_id\":\"a1501694498685\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "在下面的课程中，我们将重点学习哪种类型的查询？",
                "answers": [
                  {
                    "id": "a1501694441393",
                    "text": "DROP",
                    "is_correct": false
                  },
                  {
                    "id": "a1501694466349",
                    "text": "CREATE",
                    "is_correct": false
                  },
                  {
                    "id": "a1501694489113",
                    "text": "QUERY",
                    "is_correct": false
                  },
                  {
                    "id": "a1501694498685",
                    "text": "SELECT",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 403309,
          "key": "507317c6-33af-4467-9f9c-75cdf1e2832d",
          "title": "视频：SELECT 和 FROM",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "507317c6-33af-4467-9f9c-75cdf1e2832d",
            "completed_at": "2018-07-29T05:52:31.903Z",
            "last_viewed_at": "2019-10-09T16:51:26.921Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403216,
              "key": "521bc5c4-828d-4791-a4ce-6aad19a8a3eb",
              "title": "SELECT 和 FROM 语句",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "urOYuuav4BY",
                "china_cdn_id": "urOYuuav4BY.mp4"
              }
            },
            {
              "id": 403217,
              "key": "ca7b5244-9c83-4c3e-b23d-1e1942c4d35d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "我们在这里为你介绍两种用于每个查询的语句\n\n1. **SELECT**用于提醒查询要返回哪些列。<br><br>\n2. **FROM**用于提醒查询在哪个表中查询。注意，这个表中需要有列。\n\n你将在本课程的每个查询中使用这两个语句，但我们还将学习一些额外的语句和运算符，以便与它们一起使用，查询更高级的数据问题。\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403310,
          "key": "7d4666c8-01bd-4212-bdcf-a172e0fcb7ab",
          "title": "文本 + 练习：你的第一个查询",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7d4666c8-01bd-4212-bdcf-a172e0fcb7ab",
            "completed_at": "2018-07-29T05:55:35.526Z",
            "last_viewed_at": "2020-02-09T13:12:20.727Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403218,
              "key": "7f4be737-3bab-4bf8-8fbc-bf4f85e14f82",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### 第一个 SQL 语句\n\nParch & Posey 数据库中的表存储在下面方框的后台。你会注意到 **SCHEMA** 下的左侧列表（需要先点击刷新按钮）下面，是之前在 ERD 中显示的表列表。   与在大多数其他数据库环境中一样编写查询并运行，然后使用下表查看结果。在这节课中，我们一次只能访问一个表，但在后面的课程中，我们将增加表的数量并在各个表之间进行聚合。\n\n### Udacity SQL 环境\n\n开始时，可以试着运行上一个视频中看到的查询！  可以在下面的环境中练习你自己的 SQL 代码。在左侧面板可以看到我们之前在 ERD 中看到的表。在右侧面板可以编写 SQL 代码，可以单击 **EVALUATE** 按钮就可以运行查询。这可能需要一会儿才能运行。\n\n**HISTORY** 菜单将显示你以前运行的查询。 可以通过 **MENU** 从左侧面板删除 SCHEMA 和重置数据库。\n\n```\nSELECT *\nFROM orders;\n```\n\n你会注意到 Derek 使用一个 `demo` 表（他在以后的课程中还会继续采用这种方式），但是你应该使用完全如左侧面板所示的表名来编写自己的查询。  我们将来还会在 Derek 所教授的课程中看到这些（删除了 `demo`）表格。\n\n**编写的每个查询至少要有两个部分：SELECT 和 FROM**。\n",
              "instructor_notes": ""
            },
            {
              "id": 403219,
              "key": "dc6adee7-af2c-4c8d-83c6-d1f85e3b8102",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewdc0fa4e4",
              "pool_id": "sqlwidget",
              "view_id": "dc0fa4e4-0abf-4936-aaa2-4702109053fd",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "width": "100%",
                    "height": "100%",
                    "allowSubmit": false,
                    "frameBorder": "0"
                  },
                  "kind": "sql-evaluator"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 403220,
              "key": "ae2fab73-4716-40c8-b9e6-578a468eb120",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### 每个 SQL 查询\n\n每个查询至少有一个 **SELECT** 和 **FROM** 语句。  **SELECT** 语句用于放置要显示数据的**列**。  **FROM** 语句用于放置要从中提取数据的**表**。\n\n### 该你试一试了\n\n尝试编写自己的查询，以便为 **orders** 表中的所有订单选择 `id`、`account_id` 和 `occurred_at` 列。\n",
              "instructor_notes": ""
            },
            {
              "id": 403221,
              "key": "c0450bc6-0a0b-461f-a0ea-b1a05d2cb4a1",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewdc0fa4e4",
              "pool_id": "sqlwidget",
              "view_id": "3f5f5259-ca97-4880-80a4-c429d2ebb49a",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "width": "100%",
                    "height": "100%",
                    "allowSubmit": false,
                    "frameBorder": "0"
                  },
                  "kind": "sql-evaluator"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 403312,
          "key": "5a16ac08-fec2-475e-98d2-510611301aaf",
          "title": "解决方案：你的第一个查询解决方案",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5a16ac08-fec2-475e-98d2-510611301aaf",
            "completed_at": "2018-07-29T06:02:00.882Z",
            "last_viewed_at": "2019-07-31T12:57:28.683Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403228,
              "key": "38aa4c87-8b28-4290-bae5-71c3a28777b8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 上一个页面的解决方案\n\n```\nSELECT id, account_id, occurred_at\nFROM orders\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403315,
          "key": "9f94748d-bf2e-4428-a954-24281382f13f",
          "title": "文本：格式化最佳方法",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9f94748d-bf2e-4428-a954-24281382f13f",
            "completed_at": "2018-07-29T06:02:10.306Z",
            "last_viewed_at": "2019-10-09T16:51:45.389Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403229,
              "key": "77e5a59a-462c-4b7b-bf86-1de790624640",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewdc0fa4e4",
              "pool_id": "sqlwidget",
              "view_id": "9de6ea78-81c9-4345-9881-bd5a9969aabc",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "width": "100%",
                    "height": "100%",
                    "allowSubmit": false,
                    "frameBorder": "0"
                  },
                  "kind": "sql-evaluator"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 403230,
              "key": "62d6516e-57a3-4e1a-93e0-2747853f6833",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "如果想练习下面的任何操作，我已经嵌入了上面的 SQL 环境。\n\n# 规定查询格式\n\n### 大写\n你可能已经注意到，我们大写了 SELECT 和 FROM，而将表和列名称小写。这是一个常见的格式惯例。大写命令（SELECT、FROM），小写查询中的其他内容是常见做法。这使得查询更容易读取，这在编写更复杂的查询时更为重要。准备编写查询时，这是一个很好的习惯。\n\n### 表和变量名中不需要空格\n通常在列名中使用下划线，避免使用空格。  在 SQL 中使用空格有点麻烦。  在 Postgres 中，如果列或表名称中有空格，就需要使用双引号括住这些列/表名称（例如：FROM \"Table Name\"，而不是 FROM table_name）。在其他环境中，可能会使用方括号（例如：FROM [Table Name]）。\n\n### 在查询中使用空格\nSQL 查询忽略空格，因此可以根据需要在代码之间添加尽可能多的空格和空行，并且查询结果是相同的。我们来看下面这个查询\n\n```\nSELECT account_id FROM orders\n```\n等价于这个查询:\n```\nSELECT account_id\nFROM orders\n```\n和这个查询（但是不要这样写，不符合规范，而且太丑了）:\n```\nSELECT              account_id\n\nFROM               orders\n```\n\n### SQL 不区分大小写\n\n如果你已经使用过其他语言编程，那么可能会熟悉编程语言，如果没有区分大小写键入正确的字符，那么会非常麻烦。  SQL 不区分大小写。  我们来看看下面的查询：\n\n```\nSELECT account_id\nFROM orders\n```\n和这个相同：\n\n```\nselect account_id\nfrom orders\n```\n\n也和这个相同：\n\n```\nSeLeCt AcCoUnt_id\nFrOm oRdErS\n```\n\n但是，我会再次提醒你遵循上面讲述的完全大写命令的惯例，而将其他代码片段小写。\n\n### 分号\n\n根据 SQL 环境，查询结尾可能需要一个执行的分号。  这个\"要求\"在其他环境中比较灵活。我们认为在每个语句的末尾添加一个分号是最好的做法，如果环境能够一次显示多个结果，那么这样做还可以一次运行多个命令。\n\n最好的做法：\n\n```\nSELECT account_id\nFROM orders;\n```\n\n因为，我们这里的环境不需要分号，你会看到没有分号的解决方案：\n\n```\nSELECT account_id\nFROM orders\n```\n\n### 哇 !!! 规则有点多，但是不要紧，慢慢学。犯错误也是一个学习的过程！\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403316,
          "key": "3eb5a138-5fab-4ed3-8207-2259087b49af",
          "title": "视频：LIMIT",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "3eb5a138-5fab-4ed3-8207-2259087b49af",
            "completed_at": "2018-07-31T04:35:59.424Z",
            "last_viewed_at": "2019-10-09T16:55:24.098Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403231,
              "key": "c7dc7465-370e-4786-99e8-ce9abc40d6a3",
              "title": "LIMIT 语句",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "cCPHNNhBgpQ",
                "china_cdn_id": "cCPHNNhBgpQ.mp4"
              }
            },
            {
              "id": 403233,
              "key": "6773ef47-e1eb-4f32-8aba-e4c319a83cc0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\n我们已经学习了 **SELECT**（选择列）和 **FROM**（选择表）语句。如果想要查看表的前几行时，**LIMIT** 语句就能派上用场。这可比加载整个数据集要快得多。\n\n**LIMIT** 命令始终是查询的最后一部分。下面的例子仅显示 orders 表的前 10 行和所有列：\n\n```\nSELECT *\nFROM orders\nLIMIT 10;\n```\n\n我们也可以通过将 10 更改为任何其他数字来更改行数。\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403317,
          "key": "a0182348-e91a-4e0b-ac6d-00577e5115cb",
          "title": "练习：LIMIT",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a0182348-e91a-4e0b-ac6d-00577e5115cb",
            "completed_at": "2018-07-31T04:37:59.983Z",
            "last_viewed_at": "2019-10-09T16:55:43.265Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403232,
              "key": "10c422d3-8847-49a0-ae5e-5c9d9dd6c8a0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 你会使用 LIMIT 吗？\n\n1. 编写一个查询，将响应限制在前 15 行，和包括 **web_events** 表中的 `occurred_at`、`account_id` 和 `channel` 字段，我们来试一下。\n\n",
              "instructor_notes": ""
            },
            {
              "id": 403234,
              "key": "e72fb292-1eef-4263-8f16-f7112f257b96",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewdc0fa4e4",
              "pool_id": "sqlwidget",
              "view_id": "fff918c8-5eef-4505-9605-8aa0d83c795f",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "width": "100%",
                    "height": "100%",
                    "allowSubmit": false,
                    "frameBorder": "0"
                  },
                  "kind": "sql-evaluator"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 403236,
              "key": "023aeab2-19e7-4762-b691-1e68521706f5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 讲师注释\n为了保留我的 SQL 注释，我个人使用 [Atom](https://atom.io/) 文本编辑器。 我用`.sql`扩展名保存文件，以便语法得以高亮显示，不过你也可以使用其他方式保留自己的注释。 使用 Notepad，Word 或任何其他你喜欢的软件皆可。 如下是我的文件在 Atom 中显示的样式。",
              "instructor_notes": ""
            },
            {
              "id": 403235,
              "key": "44af2975-eaf2-40f1-bfd1-077d05f3f342",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/September/59af2b65_screen-shot-2017-08-02-at-10.48.24-pm/screen-shot-2017-08-02-at-10.48.24-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/44af2975-eaf2-40f1-bfd1-077d05f3f342",
              "caption": "",
              "alt": "",
              "width": 1382,
              "height": 480,
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 403319,
          "key": "9fb38d47-1a85-4478-b77f-600a2eb329a6",
          "title": "解决方案：LIMIT",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9fb38d47-1a85-4478-b77f-600a2eb329a6",
            "completed_at": "2018-07-31T04:42:09.159Z",
            "last_viewed_at": "2019-10-09T16:55:38.102Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403237,
              "key": "ac9bb94b-67ac-4bc1-ac83-e93d8dfe73c8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 上一个  LIMIT 问题的解决方案\n\n```\nSELECT occurred_at, account_id, channel\nFROM web_events\nLIMIT 15;\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403320,
          "key": "ef98495e-88e9-4938-8f60-14be1b099e3c",
          "title": "视频: ORDER BY",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ef98495e-88e9-4938-8f60-14be1b099e3c",
            "completed_at": "2018-07-31T04:42:11.761Z",
            "last_viewed_at": "2019-07-31T12:59:49.235Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403238,
              "key": "d2575372-7a71-4086-8113-acb3542075fd",
              "title": "ORDER BY 语句",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "wqj2As31LqI",
                "china_cdn_id": "wqj2As31LqI.mp4"
              }
            },
            {
              "id": 403239,
              "key": "c7d97a02-4029-452c-893f-84bdeb540716",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "**ORDER BY** 语句可使我们按任意行排序表。如果熟悉 Excel，这与使用过滤器进行排序相似。\n\n**ORDER BY** 语句始终在 **SELECT** 和 **FROM** 语句之后，但位于 **LIMIT** 语句之前。  学习其他命令时，这些语句的顺序将更为重要。  如果使用 **LIMIT** 语句，它将始终显示在最后。\n\n### 专家提示\n\n记住可以在 **ORDER BY** 语句中的列之后添加 `DESC`，然后按降序排序，因为默认是按升序排序的。\"\n\n视频中的语句是LIMIT 1000, 实际上应当为LIMIT 10.\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403322,
          "key": "b8b3bf45-1503-49fc-a326-8f10f6967758",
          "title": "练习: ORDER BY",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b8b3bf45-1503-49fc-a326-8f10f6967758",
            "completed_at": "2018-07-31T04:44:48.014Z",
            "last_viewed_at": "2019-10-09T16:56:01.450Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403240,
              "key": "dec1a199-34da-4a70-aaac-9fb521eb26c9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\n# 练习\n\n使用 **ORDER BY** 进行练习：\n\n1. 编写查询，返回 **orders** 表的先下单的前 10 个订单。包含 `id`、`occurred_at` 和 `total_amt_usd`。 <br><br>\n\n2.  编写一个查询，返回**orders** 表里 `total_amt_usd` 最高的5个 **订单**。包括 `id`、`account_id` 和 `total_amt_usd`。 <br><br>\n\n3.  编写一个查询，基于 `total` ，返回**orders** 表里的前 20 个 **订单**。包括 `id`、`account_id` 和 `total`。 <br><br>",
              "instructor_notes": ""
            },
            {
              "id": 403241,
              "key": "ad0d7ab3-fda4-4165-ae3e-e92fe045aa47",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewdc0fa4e4",
              "pool_id": "sqlwidget",
              "view_id": "97dfa4f5-5fc6-46f5-8aa6-4f6a044b18b1",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "width": "100%",
                    "height": "100%",
                    "allowSubmit": false,
                    "frameBorder": "0"
                  },
                  "kind": "sql-evaluator"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 403318,
          "key": "e3fb05c3-e396-4905-b863-4aabee62b933",
          "title": "解决方案：ORDER BY",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e3fb05c3-e396-4905-b863-4aabee62b933",
            "completed_at": "2018-07-31T04:49:55.216Z",
            "last_viewed_at": "2019-10-09T16:56:11.292Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403242,
              "key": "8b463b9c-7187-46d9-8b2c-2c332931ae7e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# ORDER BY 练习的解决方案\n\n1. \n```\nSELECT id, occurred_at, total_amt_usd\nFROM orders\nORDER BY occurred_at\nLIMIT 10;\n```\n\n2. \n```\nSELECT id, account_id, total_amt_usd\nFROM orders\nORDER BY total_amt_usd DESC \nLIMIT 5;\n```\n\n3. \n```\nSELECT id, account_id, total\nFROM orders\nORDER BY total\nLIMIT 20;\n```\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403321,
          "key": "6e9b4fc1-8c5b-40e5-936d-8428a1c516d9",
          "title": "视频：ORDER BY（第二部分）",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "6e9b4fc1-8c5b-40e5-936d-8428a1c516d9",
            "completed_at": "2018-07-31T04:50:09.149Z",
            "last_viewed_at": "2019-07-31T13:00:54.015Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403243,
              "key": "6796c461-bd8f-430d-97c5-cedf44ec2ddb",
              "title": "Order By Part II",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "XQCjREdOqwE",
                "china_cdn_id": "XQCjREdOqwE.mp4"
              }
            },
            {
              "id": 403244,
              "key": "28f529f2-0266-4999-9d2c-a14a594f1fe5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "在这节课中，我们可以一次 **ORDER BY** 多列。这个语句可以按照从左至右列出的列进行排序。  我们也可以也可以使用 **DESC** 来翻转排序。 \n\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403323,
          "key": "1f1906c2-6903-47bb-a0f7-de7a65924c04",
          "title": "练习：ORDER BY（第二部分）",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "1f1906c2-6903-47bb-a0f7-de7a65924c04",
            "completed_at": "2018-07-31T05:05:50.950Z",
            "last_viewed_at": "2019-07-31T13:00:57.644Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403245,
              "key": "05b3cce4-a487-4c7b-bcaf-5e30b4fd8154",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 问题\n1.  查询**orders**表格，按照订单日期的从新到旧降序排列，同时每个日期下的订单按照`total_amt_usd`降序排列，显示前5行。<br><br>\n2.  查询**orders**表格，按照订单日期的从旧到新升序排列，同时每个日期下的订单按照`total_amt_usd`升序排列，显示前10行。",
              "instructor_notes": ""
            },
            {
              "id": 403246,
              "key": "f7b59461-c440-4c18-9f37-89ffea8081c7",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewdc0fa4e4",
              "pool_id": "sqlwidget",
              "view_id": "23126cff-a34c-40e5-9683-f2197c207ac6",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "width": "100%",
                    "height": "100%",
                    "allowSubmit": false,
                    "frameBorder": "0"
                  },
                  "kind": "sql-evaluator"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 403324,
          "key": "97f31a3c-3c46-4321-ab04-d2da05c2f5ec",
          "title": "解决方案：ORDER BY（第二部分）",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "97f31a3c-3c46-4321-ab04-d2da05c2f5ec",
            "completed_at": "2018-07-31T05:11:32.899Z",
            "last_viewed_at": "2019-02-18T13:19:50.067Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403247,
              "key": "3fc9643d-6a08-4914-9565-23a2fab3ea10",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 此前 ORDER BY 问题的解决方案\n\n1.\n```\nSELECT *\nFROM orders\nORDER BY occurred_at DESC, total_amt_usd DESC\nLIMIT 5;\n```\n\n2.\n```\nSELECT *\nFROM orders\nORDER BY occurred_at, total_amt_usd\nLIMIT 10;\n```\n\n你可能已经注意到，以这种方式对日期进行比较并没有多大意义，因为这两种日期与这种粒度是一样的！不过别担心，我们很快就会具体学习！",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403325,
          "key": "b9307eec-5f86-40c2-a8b5-af95515b618b",
          "title": "视频：WHERE",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b9307eec-5f86-40c2-a8b5-af95515b618b",
            "completed_at": "2018-07-31T05:12:43.892Z",
            "last_viewed_at": "2019-11-13T07:58:08.821Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403248,
              "key": "74887bba-9ded-40d8-a1ee-3279043b828e",
              "title": "WHERE 语句",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "mN0uTnlXaxg",
                "china_cdn_id": "mN0uTnlXaxg.mp4"
              }
            },
            {
              "id": 403249,
              "key": "17dec2a6-b381-4604-96dc-3013df420886",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "我们可以基于必须满足的条件，使用 **WHERE** 语句来为表格创建子集。下面的视频介绍了如何使用这个语句，在接下来的课程中，我们将学习一些与 **WHERE** 语句一起使用的常见运算符。\n\n**WHERE** 语句中使用的常用符号包括：\n\n1. `>`（大于）<br><br>\n2. `<`（小于）<br><br>\n3. `>=`（大于或等于）<br><br>\n4. `<=`（小于或等于）<br><br>\n5. `=`（等于）<br><br>\n6. `!=`（不等于）\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403326,
          "key": "61a40e81-a1e4-4ced-bf68-7c5c5c2682de",
          "title": "练习：WHERE",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "61a40e81-a1e4-4ced-bf68-7c5c5c2682de",
            "completed_at": "2018-07-31T05:17:33.853Z",
            "last_viewed_at": "2019-07-31T13:01:45.999Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403250,
              "key": "a60dc868-d5cb-474f-82d6-8663bb3e370e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 问题\n\n编写一个查询\n1. 从 **orders** 表提取出`gloss_amt_usd`大于或等于 1000  美元的前五行数据（包含所有列）。<br><br>\n2. 从 **orders** 表提取出`total_amt_usd`小于 500 美元的前十行数据（包含所有列）。\n",
              "instructor_notes": ""
            },
            {
              "id": 403251,
              "key": "7b9c96ba-4b90-472b-9c24-fec6c1a5db04",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewdc0fa4e4",
              "pool_id": "sqlwidget",
              "view_id": "6f9ace00-a648-4e5f-ab8f-91e3405af18a",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "width": "100%",
                    "height": "100%",
                    "allowSubmit": false,
                    "frameBorder": "0"
                  },
                  "kind": "sql-evaluator"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 403327,
          "key": "9f15e6e6-fe0e-4f79-8cd1-8c405e8079a9",
          "title": "解决方案：WHERE",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9f15e6e6-fe0e-4f79-8cd1-8c405e8079a9",
            "completed_at": "2018-07-31T05:20:29.978Z",
            "last_viewed_at": "2019-02-18T13:46:11.543Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403252,
              "key": "c3799855-6494-44a0-a580-f7cd31c1cccb",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 此前 WHERE 问题的解决方案\n\n1. \n```\nSELECT *\nFROM orders\nWHERE gloss_amt_usd >= 1000\nLIMIT 5;\n```\n\n2. \n```\nSELECT *\nFROM orders\nWHERE total_amt_usd < 500\nLIMIT 10;\n```\n\n你会注意到我们在使用这些 **WHERE** 语句时，不需要 **ORDER BY**，除非要实际整理数据。不必对数据进行排序，仍可继续执行条件。\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403328,
          "key": "288998fd-1aa1-4e02-ac41-b0bf8aac23cc",
          "title": "视频：WHERE 与非数字数据一起使用",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "288998fd-1aa1-4e02-ac41-b0bf8aac23cc",
            "completed_at": "2018-07-31T05:20:59.322Z",
            "last_viewed_at": "2019-10-09T16:56:25.766Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403253,
              "key": "2ea9eb35-ea26-4d56-8065-60fe62789f6b",
              "title": "WHERE 与非数字数据一起使用",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "_pLx7MHOyjo",
                "china_cdn_id": "_pLx7MHOyjo.mp4"
              }
            },
            {
              "id": 403254,
              "key": "dfae52f0-901b-487d-9618-df8e1be1f66e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "**WHERE** 语句也可以与非数字数据一起使用。在这节课中，我们可以使用 `=` 和 `！=` 运算符。  还需要确保在文本数据中使用单引号，而不是双引号（如果原始文本中有引号，就一定要注意）。\n\n通常将 **WHERE** 与非数字数据字段一起使用时，我们会使用 **LIKE**、**NOT** 或 **IN** 运算符。",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403329,
          "key": "7c55878d-35d0-4c97-b176-55076b955299",
          "title": "练习：WHERE 与非数字数据一起使用",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7c55878d-35d0-4c97-b176-55076b955299",
            "completed_at": "2018-07-31T05:22:32.242Z",
            "last_viewed_at": "2019-10-09T16:57:16.130Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403255,
              "key": "29d45d75-4860-4742-b35a-f6563a0f46fe",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# WHERE 与非数字数据一起使用的练习\n\n1. 从 **accounts **表格中筛选出包含 **Exxon Mobil** 的 `name`（客户名称），`website` 和 `primary point of contact` (`primary_poc`) 等数据。",
              "instructor_notes": ""
            },
            {
              "id": 403256,
              "key": "b0a8fb72-dc0c-44d6-b36b-c0ffb3281783",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewdc0fa4e4",
              "pool_id": "sqlwidget",
              "view_id": "695b5fc0-18cf-4e2f-ba6d-a5ef4c38cc3f",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "width": "100%",
                    "height": "100%",
                    "allowSubmit": false,
                    "frameBorder": "0"
                  },
                  "kind": "sql-evaluator"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 403332,
          "key": "f6cb57e3-8bca-4591-96fc-24bac9d33867",
          "title": "解决方案：WHERE 与非数字数据一起使用",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f6cb57e3-8bca-4591-96fc-24bac9d33867",
            "completed_at": "2018-07-31T05:24:57.157Z",
            "last_viewed_at": "2019-10-09T16:57:41.736Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403257,
              "key": "3872c970-92c4-48df-96e6-322b546623d6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# WHERE 与非数字数据一起使用的解决方案\n\n1. \n```\nSELECT name, website, primary_poc\nFROM accounts\nWHERE name = 'Exxon Mobil';\n```\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403331,
          "key": "6b161c1e-c518-46b2-93a3-202a82fe7a3a",
          "title": "视频：算术运算符",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "6b161c1e-c518-46b2-93a3-202a82fe7a3a",
            "completed_at": "2018-07-31T05:25:08.960Z",
            "last_viewed_at": "2019-10-09T16:57:50.715Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403258,
              "key": "c3e4fde3-160f-4568-8e6b-2259a4c0ff29",
              "title": "算术运算符",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "fgcJdiNECxI",
                "china_cdn_id": "fgcJdiNECxI.mp4"
              }
            },
            {
              "id": 403259,
              "key": "0d4399d7-5116-4b12-bdc7-d90d07944088",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 派生列\n\n我们将现有的列组合，生成的新列称为 **派生** 列。\n\n常见运算包括：\n\n1. `*`（乘法）\n2. `+`（加法）\n3. `-`（减法）\n4. `/`（除法）\n\n## 运算顺序\n还记得数学课中介绍的 [PEMDAS](http://www.purplemath.com/modules/orderops.htm) 吗？如果不记得了，请查看这个提醒 [链接](http://www.purplemath.com/modules/orderops.htm)。在 SQL 中使用算术运算符时，可采用相同的运算顺序。\n\n下面两个语句的最终结果差异很大：\n1. **Standard_qty / standard_qty + gloss_qty + poster_qty**\n2. **standard_qty / (standard_qty + gloss_qty + poster_qty)**\n\n这与我们将在第 2 部分计算语句的情况很像。\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403330,
          "key": "07dc6709-953d-41c2-98d2-f630044c0767",
          "title": "练习：算术运算符",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "07dc6709-953d-41c2-98d2-f630044c0767",
            "completed_at": "2018-07-31T05:30:03.691Z",
            "last_viewed_at": "2019-10-09T16:58:03.760Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403260,
              "key": "16dd5c96-5c79-46d1-b666-d844fbe19ed7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 使用算术运算的问题\n\n 使用 **orders**表：\n\n1. 创建一个用 `standard_amt_usd` 除以 `standard_qty` 的列，查找每个订单中标准纸张的单价。将结果限制到前 10 个订单，并包含 `id` 和 `account_id` 字段。  \n\n2. 编写一个查询，查找每个订单海报纸的收入百分比。  只需使用以 `_usd` 结尾的列。  （在这个查询中试一下不使用总列）。包含 `id` 和 `account_id` 字段。\n\n**注意 1 - 对于这个问题，即使采用正确的解决方案，也会遇到一个问题。这就是除以零。  在后面的课程学习 CASE 语句时，我们会学习不让此查询发生错误的解决方案。**<br><br>  \n\n**注意 2 - 上述运算符将信息合并在同一行的列中。如果要跨多行组合特定列的值，我们将使用聚合来进行此操作。稍后学习这部分内容。 **",
              "instructor_notes": ""
            },
            {
              "id": 403261,
              "key": "91b3ad6c-4902-4b7f-89bb-ff45c99a8cb1",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewdc0fa4e4",
              "pool_id": "sqlwidget",
              "view_id": "7148a7b1-2e6d-4a5f-b968-152f23f2b6a0",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "width": "100%",
                    "height": "100%",
                    "allowSubmit": false,
                    "frameBorder": "0"
                  },
                  "kind": "sql-evaluator"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 403333,
          "key": "ae07614d-476c-473e-81cc-14f4f524affa",
          "title": "解决方案：算术运算符",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ae07614d-476c-473e-81cc-14f4f524affa",
            "completed_at": "2018-07-31T05:36:36.818Z",
            "last_viewed_at": "2019-10-09T18:58:19.514Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403262,
              "key": "5b61f0a3-e51d-4ce7-aee2-0a400bda3e57",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 算术运算符问题的解决方案\n\n1.  下面是提供解决方案的查询。  你会注意到，由于除以零，所以出现了一个错误。在这节课结束之前，我们将具体学习 **CASE**语句，了解关于此错误的原因。一个简单（但不完全准确）的解决方案是将给分母加 1。\n\n```\nSELECT id, account_id, standard_amt_usd/standard_qty AS unit_price\nFROM orders\nLIMIT 10;\n```\n\n2.\n```\nSELECT id, account_id,\nposter_amt_usd/(standard_amt_usd + gloss_amt_usd + poster_amt_usd) AS post_per\nFROM orders;\n\n```\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403335,
          "key": "11449e46-31d8-4463-a3b9-2f562d3a5d18",
          "title": "文本：逻辑运算符简介",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "11449e46-31d8-4463-a3b9-2f562d3a5d18",
            "completed_at": "2018-07-31T05:38:22.975Z",
            "last_viewed_at": "2019-10-09T18:58:24.540Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403263,
              "key": "852899ca-9522-40d5-bb9d-4c45bcf05406",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### 逻辑运算符简介\n\n我们将在接下来的概念中学习 **逻辑运算符**。**逻辑运算符**包括：\n\n1. **LIKE**<br> 可用于进行类似于使用 **WHERE** 和 `=` 的运算，但是这用于你可能 **不** 知道自己想**准确**查找哪些内容的情况。<br><br>\n2. ** IN **<br> 用于执行类似于使用 **WHERE** 和 `=` 的运算，但用于多个条件的情况。<br><br>\n3. **NOT**<br> 这与 **IN** 和 **LIKE** 一起使用，用于选择 **NOT LIKE** 或 **NOT IN**\n某个条件的所有行。<br><br>\n4. **AND & BETWEEN**<br> 可用于组合所有组合条件必须为真的运算。<br><br>\n5. **OR**<br> 可用于组合至少一个组合条件必须为真的运算。<br><br>\n\n\n_____\n如果不能一下子掌握这些内容，也不要担心，因为我们将在下一节课具体练习。\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403336,
          "key": "f2d0f9c9-b2d0-4472-a349-4e2b52243288",
          "title": "视频：LIKE",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f2d0f9c9-b2d0-4472-a349-4e2b52243288",
            "completed_at": "2018-07-31T05:39:42.014Z",
            "last_viewed_at": "2019-10-09T18:59:35.694Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403264,
              "key": "4dce1f6f-2168-4302-a65d-84996805104d",
              "title": "LIKE 运算符",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "O5z6eWkNip4",
                "china_cdn_id": "O5z6eWkNip4.mp4"
              }
            },
            {
              "id": 403265,
              "key": "4a40c8a4-16f4-44d9-b0c3-23d5d7f67463",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "**LIKE** 运算符对于处理文本非常有用。我们将在 **WHERE** 子句中使用 **LIKE**。  **LIKE** 运算符经常与 `％` 一起使用。  `％` 告诉我们，我们可能会想要任何数量的字符，产生一组特定的字符或者遵循一组特定的字符，就像我们在之前学习的 **google** 语法一样。记住，需要用单引号或双引号将传达给 **LIKE** 运算符的文本括住，因为在这个字符串中大小写字母的识别是不一样的，比如 搜索 **'T'** 与搜索 **'t'** 不同。\n\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403334,
          "key": "8c6100c8-ab81-4c32-9fc8-5e5b3f46d97c",
          "title": "练习：LIKE",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "8c6100c8-ab81-4c32-9fc8-5e5b3f46d97c",
            "completed_at": "2018-07-31T05:43:03.144Z",
            "last_viewed_at": "2019-10-09T19:02:08.827Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403266,
              "key": "53db500a-4575-4716-a838-111bc20878d6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 使用 LIKE 运算符的问题\n\n使用 **accounts** 表查找\n\n1.  所有以 'C' 开头公司名。<br><br>\n2.  名称中包含字符串 'one' 的所有公司名。<br><br>\n3. 所有以 's' 结尾的公司名。\n",
              "instructor_notes": ""
            },
            {
              "id": 403267,
              "key": "35091da7-b30b-4581-a9ea-1c634ff29ad2",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewdc0fa4e4",
              "pool_id": "sqlwidget",
              "view_id": "5120e3d0-7797-498a-87d6-018a29dec147",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "width": "100%",
                    "height": "100%",
                    "allowSubmit": false,
                    "frameBorder": "0"
                  },
                  "kind": "sql-evaluator"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 403338,
          "key": "eb997e49-d502-4317-8b16-677266e46f90",
          "title": "解决方案：LIKE",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "eb997e49-d502-4317-8b16-677266e46f90",
            "completed_at": "2018-07-31T05:44:53.985Z",
            "last_viewed_at": "2019-10-09T19:02:19.954Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403270,
              "key": "684e78a8-3181-4921-ba93-c06ddd4271d6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# LIKE 运算符的解决方案\n\n1. \n```\nSELECT name\nFROM accounts\nWHERE name LIKE 'C%';\n```\n\n2. \n```\nSELECT name\nFROM accounts\nWHERE name LIKE '%one%';\n```\n\n3. \n```\nSELECT name\nFROM accounts\nWHERE name LIKE '%s';\n```\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403340,
          "key": "f852a211-dc8b-4090-aa02-f59473a905c2",
          "title": "视频：IN",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f852a211-dc8b-4090-aa02-f59473a905c2",
            "completed_at": "2018-07-31T05:45:11.111Z",
            "last_viewed_at": "2019-10-09T19:02:24.108Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403268,
              "key": "1e2968d5-49b3-44c8-82a3-7dd21da3503b",
              "title": "IN 运算符",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "_JPO7wwX3uA",
                "china_cdn_id": "_JPO7wwX3uA.mp4"
              }
            },
            {
              "id": 403271,
              "key": "c9df9682-af3f-469d-98aa-7c52e0eea4b9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "**IN** 运算符对于数字和文本列都很有用。这个运算符可使我们使用 `=`，但对于特定列的多个项目。  可以检查我们要提取数据的一个、两个或多个列值，但这些都在同一个查询中。  在后面的概念中，我们将介绍 **OR** 运算符，也可以使用这个运算符执行这些任务，但使用 **In** 运算符编写的查询更清楚一些。\n\n### 专家提示\n\n从技术上讲，可以使用单引号或双引号 - 如果你尝试提取的文本中有一个单引号，就可能需要双引号来包围。\n\n注意：在教室的工作区中，你可以将两个单引号放在一起。 例如，Macy's 在我们的工作区显示为 Macy''s 。\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403339,
          "key": "c28f9da7-40e3-4e7b-a91f-ee6a57443cf6",
          "title": "练习: IN",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c28f9da7-40e3-4e7b-a91f-ee6a57443cf6",
            "completed_at": "2018-07-31T05:48:41.193Z",
            "last_viewed_at": "2019-10-09T19:03:20.503Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403272,
              "key": "fe9b0b16-233c-4580-8451-eb0456479d2a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 使用 IN 运算符的问题\n\n1. 使用 **accounts** 表返回 Walmart、Target 和 Nordstrom 的`name`（客户名称）, 同时包含` primary_poc`, 以及`sales_rep_id`。<br><br>\n\n2. 使用 **web_events** 表查找所有通过 `organic` 或 `adwords` 渠道(**channel**)联系的个人的信息。\n",
              "instructor_notes": ""
            },
            {
              "id": 403269,
              "key": "74cc5941-9ced-4420-a9b7-d153097b44d9",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewdc0fa4e4",
              "pool_id": "sqlwidget",
              "view_id": "d618b597-c811-4168-bab5-a458c4835fe1",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "width": "100%",
                    "height": "100%",
                    "allowSubmit": false,
                    "frameBorder": "0"
                  },
                  "kind": "sql-evaluator"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 403337,
          "key": "591d0ad2-470c-4195-8ca1-3c41ab341ea9",
          "title": "解决方案：IN",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "591d0ad2-470c-4195-8ca1-3c41ab341ea9",
            "completed_at": "2018-07-31T05:51:18.955Z",
            "last_viewed_at": "2019-10-09T19:04:06.771Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403273,
              "key": "f3fd7d3c-54ae-40a9-8fbb-9c28f23e3a38",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# IN 问题的解决方案\n\n1. \n```\nSELECT name, primary_poc, sales_rep_id\nFROM accounts\nWHERE name IN ('Walmart', 'Target', 'Nordstrom');\n```\n\n2. \n```\nSELECT *\nFROM web_events\nWHERE channel IN ('organic', 'adwords');\n```\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403341,
          "key": "36a1c4bb-10d6-401c-8c7e-d5141f549891",
          "title": "视频: NOT",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "36a1c4bb-10d6-401c-8c7e-d5141f549891",
            "completed_at": "2018-07-31T05:53:52.698Z",
            "last_viewed_at": "2019-10-09T19:04:48.076Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403274,
              "key": "979e7964-c26f-44d1-a254-3aa8524992d2",
              "title": "NOT 运算符",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "dSQF87oW8a0",
                "china_cdn_id": "dSQF87oW8a0.mp4"
              }
            },
            {
              "id": 403275,
              "key": "0908b282-e51c-4799-ba86-e643e52564a0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "**NOT** 运算符是一个非常有用的运算符，用于与之前介绍的两个运算符 **IN** 和 **LIKE** 一起运算。通过指定 **NOT LIKE** 或 **NOT IN**，我们可以查找到所有不符合特定条件的行。\n\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403342,
          "key": "7a401a69-4c73-48b3-ad11-96024e1bc4e3",
          "title": "练习: NOT",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7a401a69-4c73-48b3-ad11-96024e1bc4e3",
            "completed_at": "2018-07-31T07:11:07.799Z",
            "last_viewed_at": "2019-10-09T19:13:09.441Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403276,
              "key": "8b7ec604-5fe6-42aa-a6f3-44caa485c21b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 使用 NOT 运算符的问题\n\n我们可以使用这个新运算符来提取前两个练习中不属于查询内容的所有行。\n\n1. 使用**accounts**表查找除 Walmart、Target 和 Nordstrom 之外的所有商店的`name`（客户名称），` primary_poc`（主要联系人）, 以及`sales_rep_id`（销售代表工号）。\n2. 使用 **web_events** 表查找**不是**通过 `organic` 或 `adwords` 渠道(**channel**)联系到的个人的信息\n\n使用**accounts**表查找：\n\n1.  所有不以 'C' 开头的公司名。<br><br>\n2. 所有名称中不包含字符串 'one' 的公司名。 <br><br>\n3. 所有不以 's' 结尾的公司名。\n",
              "instructor_notes": ""
            },
            {
              "id": 403277,
              "key": "039586f4-20dd-474d-9480-d889f5577b8b",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewdc0fa4e4",
              "pool_id": "sqlwidget",
              "view_id": "47b9f6f3-c375-415e-a27c-1946cedd99d9",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "width": "100%",
                    "height": "100%",
                    "allowSubmit": false,
                    "frameBorder": "0"
                  },
                  "kind": "sql-evaluator"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 403343,
          "key": "997b289c-f042-4e2e-9b0f-12c723537afb",
          "title": "解决方案：NOT",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "997b289c-f042-4e2e-9b0f-12c723537afb",
            "completed_at": "2018-07-31T07:19:01.629Z",
            "last_viewed_at": "2019-10-09T19:13:07.910Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403278,
              "key": "e89b3441-233c-41a7-90b3-a35b9ac05faa",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# NOT IN 问题的解决方案\n\n1. \n```\nSELECT name, primary_poc, sales_rep_id\nFROM accounts\nWHERE name NOT IN ('Walmart', 'Target', 'Nordstrom');\n```\n2. \n```\nSELECT *\nFROM web_events\nWHERE channel NOT IN ('organic', 'adwords');\n```\n\n# NOT LIKE 问题的解决方案\n\n1. \n```\nSELECT name\nFROM accounts\nWHERE name NOT LIKE 'C%';\n```\n\n2. \n```\nSELECT name\nFROM accounts\nWHERE name NOT LIKE '%one%';\n```\n\n3. \n```\nSELECT name\nFROM accounts\nWHERE name NOT LIKE '%s';\n```\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403345,
          "key": "32dabf6d-7b56-4f7a-bb7e-9572aec9d45b",
          "title": "视频: AND 和 BETWEEN",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "32dabf6d-7b56-4f7a-bb7e-9572aec9d45b",
            "completed_at": "2018-07-31T07:23:44.912Z",
            "last_viewed_at": "2019-10-09T19:06:27.814Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403279,
              "key": "70d31a96-8c95-47d8-86f1-6b9877213a8a",
              "title": "AND & BETWEEN 运算符",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "nBuDPneWcKY",
                "china_cdn_id": "nBuDPneWcKY.mp4"
              }
            },
            {
              "id": 403280,
              "key": "0edea685-39b4-472c-a5a2-8bae6f340540",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "注：技术原因，视频中文字幕未正确显示该句，暂时在此补充（给你带来学习上的不便，深表歉意）：\n\n* 00:01:19,959 --> 00:01:23,919\nWHERE occurred_at >= '2016-04-01' AND <= '2016-10-01'\n\n* 00:01:23,920 --> 00:01:29,750\n其中 <= '2016-10-01' 并不是一个逻辑语句 无法评估真假\n\n\n**AND** 运算符用于 **WHERE** 语句中，用于一次考虑多个逻辑子句。  使用 **AND** 连接一个新的语句时，需要指定你感兴趣的列。可以同时连接尽可能多的考虑语句。  这个运算符可用于我们迄今为止所学习到的所有运算，包括算术运算符（`+`、`*`、`-`、`/`），可以使用 **AND** 运算符将 **LIKE**、**IN** 和 **NOT** 逻辑连接到一起。\n\n# BETWEEN 运算符\n\n有时使用 **BETWEEN** 比使用 **AND** 使语句更清楚一些。特别是在 **AND** 语句的不同部分使用相同的列时，使用**BETWEEN**可以让语句更清晰。  在上一个视频中，我们可能已经使用了 **BETWEEN**。\n\n比如编写：\n```\nWHERE column >= 6 AND column <= 10\n```\n就不如编写成以下更为清晰:\n```\nWHERE column BETWEEN 6 AND 10\n```\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403346,
          "key": "91b5b832-e513-49d9-8966-d7b26208249e",
          "title": "练习：AND 和 BETWEEN",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "91b5b832-e513-49d9-8966-d7b26208249e",
            "completed_at": "2018-07-31T07:29:51.741Z",
            "last_viewed_at": "2019-10-09T19:13:24.042Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403282,
              "key": "134a6729-503e-4cac-bef0-cc953768a4f8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 使用 AND 和 BETWEEN 运算符的问题\n\n1. 编写一个查询，返回所有**orders**(订单)，其中 `standard_qty` （标准纸数量）超过 1000，`poster_qty`（海报纸数量） 是 0，`gloss_qty` （铜板高光纸数量）也是 0。<br><br>\n2.  使用**accounts**表查找所有不以 'C' 开始但以 's' 结尾的公司名。 <br><br>\n3. 使用 **web_events** 表查找通过 `organic` 或 `adwords` 渠道来联系的，并在 2016 年的任何时间开通帐户的个人全部信息，并按照从最新到最旧的顺序排列。<br><br>\n",
              "instructor_notes": ""
            },
            {
              "id": 403281,
              "key": "74db87c5-73d8-44b5-b768-d94d33b7f86a",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewdc0fa4e4",
              "pool_id": "sqlwidget",
              "view_id": "2568b134-28b0-436f-8c22-fbbee38de0ed",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "width": "100%",
                    "height": "100%",
                    "allowSubmit": false,
                    "frameBorder": "0"
                  },
                  "kind": "sql-evaluator"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 403344,
          "key": "3ee697bd-b908-44c8-9f7e-69c1b6324ad6",
          "title": "解决方案: AND 和 BETWEEN",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "3ee697bd-b908-44c8-9f7e-69c1b6324ad6",
            "completed_at": "2018-07-31T07:38:59.349Z",
            "last_viewed_at": "2019-10-09T19:13:20.715Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403283,
              "key": "776e501d-204e-4539-b61d-b7da103c2be9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# AND 和 BETWEEN 问题的解决方案\n\n1. \n```\nSELECT *\nFROM orders\nWHERE standard_qty > 1000 AND poster_qty = 0 AND gloss_qty = 0;\n```\n2. \n```\nSELECT name\nFROM accounts\nWHERE name NOT LIKE 'C%' AND name LIKE '%s';\n```\n3. 你可能会觉得对日期数据使用 **BETWEEN** 不太好理解。对于单纯的日期数据而言（只包含年月日不包含时间的数据，比如 '2016-12-31'），其默认时间为日期当天的 00:00:00（也就是午夜时分），而 **BETWEEN** 通常是不包含端点在内的，这也是为什么将右边的时间点设置为 '2017-01-01' 的原因。\n```\nSELECT *\nFROM web_events\nWHERE channel IN ('organic', 'adwords') AND occurred_at BETWEEN '2016-01-01' AND '2017-01-01'\nORDER BY occurred_at DESC;\n```\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403349,
          "key": "6d684ff8-98a0-427a-ad7d-2a5666a457c7",
          "title": "视频: OR",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "6d684ff8-98a0-427a-ad7d-2a5666a457c7",
            "completed_at": "2018-07-31T07:42:03.262Z",
            "last_viewed_at": "2019-02-08T06:08:51.119Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403284,
              "key": "50bae6e3-1d07-4b1a-be5f-9e307450d063",
              "title": "OR 运算符",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "3vLGEuXAAvA",
                "china_cdn_id": "3vLGEuXAAvA.mp4"
              }
            },
            {
              "id": 403285,
              "key": "98504758-43bc-4a34-afc6-ec7f46627855",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "与 **AND** 运算符类似，**OR** 运算符可以组合多个语句。  使用 **OR** 连接新的语句时，需要指定你感兴趣的列。可以同时连接尽可能多的考虑语句。  这个运算符可用于我们迄今为止所学习到的所有运算，包括算术运算符（`+`、`*`、`-`、`/`），可以使用 **OR** 运算符将 **LIKE**、**IN**、**NOT**、**AND** 和 **BETWEEN**逻辑连接到一起。\n\n将多个运算组合到一起时，可能经常需要使用括号来确保我们要执行的逻辑能得到正确执行。下面的视频给出了这些情况的其中一个示例。\n",
              "instructor_notes": ""
            },
            {
              "id": 403286,
              "key": "ad5223ba-2896-4c75-ae83-69e6275a3e52",
              "title": "OR 语句",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "DRmkKVhe6-s",
                "china_cdn_id": "DRmkKVhe6-s.mp4"
              }
            }
          ]
        },
        {
          "id": 403347,
          "key": "59538de0-8405-46de-bede-d8f42c9541e2",
          "title": "练习：OR",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "59538de0-8405-46de-bede-d8f42c9541e2",
            "completed_at": "2018-07-31T07:46:23.593Z",
            "last_viewed_at": "2019-10-09T19:13:29.705Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403287,
              "key": "8103595c-1040-402f-ba80-1ae76bab1518",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 使用 OR 运算符的问题\n\n1. 查找 **orders**表，其中 `gloss_qty`（铜版纸数量） 或 `poster_qty` （海报纸数量）大于 4000。只在结果表中包含 `id` 字段。<br><br>\n\n2. 查找 **orders**表，其中普通纸数量 (`standard_qty`)为零，同时铜版纸数量 (`gloss_qty`) 或海报数量 (`poster_qty`)超过 1000，返回相关订单的所有信息。<br><br>\n\n3. 查找 **accounts**表，返回符合条件的信息：name 以 'C' 或 'W' 开头，主要联系人 (`primary_poc`) **包含** 'ana' 或 'Ana'，但不包含 'eana'。<br><br>",
              "instructor_notes": ""
            },
            {
              "id": 403288,
              "key": "d19c5116-e826-43be-97fb-90f44c5d31de",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewdc0fa4e4",
              "pool_id": "sqlwidget",
              "view_id": "795c83fc-a4eb-4389-9559-0d8447f58d5f",
              "gpu_capable": null,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "width": "100%",
                    "height": "100%",
                    "allowSubmit": false,
                    "frameBorder": "0"
                  },
                  "kind": "sql-evaluator"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 403348,
          "key": "0a61bc15-f011-42d8-9ed0-2d1ff302f805",
          "title": "解决方案：OR",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "0a61bc15-f011-42d8-9ed0-2d1ff302f805",
            "completed_at": "2018-07-31T07:48:59.435Z",
            "last_viewed_at": "2020-02-09T13:12:14.151Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403289,
              "key": "5d16afc8-fe6d-48c8-9140-6e217cb75808",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# OR 问题的解决方案\n\n1. \n```\nSELECT id\nFROM orders\nWHERE gloss_qty > 4000 OR poster_qty > 4000;\n```\n2. \n```\nSELECT *\nFROM orders\nWHERE standard_qty = 0 AND (gloss_qty > 1000 OR poster_qty > 1000);\n```\n3. \n```\nSELECT *\nFROM accounts\nWHERE (name LIKE 'C%' OR name LIKE 'W%') \n              AND ((primary_poc LIKE '%ana%' OR primary_poc LIKE '%Ana%') \n              AND primary_poc NOT LIKE '%eana%');\n```\n\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403350,
          "key": "2eecf75b-8198-47cc-ba1e-3bd4f782ebb8",
          "title": "SQL 基础概述",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2eecf75b-8198-47cc-ba1e-3bd4f782ebb8",
            "completed_at": "2018-07-31T07:54:50.506Z",
            "last_viewed_at": "2018-07-31T07:54:48.185Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 403290,
              "key": "ed4c01a5-0957-4d66-916a-d45fe2d9c90e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 概述\n\n### 命令\n\n我们已经学习了很多关于在 SQL 中编写代码的内容！我们现在来花一点回顾一下我们已经介绍的所有内容：\n\n\n\n\n|**语句**   | **使用方法**  | **其他详细信息**|\n|---|---|---|\n|   SELECT| SELECT **Col1**, **Col2**, ...  | 提供你需要的列 |\n|   FROM |  FROM **Table** | 提供列所在的表格\n|  LIMIT | LIMIT **10 **   | 限制返回的行数\n| ORDER BY  | ORDER BY **Col**  | 根据列命令表格。与 **DESC** 一起使用。\n| WHERE  | WHERE **Col > 5**  | 用于过滤结果的一个条件语句\n| LIKE  | WHERE **Col LIKE '%me%'**  | 仅提取出列文本中具有 'me' 的行\n| IN  | WHERE **Col IN ('Y', 'N')**  | 仅过滤行对应的列为 'Y' 或 'N'\n| NOT  | WHERE **Col NOT IN ('Y', \"N')**  | **NOT** 经常与 **LIKE** 和 **IN** 一起使用。\n| AND | WHERE **Col1 > 5 AND Col2 < 3 **  | 过滤两个或多个条件必须为真的行\n| OR  | WHERE **Col1 > 5 OR Col2 < 3**  | 过滤一个条件必须为真的行\n| BETWEEN | WHERE **Col BETWEEN 3 AND 5**  | 一般情况下，语法比使用 **AND** 简单一些\n\n### 其他提示\n\n虽然 SQL **不区分大小写**（语句无所谓大小写），我们讨论了一些比较好的方法  **关键词的顺序很重要！**  使用到目前为止所学习到的所有内容编写自己的语句：\n\n```\nSELECT col1, col2\nFROM table1\nWHERE col3  > 5 AND col4 LIKE '%os%'\nORDER BY col5\nLIMIT 10;\n```\n\n注意，可以检索与 **ORDER BY** 和 **WHERE** 语句中不同的列。假设所有这些列的名称都以这种方式（`col1`、`col2`、`col3`、`col4`、`col5`）存在在 `table1` 表中，那么这个查询就运行得很好。\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 403351,
          "key": "0f213a2e-ab83-42a5-be47-fd52a193c003",
          "title": "移动平均值",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "0f213a2e-ab83-42a5-be47-fd52a193c003",
            "completed_at": "2018-07-31T07:58:09.446Z",
            "last_viewed_at": "2018-10-06T13:41:31.574Z",
            "unstructured": null
          },
          "resources": {
            "files": [
              {
                "name": "Moving Average Exercise",
                "uri": "http://video.udacity-data.com.s3.amazonaws.com/topher/2017/September/59b0650b_moving-average-exercise/moving-average-exercise.csv"
              }
            ],
            "google_plus_link": null,
            "career_resource_center_link": null,
            "coaching_appointments_link": null,
            "office_hours_link": null,
            "aws_provisioning_link": null
          },
          "atoms": [
            {
              "id": 403291,
              "key": "1ff9d922-12be-4256-a01d-b1028e1f466e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 移动平均值\n\n你现在可以从数据库中提取数据了，我们再来看看完成项目的下一步：移动平均值。\n\n移动平均值用于将数据线性化，以便更容易观察长期趋势，也不会因日常波动而错乱。例如，假设你想可视化服装零售店的销售趋势。从每天的数据开始，而图表看起来太不稳定，因为更多的人在周末购物，所以销售额会在周末飙升。\n\n",
              "instructor_notes": ""
            },
            {
              "id": 403292,
              "key": "f67aa0ca-ec6b-4c4d-bb3c-aefda985a49f",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/September/59b03f28_chart-1/chart-1.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/f67aa0ca-ec6b-4c4d-bb3c-aefda985a49f",
              "caption": "",
              "alt": "",
              "width": 600,
              "height": 371,
              "instructor_notes": null
            },
            {
              "id": 403293,
              "key": "701dc402-2f5d-4450-b047-289f37d93668",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "可以按周计算销售额，但这可能不能显示你想要的一些详细信息。",
              "instructor_notes": ""
            },
            {
              "id": 403294,
              "key": "5b16b91c-dc71-4cf4-a8a3-9c644f2a8f35",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/September/59b07dc7_chart-3/chart-3.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/5b16b91c-dc71-4cf4-a8a3-9c644f2a8f35",
              "caption": "",
              "alt": "",
              "width": 600,
              "height": 371,
              "instructor_notes": null
            },
            {
              "id": 403295,
              "key": "1bed915e-b495-44e3-b8f6-5e7540218ae7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "使用移动平均值可使每日波动平滑一些，也可以观察长期趋势。",
              "instructor_notes": ""
            },
            {
              "id": 403297,
              "key": "60b8d0d5-90d8-40b9-baf0-531a6d36db12",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/September/59b03f15_chart/chart.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/60b8d0d5-90d8-40b9-baf0-531a6d36db12",
              "caption": "",
              "alt": "",
              "width": 600,
              "height": 371,
              "instructor_notes": null
            },
            {
              "id": 403298,
              "key": "88f1b925-cf53-4f49-9c3d-521c2fbd3719",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 在电子表格中移动平均值\n\n我们来看一下如何在电子表格中计算移动平均值。在这个练习中，我们将计算上图中显示的移动平均值。数据包含从 2009 年 1 月 1 日至 2009 年 3 月 31 日的每日销售额数据。[Google 文档](https://docs.google.com/spreadsheets/d/1xjbclbaS2d4p4XqeVAzYgLXRVbp935xwisn3NAbVGHw/edit#gid=0) 或本页底部链接的 CSV 文件提供这个示例的数据。\n\n开始时，创建一个名为 `7-day MA` 的第二列，这是存储移动平均值字段的地方。然后再到第七天 (1/7/2009)，使用 AVERAGE() 函数来计算前七天的平均销售额，如下图所示。\n",
              "instructor_notes": ""
            },
            {
              "id": 403299,
              "key": "7b09f3d2-72a5-4fcd-8f57-86ee08d5ba7b",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/September/59b04137_ma-in-sheets/ma-in-sheets.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/7b09f3d2-72a5-4fcd-8f57-86ee08d5ba7b",
              "caption": "",
              "alt": "",
              "width": 800,
              "height": 552,
              "instructor_notes": null
            },
            {
              "id": 403300,
              "key": "5382a047-d088-45a1-84c9-eea33946681f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "现在可以使用复制 + 粘贴、Ctrl + D，或单击，然后将公式拖动到下一个单元格。看看新公式，你会看到这个公式计算了第二到第八天的平均销售额。",
              "instructor_notes": ""
            },
            {
              "id": 403301,
              "key": "51ae1f0b-da10-45e1-9504-71f88a8b574c",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/September/59b04199_ma-in-sheets2/ma-in-sheets2.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/51ae1f0b-da10-45e1-9504-71f88a8b574c",
              "caption": "",
              "alt": "",
              "width": 796,
              "height": 595,
              "instructor_notes": null
            },
            {
              "id": 403302,
              "key": "28e863d3-9e34-4406-9f37-3952f9e4287d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "你可以继续此过程，一直到数据集末尾。复制单元格并完全粘贴到数据的末尾（一直到第 91 行）。完成后，请回答下面的练习问题。",
              "instructor_notes": ""
            },
            {
              "id": 403303,
              "key": "0a79b4d2-4fbc-4199-92e0-e6c10029933f",
              "title": "移动平均值练习",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0a79b4d2-4fbc-4199-92e0-e6c10029933f",
                "completed_at": "2018-07-31T08:14:48.115Z",
                "last_viewed_at": "2018-07-31T08:14:48.115Z",
                "unstructured": "{\"answer\":\"9259\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "2009 年 1 月 11 日的 7 天移动平均值是多少？请舍入到美元整数，不要在答案中添加美元符号或逗号。例如应该将 `$2,145.15` 写成 `2145`。",
                "matchers": [
                  {
                    "expression": "9259"
                  }
                ]
              }
            },
            {
              "id": 403304,
              "key": "84708009-d943-4c77-aaa7-41d9d442d36c",
              "title": "移动平均值练习 2",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "84708009-d943-4c77-aaa7-41d9d442d36c",
                "completed_at": "2018-07-31T08:15:04.623Z",
                "last_viewed_at": "2018-07-31T08:15:45.795Z",
                "unstructured": "{\"answer\":\"9981\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "2009 年 3 月 19 日的 14 天移动平均值是多少？",
                "matchers": [
                  {
                    "expression": "9981"
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}