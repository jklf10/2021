WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.765
对收集的数据创建模型 可以有许多方式

00:00:03.765 --> 00:00:06.509
无论是上节课中创建虚拟变量

00:00:06.509 --> 00:00:08.219
或高阶项

00:00:08.220 --> 00:00:12.945
还是填充缺失值的其他技巧之一

00:00:12.945 --> 00:00:14.560
要测量数据

00:00:14.560 --> 00:00:19.504
Scikit-learn 和 Pandas 是两个著名的特征工程库

00:00:19.504 --> 00:00:21.910
在 scikit-learn 预处理中

00:00:21.910 --> 00:00:26.664
Scikit-learn 导入预处理 然后你会看到这样的比例

00:00:26.664 --> 00:00:30.064
这称为 StandardScaler

00:00:30.065 --> 00:00:36.109
这是 MinMax scaler MaxAbs Scaler

00:00:36.109 --> 00:00:40.905
QuantileTransformer 归一化 二进制化

00:00:40.905 --> 00:00:47.954
编码类属特征 输入缺失值 自定义转换

00:00:47.954 --> 00:00:49.979
我们使用一个小型数据集来练习一下

00:00:49.979 --> 00:00:53.079
这样你可以明白它们如何发挥作用

00:00:53.079 --> 00:00:55.899
这里我已经创建了DataFrame

00:00:55.899 --> 00:00:57.149
如果观察一下它

00:00:57.149 --> 00:00:58.210
你会发现它是这样的

00:00:58.210 --> 00:01:00.810
我得到输出 X1 X2 X3

00:01:00.810 --> 00:01:03.852
X4 X5 你会发现有一些缺失值

00:01:03.851 --> 00:01:05.519
包括一些负数

00:01:05.519 --> 00:01:08.959
整数 这一列中只包含 1

00:01:08.959 --> 00:01:13.859
注意这些技巧的大部分包括拟合转换

00:01:13.859 --> 00:01:19.920
你可以用来拟合数据集 然后使用所描述的转换 进行转换

00:01:19.920 --> 00:01:23.820
这是使用许多 scikit-learn 函数的一种常见方法

00:01:23.819 --> 00:01:25.589
使用这些技巧的原因

00:01:25.590 --> 00:01:28.290
通常是为了创建更加稳健的模型

00:01:28.290 --> 00:01:30.600
不会受到数据缩放的影响

00:01:30.599 --> 00:01:33.209
回归是

00:01:33.209 --> 00:01:37.129
非常容易受到离散点严重影响的一种技巧

00:01:37.129 --> 00:01:40.479
这样可以通过你创建的模型提高预测水平

00:01:40.480 --> 00:01:42.674
不过它确实会改变解释

00:01:42.674 --> 00:01:47.420
类似于高阶项改变解释的方式

00:01:47.420 --> 00:01:50.879
现在我们来练习一些 这样你可以掌握它们的原理

00:01:50.879 --> 00:01:53.399
Pandas 具有许多很不错的特征

00:01:53.400 --> 00:01:56.760
你可以在文档中发现这些特征

00:01:56.760 --> 00:01:59.185
用于填充缺失值

00:01:59.185 --> 00:02:03.219
你会发现通过使用默认值

00:02:03.219 --> 00:02:07.495
使用这些列的平均值 填充缺失值

00:02:07.495 --> 00:02:12.830
所以这里的 1 表示下面四个 1 的平均值

00:02:12.830 --> 00:02:16.190
然后填充这些 1

00:02:16.189 --> 00:02:19.997
利用不缺失值的这些列中值的平均数

00:02:19.997 --> 00:02:24.649
然后在我们分类列中缺失值的地方

00:02:24.650 --> 00:02:27.260
实际上我们无法填充什么内容

00:02:27.259 --> 00:02:31.709
因为得到字母的平均值没有什么意义

00:02:31.710 --> 00:02:34.805
现在我们试一下预处理

00:02:34.805 --> 00:02:40.515
我们可以按比例缩放 只需要对 X 列进行操作

00:02:40.514 --> 00:02:45.169
这样使用 X2

00:02:45.169 --> 00:02:49.669
你会发现使用 min 和 max 会得到不同的缩放比例

00:02:49.669 --> 00:02:51.814
这个文档告诉你

00:02:51.814 --> 00:02:54.289
如何准确计算以及使用这种方法的原因

00:02:54.289 --> 00:02:58.664
按照比例缩放可以使特征的极小标准差稳健

00:02:58.664 --> 00:03:03.919
保留零项和零散数据

00:03:03.919 --> 00:03:05.599
这个文档相当不错

00:03:05.599 --> 00:03:09.000
为你提供了这些方法原理的例子

