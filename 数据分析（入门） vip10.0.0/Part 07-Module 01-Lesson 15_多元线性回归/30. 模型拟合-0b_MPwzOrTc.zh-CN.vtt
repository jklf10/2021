WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.740
完成这节视频后 你将练习

00:00:01.740 --> 00:00:04.419
我们这节课中学习的大量内容

00:00:04.419 --> 00:00:06.449
不过这节视频中我们将要学习如何

00:00:06.450 --> 00:00:08.974
使用 scikit-learn 快速训练拆分

00:00:08.974 --> 00:00:11.519
这里你可以发现使用 scikit-learn

00:00:11.519 --> 00:00:14.504
创建一个训练和测试数据集的文档

00:00:14.505 --> 00:00:19.323
这节视频中我们只进行单个训练测试的拆分

00:00:19.323 --> 00:00:20.879
不过一般在实际中

00:00:20.879 --> 00:00:24.750
你会训练测试切分 然后对训练数据

00:00:24.750 --> 00:00:29.109
进行交叉验证 然后使用测试数据作为最终测试

00:00:29.109 --> 00:00:32.604
下面提供的文档也可以作为参考

00:00:32.604 --> 00:00:39.140
首先我们拆分数据 训练和测试数据

00:00:39.140 --> 00:00:43.644
好 这是我们的数据和必要的库

00:00:43.645 --> 00:00:46.105
我们来创建训练测试的拆分

00:00:46.104 --> 00:00:50.464
基本上来说 具体步骤是这样的

00:00:50.465 --> 00:00:52.425
如果我们查看文档

00:00:52.424 --> 00:00:56.799
看到下面这里 应该利用一个 X 和一个 Y

00:00:56.799 --> 00:00:59.334
那么这里使用你的 X 和 Y

00:00:59.335 --> 00:01:03.640
也使用测试规模值

00:01:03.640 --> 00:01:05.890
这是在测试集里你想得到的数据百分比

00:01:05.890 --> 00:01:09.805
然后这是随机状态

00:01:09.805 --> 00:01:12.880
而且你得到的随机拆分

00:01:12.879 --> 00:01:16.209
是可以确保其他人也能得到

00:01:16.209 --> 00:01:19.679
如果你希望这样做

00:01:20.569 --> 00:01:25.809
我们应该创建这些 X 和 Y

00:01:25.810 --> 00:01:30.790
我会将 X 表示为默认值

00:01:30.790 --> 00:01:36.935
相当于不是价格的任何东西 这里不考虑房屋编号

00:01:36.935 --> 00:01:41.885
所以也删除了房屋编号

00:01:41.885 --> 00:01:49.930
好 现在你可以发现我们得到训练反应和测试反应

00:01:49.930 --> 00:01:53.145
对于训练反应和测试反应

00:01:53.144 --> 00:01:55.500
以及解释特征的训练集

00:01:55.500 --> 00:02:01.704
和解释特征的测试集

00:02:01.704 --> 00:02:04.784
这也是你应该立即做的事情

00:02:04.784 --> 00:02:09.030
通常人们会在完成特征工程后这样做

00:02:09.030 --> 00:02:10.784
在之前的概念中你已经见到过

00:02:10.784 --> 00:02:15.289
例如拆分前减去平均数和除以标准差

00:02:15.289 --> 00:02:16.394
但是这具有欺骗性

00:02:16.395 --> 00:02:19.050
因为使用测试集的信息

00:02:19.050 --> 00:02:23.415
是使用训练集中不包含的内容

00:02:23.414 --> 00:02:27.479
好 在拆分前你得到数据的平均数

00:02:27.479 --> 00:02:29.909
这意味着基于测试集的信息

00:02:29.909 --> 00:02:33.090
训练数据中实际上不包含测试集

00:02:33.090 --> 00:02:36.050
现在我们想要拟合这个数据集的线性模型

00:02:36.050 --> 00:02:37.500
使用 scikit-learn

00:02:37.500 --> 00:02:39.509
这与你之前使用 statsmodels 时

00:02:39.509 --> 00:02:42.189
见到的有些不同

00:02:42.189 --> 00:02:45.949
我们最后得到文档 你可以看到我们这样导入它

00:02:45.949 --> 00:02:50.474
这里可以说明我们想要一个正确的截距 实际上是默认值

00:02:50.474 --> 00:02:54.454
那么我们不能使用之前部分曾经使用的截距

00:02:54.455 --> 00:02:56.490
你会注意到它们使用预处理

00:02:56.490 --> 00:02:59.025
与我们在之前见到的一样 在这个标准化中

00:02:59.025 --> 00:03:00.569
如果我们指定为真

00:03:00.569 --> 00:03:02.789
默认情况下不能这样做

00:03:02.789 --> 00:03:06.114
这样无法提前预处理你的数据

00:03:06.115 --> 00:03:07.985
然后下面这是这些部分

00:03:07.985 --> 00:03:12.525
一般来说我们首先要用具体例证说明线性回归

00:03:12.525 --> 00:03:14.189
那么我把它命名为 lm

00:03:14.189 --> 00:03:16.349
好 我使用所有默认值

00:03:16.349 --> 00:03:18.604
无论默认值是什么 我只使用默认值

00:03:18.604 --> 00:03:23.549
我们用具体例证进行说明 然后拟合模型 如果回去查看文档

00:03:23.550 --> 00:03:25.043
你会注意到利用拟合

00:03:25.043 --> 00:03:27.825
我们应该传递到 X 然后是 Y 中

00:03:27.824 --> 00:03:33.174
我们通常根据训练数据拟合模型

00:03:33.175 --> 00:03:38.060
然后这是最终存储在 lm 函数中的内容

00:03:38.060 --> 00:03:40.895
如果你熟练使用以对象为中心的编程

00:03:40.895 --> 00:03:45.620
这基本上可以在 lm 中存储为属性信息

00:03:45.620 --> 00:03:48.629
然后我们进行预测并打分

00:03:48.629 --> 00:03:53.780
这样我们只是根据测试数据得到预测 然后

00:03:53.780 --> 00:04:00.026
我们对测试预测值和实际测试值的匹配度进行打分

00:04:00.026 --> 00:04:02.284
用具体例证说明 拟合

00:04:02.284 --> 00:04:05.314
预测 然后打分

00:04:05.314 --> 00:04:08.439
实际上我们一般根据测试集进行预测

00:04:08.439 --> 00:04:13.400
然后也对任务集进行打分

00:04:13.400 --> 00:04:15.265
我们也可以只使用默认值

00:04:15.264 --> 00:04:18.964
这里默认分数是 R 平方值

00:04:18.964 --> 00:04:20.929
那么我们可以看到效果怎么样

00:04:20.930 --> 00:04:23.360
你会注意到如果我们使用嵌入

00:04:23.360 --> 00:04:26.480
利用 X 和 Y

00:04:26.480 --> 00:04:29.825
实际上我们不需要这样做

00:04:29.824 --> 00:04:32.104
如果没有使用其中的 1

00:04:32.105 --> 00:04:34.610
这取决于你想得到的结果

00:04:34.610 --> 00:04:36.170
例如如果你不想得到 R 平方值

00:04:36.170 --> 00:04:38.819
我们这里做的就没有效果

00:04:38.819 --> 00:04:44.709
好 这里我们知道了模型如何拟合 然后基本上

00:04:44.709 --> 00:04:48.269
使用这个 X 测试数据和 Y 测试数据

00:04:48.269 --> 00:04:52.449
以及从这个模型中预测的内容和返回的分数

00:04:52.449 --> 00:04:56.495
这样你仍然需要创建自己的虚拟变量

00:04:56.495 --> 00:04:59.069
我们只想传递所有内容

00:04:59.069 --> 00:05:01.079
这里你可以只传递虚拟变量

00:05:01.079 --> 00:05:03.774
我们可以更加简化

00:05:03.774 --> 00:05:08.904
删除风格和街区

00:05:08.904 --> 00:05:14.209
我们这里只传递面积这一变量

00:05:14.209 --> 00:05:17.349
好 你会看到我们测试数据的分数

00:05:17.350 --> 00:05:21.410
约为 68% 利用面积

00:05:21.410 --> 00:05:23.035
卧室和卫生间

00:05:23.035 --> 00:05:26.245
一般来说 我们更倾向于使用测试数据的分数

00:05:26.245 --> 00:05:29.899
而不是只使用训练数据集中的分数

00:05:29.899 --> 00:05:33.814
它体现了你的模型如何完成没遇到过的新数据

00:05:33.814 --> 00:05:38.529
我们通过改变这些变量 观察

00:05:38.529 --> 00:05:40.974
哪些模型能够最好地完成测试数据

00:05:40.975 --> 00:05:44.000
然后在练习中使用这个模型继续进行

