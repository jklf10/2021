{
  "data": {
    "lesson": {
      "id": 339107,
      "key": "280d5ccf-6440-4d27-97d1-d9f6118359bc",
      "title": "查看仓库的历史记录",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "zh-cn",
      "summary": "了解如何查看现有 git 仓库的 commit 历史记录至关重要。你将在这节课学习如何查看历史记录。",
      "lesson_type": "Classroom",
      "display_workspace_project_only": null,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/280d5ccf-6440-4d27-97d1-d9f6118359bc/339107/1547629863434/%E6%9F%A5%E7%9C%8B%E4%BB%93%E5%BA%93%E7%9A%84%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/280d5ccf-6440-4d27-97d1-d9f6118359bc/339107/1547629859776/%E6%9F%A5%E7%9C%8B%E4%BB%93%E5%BA%93%E7%9A%84%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 339078,
          "key": "212f2bac-e7e2-4ca9-b93e-91a9e57926dd",
          "title": "简介",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "212f2bac-e7e2-4ca9-b93e-91a9e57926dd",
            "completed_at": "2019-05-07T07:29:05.735Z",
            "last_viewed_at": "2019-05-07T07:29:05.619Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 338801,
              "key": "878b87fa-c1b2-46e2-af3f-b68b27b57e4c",
              "title": "Gitfinal L3 01 仓库的历史记录 - 简介",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "UBmg3syQS0E",
                "china_cdn_id": "UBmg3syQS0E.mp4"
              }
            }
          ]
        },
        {
          "id": 339079,
          "key": "ee7a6ad0-b3b6-42b4-9823-a79f7c6d0f27",
          "title": "显示仓库的 commit",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ee7a6ad0-b3b6-42b4-9823-a79f7c6d0f27",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 338802,
              "key": "71d14157-98ee-4b4e-98e9-be7233e5a42d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "> 提示：在第 2 节课，你使用 `git clone` 克隆了博客项目。我们将在这节课用到该项目。如果你在上节课没有克隆该项目，则运行以下命令来获得该项目：\n\n> ```bash\n$ git clone https://github.com/udacity/course-git-blog-project\n```\n\n> 克隆之后，别忘了 `cd` 到该项目。\n\n>如果遇到问题，请参阅[克隆现有仓库相关概念](https://classroom.udacity.com/courses/ud123/lessons/437a88fc-15f5-48b8-a6a5-0cf3347e6183/concepts/59082be0-c1af-4839-8ae5-0a182dc5bfe8#) 或在[论坛](https://discussions.youdaxue.com/c/Git-and-GitHub)上咨询他人！",
              "instructor_notes": ""
            },
            {
              "id": 338803,
              "key": "da48d463-aff4-4aa8-9408-7bd77b471ff1",
              "title": "首要任务",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "da48d463-aff4-4aa8-9408-7bd77b471ff1",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "克隆博客项目仓库后，使用命令行转到项目的目录下。当你位于博客项目中时，你应该在 git 仓库中首先执行什么？",
                "answers": [
                  {
                    "id": "a1486769275063",
                    "text": "运行 `git status` 命令",
                    "is_correct": true
                  },
                  {
                    "id": "a1486769282496",
                    "text": "在代码编辑器中打开项目",
                    "is_correct": false
                  },
                  {
                    "id": "a1486769283048",
                    "text": "判断应该构建什么新功能",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 338804,
              "key": "92c7b02d-43d5-40c6-a649-a872041fb2da",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/February/589e4d46_ud123-l3-git-status-output/ud123-l3-git-status-output.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/92c7b02d-43d5-40c6-a649-a872041fb2da",
              "caption": "_终端显示了 `git status` 命令的输出结果。_",
              "alt": "",
              "width": 1756,
              "height": 1398,
              "instructor_notes": null
            },
            {
              "id": 338805,
              "key": "28ebdfe8-e4cf-4fba-bac8-0748a0066c6a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## git status 和打开项目\n\n          \n你可以看到 `git status` 的输出结果是：\"nothing to commit, working directory clean\"，意味着我们可以继续并检出该项目了！\n\n          \n在你喜欢的代码编辑器中打开该项目。花几分钟时间看看项目，包括 CSS 和 JavaScript 文件，但是重点看一下 HTML 文件。",
              "instructor_notes": ""
            },
            {
              "id": 338806,
              "key": "86ab129a-6958-4eca-a7f4-8c308be23b4a",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/February/589e4d9d_ud123-l3-project-in-editor/ud123-l3-project-in-editor.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/86ab129a-6958-4eca-a7f4-8c308be23b4a",
              "caption": "_在代码编辑器中打开了课程的博客项目。正在显示 `index.html` 文件。_",
              "alt": "",
              "width": 2986,
              "height": 1754,
              "instructor_notes": null
            },
            {
              "id": 338807,
              "key": "e093342f-8503-46e9-bbf3-df50ad6873c0",
              "title": "何时添加的标题？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e093342f-8503-46e9-bbf3-df50ad6873c0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "看看 `index.html` 文件中第 15 行的 `<h1>Expedition</h1>` 标题。\n            \n根据你所看到的内容，你觉得该标题是何时被添加的？",
                "answers": [
                  {
                    "id": "a1486769594727",
                    "text": "是在周二添加的，对，周二。",
                    "is_correct": false
                  },
                  {
                    "id": "a1486769626903",
                    "text": "三周以前",
                    "is_correct": false
                  },
                  {
                    "id": "a1486769627713",
                    "text": "只看代码的话，不知道是什么时候。",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 338808,
              "key": "b38e46e0-de3f-4e1c-9d22-6e456d97f097",
              "title": "谁添加了这个标题？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "b38e46e0-de3f-4e1c-9d22-6e456d97f097",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "所以我们不确定何时添加的标题。那么，再回答一个更简单的问题：谁添加了这个标题？或者说，你能在只看代码的情况下告诉我是谁添加的吗？",
                "answers": [
                  {
                    "id": "a1486769793801",
                    "text": "是 Richard 添加的！",
                    "is_correct": false
                  },
                  {
                    "id": "a1486769810745",
                    "text": "不清楚",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 338809,
              "key": "e8dd4903-7b47-4128-b2c0-d29d833df458",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## git log 命令\n\n          \n要回答这些问题，就要用到 `git log` 命令！与其逐条解释它的所有作用，不如直接体验一下吧！请在终端运行 `git log` 命令：\n\n          \n```bash\n$ git log\n          \n```\n\n          \n终端应该显示以下界面。",
              "instructor_notes": ""
            },
            {
              "id": 338810,
              "key": "131ad097-d950-4beb-bfc9-268bc10d4ff9",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/February/589e4f6a_ud123-l3-git-log-output/ud123-l3-git-log-output.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/131ad097-d950-4beb-bfc9-268bc10d4ff9",
              "caption": "_终端显示了 `git log` 命令的输出结果。_",
              "alt": "",
              "width": 1756,
              "height": 1398,
              "instructor_notes": null
            },
            {
              "id": 338811,
              "key": "d4f294dd-7f9b-418b-9afc-d66650b1f57d",
              "title": "Nd016 WebND Ud123 Gitcourse BETAMOJITO L3 11 git log 输出说明",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "xJfurQcVYfo",
                "china_cdn_id": "xJfurQcVYfo.mp4"
              }
            },
            {
              "id": 338812,
              "key": "eb768f79-dd19-4c3d-a580-fbb2a224e6dd",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 了解日志内容\n\n          \n如果你不习惯在命令行上使用分页器，那么 <a href=\"https://en.wikipedia.org/wiki/Less_(Unix)\" target=\"_blank\">less(英)</a> 用起来会比较奇怪。以下是一些实用技巧：\n\n          \n* 要**向下**滚动，按下\n            \n* `j` 或  `↓` 一次向下移动一行\n            \n* `d` 按照一半的屏幕幅面移动\n            \n* `f` 按照整个屏幕幅面移动\n          \n* 要 **向上**滚动，按上\n            \n* `k` 或 `↑` 一次向上移动一行\n            \n* `u` 按照一半的屏幕幅面移动\n            \n* `b` 按照整个屏幕幅面移动\n          \n* 按下 `q` 可以**退出**日志（返回普通的命令提示符）",
              "instructor_notes": ""
            },
            {
              "id": 338813,
              "key": "45b32f03-9bab-47c2-a5c8-2484188c2efb",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "在进行 commit 时，git 会记录大量信息。看看你能否通过 `git log` 回答以下问题！",
              "instructor_notes": ""
            },
            {
              "id": 338814,
              "key": "fe6d1537-f0a9-4a4a-a3ba-030190f415ed",
              "title": "谁提交了 commit？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "fe6d1537-f0a9-4a4a-a3ba-030190f415ed",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "使用 `git log` 查找 SHA 以 `f9720a` 开头的 commit。谁提交了这条 commit？",
                "answers": [
                  {
                    "id": "a1486770186155",
                    "text": "James Parkes",
                    "is_correct": false
                  },
                  {
                    "id": "a1486770215935",
                    "text": "Richard Kalehoff",
                    "is_correct": true
                  },
                  {
                    "id": "a1486770216498",
                    "text": "Colt Steele",
                    "is_correct": false
                  },
                  {
                    "id": "a1486770217058",
                    "text": "Julia Van Cleve",
                    "is_correct": false
                  },
                  {
                    "id": "a1486770217623",
                    "text": "Godzilla McFiddlebrunches",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 338815,
              "key": "891a7cac-9424-4c13-8a1b-04d4c15d961e",
              "title": "消息是什么？",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "891a7cac-9424-4c13-8a1b-04d4c15d961e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "使用 `git log` 查找 SHA 以 `8aa6668` 开头的 commit。这条 commit 的消息是什么？",
                "matchers": [
                  {
                    "expression": "\\s*Convert social links from text to images\\s*"
                  }
                ]
              }
            },
            {
              "id": 338816,
              "key": "e42b6260-1a65-438a-8bbc-dbd8d54f030f",
              "title": "何时提交的 commit？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e42b6260-1a65-438a-8bbc-dbd8d54f030f",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "使用 `git log` 查找 SHA 以 `f9720a9` 开头的 commit。这条 commit 是何时提交的？",
                "answers": [
                  {
                    "id": "a1486770633648",
                    "text": "Mon Dec 5 10:25:22 2016",
                    "is_correct": false
                  },
                  {
                    "id": "a1486770644087",
                    "text": "Mon Dec 5 10:11:51 2016",
                    "is_correct": true
                  },
                  {
                    "id": "a1486770644615",
                    "text": "Sat Dec 3 16:09:00 2016",
                    "is_correct": false
                  },
                  {
                    "id": "a1486770645166",
                    "text": "Fri Dec 2 16:58:27 2016",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 338817,
              "key": "d4b7fbe2-3907-4465-bf3e-aa02c8ebe5b7",
              "title": "SHA 是什么？",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d4b7fbe2-3907-4465-bf3e-aa02c8ebe5b7",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "使用 `git log` 查找消息是 `Set article timestamp color` 的 commit。这条 commit 的 SHA 是多少？请提供该 SHA 的前 7 个字符。",
                "matchers": [
                  {
                    "expression": "^5de135a$"
                  }
                ]
              }
            },
            {
              "id": 338818,
              "key": "851aca9d-60eb-4c16-95e7-27461898ed82",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## git log 小结\n\n          \n很棒！是不是觉得掌握的 git 知识越来越多了？\n\n          \n我们快速总结下 `git log` 命令。`git log` 命令用于显示仓库中所有 commit 的信息。\n\n          \n```bash\n$ git log\n          \n```\n\n          \n_默认情况下_，该命令会显示仓库中每个 commit 的：\n\n          \n* SHA\n          \n* 作者\n          \n* 日期\n          \n* 消息\n\n         \n 我强调了“默认情况下”是因为 `git log` 命令显示的信息远不止这些。 \n\n          \ngit 使用命令行分页器 less 浏览所有信息。以下是 less 的重要快捷键：\n\n          \n* 要按行向下滚动，使用 `j` 或 `↓` \n          \n* 要按行向上滚动，使用 `k` 或 `↑` \n          \n* 要按页向下滚动，使用空格键或 Page Down 按钮\n          \n* 要按页向下滚动，使用 `b` 或 Page Up 按钮\n          \n* 要退出，使用 `q` \n\n          \n我们将在下节课中提升我们的 `git log` 使用技巧以显示更多信息。\n\n          \n还在等什么呢？点击下面的链接转到下节课吧！",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 339080,
          "key": "aff71bac-d552-4498-aee2-f26cf30f5e52",
          "title": "更改 git log 显示信息的方式",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "aff71bac-d552-4498-aee2-f26cf30f5e52",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 338819,
              "key": "76abb929-8657-47ce-ba30-4a311f62e323",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "你做到了这一切，恭喜你已经走了这么远！说真的，学习 git 是一项挑战。我为你的坚持不懈而鼓掌。\n\n          \n看看这次运行 `git log` 后的输出结果：",
              "instructor_notes": ""
            },
            {
              "id": 338820,
              "key": "1b6ca2f1-b1a7-4219-9eb4-aea43db96811",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/February/589e4f6a_ud123-l3-git-log-output/ud123-l3-git-log-output.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/1b6ca2f1-b1a7-4219-9eb4-aea43db96811",
              "caption": "_终端显示了运行 `git log` 后的输出结果。_",
              "alt": "",
              "width": 1756,
              "height": 1398,
              "instructor_notes": null
            },
            {
              "id": 338821,
              "key": "42bd1825-eb16-4f1f-b047-4f85d5818ed5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "我们已经仔细了解了 `git log` 显示的详细信息。但是现在，回顾并整合一下我们之前学到的内容。\n\n          \n思考一下这些问题：\n\n         \n* **SHA** - `git log` 将显示每个 commit 的完整 SHA。每个 SHA 都是唯一的，因此，我不需要查看整个 SHA。只需知道前 6-8 个字符即可。如果我们能只显示 SHA 的前 5 个左右的字符，是不是会节省一些空间？\n* **作者** - `git log` 输出结果显示了每个 commit 的作者！其他仓库可能有多个人协作，因此情况可能不同，但是对于此仓库，只有一个人提交了所有的 commit，因此所有 commit 的作者是一样的。我们需要查看每个 commit 的作者吗？如果我们想隐藏这一信息呢？\n          \n* **日期** - 默认情况下，`git log` 将显示每个 commit 的日期。但是我们真的关心 commit 的日期吗？知道日期有时会很重要，但是每次都知道日期并不十分重要，在很多情况下都可以忽略。能否隐藏该信息，以便节省空间？\n          \n* **commit 消息** - 这是 commit 消息最重要的部分…我们通常都希望看到此信息\n\n          \n如何使输出结果更简短，并节省大量空间？我们可以使用 **选项**。",
              "instructor_notes": ""
            },
            {
              "id": 338822,
              "key": "4a4ef9c5-e38e-4aeb-974f-147938b67505",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "> 提示：这并不是一种命令行进程，但是选项可以用来更改程序的工作方式。例如，`ls` 命令将列出当前目录下的所有文件。`ls` 命令具有 `-l` 选项 （即 `ls -l`），它会运行相同的 `ls` 命令，但是会更改其工作方式；它会显示 _long_ 格式的信息（`-l` 表示 _long_）。\n       \n> 选项可以用来更改程序的工作方式和显示的信息。要详细了解命令行程序和选项，请参阅我们的 [Linux 命令行基础](https://cn.udacity.com/course/linux-command-line-basics--ud595) 课程。 \n    ",
              "instructor_notes": ""
            },
            {
              "id": 338823,
              "key": "0970acdc-babb-4213-96c8-46654d3d8502",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## git log --oneline\n\n          \n`git log` 命令有一个选项，可以用来更改仓库信息的显示方式。该选项为 `--oneline`：\n          \n```bash\n$ git log --oneline\n          \n```\n          \n看看输出结果有何不同！",
              "instructor_notes": ""
            },
            {
              "id": 338824,
              "key": "c3436d25-85d3-4b19-b077-18196f3178eb",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/February/589e545c_ud123-l3-git-log-vs-git-log-oneline/ud123-l3-git-log-vs-git-log-oneline.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/c3436d25-85d3-4b19-b077-18196f3178eb",
              "caption": "_两个并排显示的终端。左侧显示的是包含所有信息的 `git log` 命令的结果，右侧显示的是包含简略版 SHA 和 commit 消息的 `git log --oneline` 命令的结果。_",
              "alt": "",
              "width": 3184,
              "height": 1172,
              "instructor_notes": null
            },
            {
              "id": 338825,
              "key": "c7d5fa94-9d24-4184-9d4b-7103f705d323",
              "title": "Nd016 WebND Ud123 Gitcourse BETAMOJITO L3 25 Git Log Vs Git Log --Oneline Walkthru",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "rn6v_QgYFnU",
                "china_cdn_id": "rn6v_QgYFnU.mp4"
              }
            },
            {
              "id": 338826,
              "key": "e177a603-0dd1-4c2e-a3bc-4bcf547e0278",
              "title": "退出 git log --oneline",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e177a603-0dd1-4c2e-a3bc-4bcf547e0278",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "你正处在 `git log --oneline` 命令中，并且想要从 `git log --oneline` 的输出结果中退出，然后返回普通的命令提示符。要回到普通的命令提示符，你应该按下键盘上的哪个键？",
                "answers": [
                  {
                    "id": "a1486771373266",
                    "text": " `esc` 键",
                    "is_correct": false
                  },
                  {
                    "id": "a1486771380667",
                    "text": " `q` 键",
                    "is_correct": true
                  },
                  {
                    "id": "a1486771381172",
                    "text": " `ctrl` + `c` 键",
                    "is_correct": false
                  },
                  {
                    "id": "a1486771381724",
                    "text": " `ctrl` + `d` 键",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 338827,
              "key": "b419d687-5144-45bd-8f93-4869e6de515b",
              "title": "Nd016 WebND Ud123 Gitcourse BETAMOJITO L3 27 Confession Corner",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "xtsugblSwrU",
                "china_cdn_id": "xtsugblSwrU.mp4"
              }
            },
            {
              "id": 338828,
              "key": "c0a914df-1239-4426-ad11-ae4e39adb544",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## git log --oneline 小结\n\n          \n`--oneline` 选项用于更改 `git log` 显示信息的方式：\n          \n```bash\n$ git log --oneline\n          \n```\n\n 此命令：\n\n          \n* 每行显示一个 commit\n          \n* 显示 commit 的 SHA 的前 7 个字符\n          \n* 显示 commit 的消息\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 339081,
          "key": "7e127ca9-7d0a-414d-ad30-708d60248a96",
          "title": "查看修改后的文件",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7e127ca9-7d0a-414d-ad30-708d60248a96",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 338829,
              "key": "c6f0d410-fdb6-43e0-a8a9-941966320a6f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "我们刚刚了解了用于每行显示一个 commit 的 `--oneline` 选项。该命令适合大致了解仓库，但是如果说我们想深入了解某个 commit 更改了哪个/哪些文件呢？",
              "instructor_notes": ""
            },
            {
              "id": 338830,
              "key": "8c6788e5-c723-429c-ab78-44737b275230",
              "title": " 修改了哪个/哪些文件？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "8c6788e5-c723-429c-ab78-44737b275230",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "如果你查看 commit `a3dc99a` 的仓库，会看到消息\"Center content on page”。\n这条 commit 更改了哪个/哪些文件？",
                "answers": [
                  {
                    "id": "a1487108530016",
                    "text": "HTML 文件",
                    "is_correct": false
                  },
                  {
                    "id": "a1487108538219",
                    "text": " CSS 文件",
                    "is_correct": false
                  },
                  {
                    "id": "a1487108539480",
                    "text": " JavaScript 文件",
                    "is_correct": false
                  },
                  {
                    "id": "a1487108540121",
                    "text": " HTML 和 CSS 文件",
                    "is_correct": false
                  },
                  {
                    "id": "a1487108553870",
                    "text": " HTML 和 JS 文件",
                    "is_correct": false
                  },
                  {
                    "id": "a1487108557818",
                    "text": " 无法确定",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 338831,
              "key": "c8197f5b-5507-4bc5-9f08-bc84e187e8d0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## `git log --stat` 简介\n\n          \nThe `git log` 命令有一个选项可以用来显示 commit 中更改的文件以及添加或删除的行数。该选项为 `--stat`（stat 是“统计信息 statistics”的简称）：\n\n```bash\n$ git log --stat\n```\n\n          \n运行该命令并查看显示结果。",
              "instructor_notes": ""
            },
            {
              "id": 338832,
              "key": "6ffe4710-7def-498f-8a96-c0306bb4bee7",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/February/58a37bff_ud123-l3-git-log-vs-git-log-stat/ud123-l3-git-log-vs-git-log-stat.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/6ffe4710-7def-498f-8a96-c0306bb4bee7",
              "caption": "_两个并排显示的终端。左侧显示的是包含所有信息的 `git log` 命令的结果，右侧显示的是列出了被更改的文件以及添加/删除的行数的 `git log --stat` 命令的结果。_",
              "alt": "",
              "width": 3262,
              "height": 1172,
              "instructor_notes": null
            },
            {
              "id": 338833,
              "key": "60246956-94ea-42e9-823c-8ddc9d379aa1",
              "title": "Nd016 WebND Ud123 L3 33 Git Log 与 Git Log --Stat 讲解",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "aOICKP_9xiY",
                "china_cdn_id": "aOICKP_9xiY.mp4"
              }
            },
            {
              "id": 338834,
              "key": "8006dcd2-bdc4-464c-9077-445d5cb90bda",
              "title": "修改了多少个文件？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "8006dcd2-bdc4-464c-9077-445d5cb90bda",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "根据你到目前为止所学的 `git log` 和其相关的选项知识，你认为 SHA 为 `6f04ddd` 的 commit 修改了多少个文件？",
                "answers": [
                  {
                    "id": "a1487109181976",
                    "text": "1 个文件",
                    "is_correct": false
                  },
                  {
                    "id": "a1487109223453",
                    "text": "2 个文件",
                    "is_correct": true
                  },
                  {
                    "id": "a1487109224094",
                    "text": "9 个文件",
                    "is_correct": false
                  },
                  {
                    "id": "a1487109224679",
                    "text": "10 个文件",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 338835,
              "key": "61916961-9113-4b2e-8f04-6cf95e7c8749",
              "title": "修改了多少个文件（第 2 部分）？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "61916961-9113-4b2e-8f04-6cf95e7c8749",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "第一道题答的很棒，再看一道题！SHA 为 `8d3ea36` 的 commit 修改了多少个文件？",
                "answers": [
                  {
                    "id": "a1487109281528",
                    "text": "1 个文件",
                    "is_correct": false
                  },
                  {
                    "id": "a1487109308820",
                    "text": "2 个文件",
                    "is_correct": true
                  },
                  {
                    "id": "a1487109309404",
                    "text": "3 个文件",
                    "is_correct": false
                  },
                  {
                    "id": "a1487109309921",
                    "text": "5 个文件",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 338836,
              "key": "ccdd02b1-d354-44a3-836d-3570c05bd988",
              "title": "修改了多少行？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ccdd02b1-d354-44a3-836d-3570c05bd988",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "现在再看看 `--stat` 选项显示的另一项信息。SHA 为 `8d3ea36` 的 commit 在 `index.html` 中删除了多少行代码？",
                "answers": [
                  {
                    "id": "a1487109347932",
                    "text": "2 行",
                    "is_correct": false
                  },
                  {
                    "id": "a1487109411994",
                    "text": "4 行",
                    "is_correct": true
                  },
                  {
                    "id": "a1487109412646",
                    "text": "9 行",
                    "is_correct": false
                  },
                  {
                    "id": "a1487109413141",
                    "text": "13 行",
                    "is_correct": false
                  },
                  {
                    "id": "a1487109414638",
                    "text": "28 行",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 338837,
              "key": "619e02b3-dd4f-4e4f-b32a-5e3a583362ca",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## `git log --stat` 小结\n\n          \n总结下，`--stat` 选项用于更改 `git log` 显示信息的方式：\n\n```bash\n$ git log --stat\n```\n\n          \n此命令会：\n\n          \n* 显示被修改的文件\n          \n* 显示添加/删除的行数\n          \n* 显示一个摘要，其中包含修改/删除的总文件数和总行数\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 339082,
          "key": "dac0d8d4-e9a0-4b6e-bf65-f2d8e7a434c8",
          "title": "查看文件更改",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "dac0d8d4-e9a0-4b6e-bf65-f2d8e7a434c8",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 338838,
              "key": "3292dd03-d14b-4984-94fd-3bd073855db9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 查看更改\n\n          \n我们知道 `git log` 将显示仓库中的 commit，如果添加 `--stat` 选项，则可以看出修改了哪些文件以及添加/删除了多少行代码。如果能查看到底进行了哪些更改，是不是更棒？\n\n          \n如果这不是版本控制系统的最精彩部分，那想不出还有什么更精彩的地方了！能够查看到底对文件作出了哪些更改非常重要！这使得我们能够得出结论 “这个 commit 向该按钮添加了 5 像素的圆角！”。\n\n          \n例如，在博客项目中，commit `a3dc99a` 具有消息\"center content on page\"并通过添加 5 行内容修改了 CSS 文件。到底添加了哪 5 行？如何找出这 5 行？",
              "instructor_notes": ""
            },
            {
              "id": 338839,
              "key": "32b1e1b6-df3b-488c-ba99-a46b21be1199",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/February/58a37ded_ud123-l3-git-log-stat/ud123-l3-git-log-stat.gif",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/32b1e1b6-df3b-488c-ba99-a46b21be1199",
              "caption": "_终端中运行了命令 `git log --stat`，它显示了 commit 并显示出第一个 commit 的统计信息，显示添加了 5 行代码的 CSS 文件。_",
              "alt": "",
              "width": 1036,
              "height": 588,
              "instructor_notes": null
            },
            {
              "id": 338840,
              "key": "921dcb3a-ceb8-4c97-ad33-494a200528ea",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## `git log -p`\n\n          \n`git log` 命令具有一个可用来显示对文件作出实际更改的选项。该选项是 `--patch`，可以简写为 `-p`：\n\n```bash\n$ git log -p\n```\n\n          \n运行该命令并查看显示结果。",
              "instructor_notes": ""
            },
            {
              "id": 338841,
              "key": "f75d11d1-3b06-411d-a136-3feaf7ab62e4",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/February/58a37ea6_ud123-l3-git-log-p/ud123-l3-git-log-p.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/f75d11d1-3b06-411d-a136-3feaf7ab62e4",
              "caption": "_终端显示了 `git log -p` 命令的输出结果。注意，你的终端的颜色标记可能不同。_",
              "alt": "",
              "width": 848,
              "height": 738,
              "instructor_notes": null
            },
            {
              "id": 338842,
              "key": "28601f12-f51e-4187-aa7f-42bf141a1dc8",
              "title": "Nd016 WebND Ud123 Gitcourse BETAMOJITO L3 42 Git Log -P Output Walkthru",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "A8Kwocr-K8c",
                "china_cdn_id": "A8Kwocr-K8c.mp4"
              }
            },
            {
              "id": 338843,
              "key": "aa74d1b2-bb34-474c-9417-483de85e389b",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/February/58a37f65_ud123-l3-git-log-p-lines-removed-annotated/ud123-l3-git-log-p-lines-removed-annotated.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/aa74d1b2-bb34-474c-9417-483de85e389b",
              "caption": "_终端显示了 `git log -p` 命令的输出结果。请查看下面关于输出结果的详细说明。_",
              "alt": "",
              "width": 2262,
              "height": 1342,
              "instructor_notes": null
            },
            {
              "id": 338844,
              "key": "be8fee72-8d37-4a86-80a1-f4ad347b9b61",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 带注释的 `git log -p` 输出\n\n我们通过上述图片快速总结下 `git log -p` 的输出：\n\n* 🔵  -  正在显示的文件\n* 🔶  - 文件第一版的哈希值和第二版的哈希值\n    * 通常不重要，因此可以忽略\n* ❤️  - 文件的旧版本和当前版本\n* 🔍  - 添加的行所在的位置以及添加了多少行\n    * `-15,83` 表示旧版本（用 `-` 表示）从第 15 行开始，显示了 83 行\n    * `+15,85` 表示当前版本（用 `+` 表示）从第 15 行开始，现在变成了 85 行...这 85 行显示在下方\n* ✏️  -  在 commit 中实际进行的更改\n    * 用红色标示并以减号 (`-`) 开头的行是位于文件原始版本中，但是被 commit 删除的行\n    * 用绿色标示并以加号 (`+`) 开头的行是 commit 新加的行\n\n## 进一步研究\n\n[使用 -p 生成补丁](https://git-scm.com/docs/git-diff#_generating_patches_with_p) Git 文档 (英)\n     ",
              "instructor_notes": ""
            },
            {
              "id": 338845,
              "key": "3e3d803f-260a-4a3d-8f4d-3663368cea44",
              "title": "编辑是从哪开始的？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "3e3d803f-260a-4a3d-8f4d-3663368cea44",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "根据你所学的 `git log` 的 `-p` 选项方面的知识，看看 SHA 为 `50d835d` 的 commit。你应该从 `app.css` 中的哪一行开始查看，从而了解之前做了哪些更改呢？\n\n提示 - 记住，在查看 `git log` 输出时，用 `d` 键可以向下滚动半个页面，而用 `u` 键可以向上滚动半个页面。",
                "answers": [
                  {
                    "id": "a1487110111347",
                    "text": "第 63 行",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110189938",
                    "text": " 第 89 行",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110190411",
                    "text": "第 127 行",
                    "is_correct": true
                  },
                  {
                    "id": "a1487110190940",
                    "text": "第 155 行",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 338846,
              "key": "7ab48bda-0c37-4627-bbfe-e86ebb8a1227",
              "title": "添加了什么？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7ab48bda-0c37-4627-bbfe-e86ebb8a1227",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "使用 `git log` 命令或者调用相关的选项判断 commit `4a60beb` 添加了什么代码？",
                "answers": [
                  {
                    "id": "a1487110238309",
                    "text": "color: #352d2d;",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110269522",
                    "text": "color: #250808;",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110270006",
                    "text": "color: #333333;",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110270558",
                    "text": "color: #2e3d49;",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 338847,
              "key": "6f4d9018-84a3-4089-bc56-d3bf336d518f",
              "title": "组合使用选项？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6f4d9018-84a3-4089-bc56-d3bf336d518f",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "`git log --stat` 和 `git log -p` 都是非常实用的命令。如果能同时获得这两个命令的输出结果，是不是很棒？\n            \n运行 `git log -p --stat` 会发生什么？",
                "answers": [
                  {
                    "id": "a1487110311845",
                    "text": "它仅显示补丁信息",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110335977",
                    "text": "它仅显示统计信息",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110336517",
                    "text": "它同时显示这两种信息，并且补丁信息显示在统计信息上方",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110338181",
                    "text": "它同时显示这两种信息，并且统计信息显示在补丁信息上方",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 338848,
              "key": "78f027f5-38ae-4e0c-b481-38673253b5b5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "在上述视频中，我们观看了让很多代码缩进的 commit。补丁输出显示所有行先被删掉，然后在新的缩进位置又被重新添加。但是显示所有的缩进更改让我们很难发现实际添加了什么代码。",
              "instructor_notes": ""
            },
            {
              "id": 338849,
              "key": "ac22d92f-5a31-4b46-8ad7-1b871a596d5a",
              "title": "空格更改？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ac22d92f-5a31-4b46-8ad7-1b871a596d5a",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "`-w` 选项对补丁信息有何作用？要获取帮助，请参阅[此 Git 文档页面](https://git-scm.com/docs/git-diff)。",
                "answers": [
                  {
                    "id": "a1487110387340",
                    "text": "它以高亮文本显示非空格字符",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110448546",
                    "text": "它以粗体显示非空格更改",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110449199",
                    "text": " 它会忽略空格更改",
                    "is_correct": true
                  },
                  {
                    "id": "a1487110449773",
                    "text": "它在单独的补丁区域显示新增/删除的内容",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 338850,
              "key": "93f5ff9a-4a48-4969-8212-126d11a59f3b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## `git log -p` 小节\n\n          \n总结下，`-p` 选项（和 `--patch` 选项一样）用来更改 `git log` 显示信息的方式：\n```bash\n$ git log -p\n```\n          \n此命令会向默认输出中添加以下信息：\n\n          \n* 显示被修改的文件\n          \n* 显示添加/删除的行所在的位置\n          \n* 显示做出的实际更改\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 339084,
          "key": "ad11f6f3-9138-4a41-a089-d6a3b77e99ff",
          "title": "查看特定的 commit",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ad11f6f3-9138-4a41-a089-d6a3b77e99ff",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 338851,
              "key": "c9a073a7-5180-4afd-a16b-df3c2315e581",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 太多滚动操作\n\n          \n上一部分的最后几个练习需要在补丁输出中不断向下滚动，以便找到正确的 commit 并查看其信息。如果能显示特定 commit 的详情，而不用关心仓库中的所有其他内容，是不是很棒？\n\n          \n实际上有两种实现方式！\n\n          \n* 向 `git log` 提供你要查看的 commit 的 SHA\n          \n* 使用新的 `git show` 命令\n\n          \n它们都很简单，我们先学习 `git log` 方式，然后再学习 `git show`。",
              "instructor_notes": ""
            },
            {
              "id": 338852,
              "key": "4001b979-8dad-41a7-b72a-9b1e675804bd",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "你已经知道如何使用以下命令输出信息：\n\n          \n* `git log`\n          \n* `git log --oneline`\n          \n* `git log --stat`\n          \n* `git log -p`\n\n          \n但是你是否知道，可以向所有这些命令提供 commit 的 SHA 作为最后一个参数？例如：\n\n```bash\n$ git log -p fdf5493\n```\n\n          \n通过提供 SHA，`git log -p` 命令将从这条 commit 开始！无需滚动并逐条查阅！注意，它还会显示在所提供的 SHA 之前提交的所有 commit 信息。",
              "instructor_notes": ""
            },
            {
              "id": 338853,
              "key": "251aeb19-0f37-409f-9fc6-52964bc9641f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 新命令：`git show`\n\n          \n另一个显示特定 commit 的命令是 `git show`：\n\n```bash\n$ git show\n```\n\n          \n运行上述示例命令将仅显示最近的 commit。通常，将 SHA 作为最后一个参数提供给命令：\n\n```bash\n$ git show fdf5493\n```\n\n          \n### `git show` 的作用是？\n\n          \n`git show` 命令将仅显示一个 commit。因此，如果你看不到任何其他 commit，不要惊慌。它只显示一个 commit。`git show` 命令的输出和 `git log -p` 命令的完全一样。因此默认情况下，`git show` 会显示：\n\n* commit\n* 作者\n* 日期\n* commit 消息\n* 补丁信息\n\n          \n但是，`git show` 可以与我们了解过的大部分其他选项一起使用：\n\n          \n* `--stat` - 显示更改了多少文件，以及添加/删除的行数\n          \n* `-p` 或 `--patch` - 显示默认补丁信息，但是如果使用了 `--stat`，将不显示补丁信息，因此传入 `-p` 以再次添加该信息\n          \n* `-w` - 忽略空格变化\n\n          \n你现在已经是 `git log` 达人了！试着求解几道练习题吧。",
              "instructor_notes": ""
            },
            {
              "id": 338854,
              "key": "14cb4e22-2beb-4537-9945-64c4370b9d0e",
              "title": "添加了多少个规则集？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "14cb4e22-2beb-4537-9945-64c4370b9d0e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "commit `8d3ea36` 向 CSS 中添加了多少个规则集？",
                "answers": [
                  {
                    "id": "a1487110787892",
                    "text": "1",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110808550",
                    "text": "2",
                    "is_correct": true
                  },
                  {
                    "id": "a1487110809077",
                    "text": "3",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110809652",
                    "text": "4",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 338855,
              "key": "aa1d7f8d-90aa-4a0a-86a5-8c71abd04527",
              "title": "更改了多少个文件？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "aa1d7f8d-90aa-4a0a-86a5-8c71abd04527",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "有一个消息是\"Convert social links from text to images\"的 commit。这条 commit 更改了多少个文件？",
                "answers": [
                  {
                    "id": "a1487110847131",
                    "text": "2 个文件",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110875411",
                    "text": "4 个文件",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110875971",
                    "text": "5 个文件",
                    "is_correct": true
                  },
                  {
                    "id": "a1487110876477",
                    "text": "9 个文件",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 338856,
              "key": "f4b22660-11ec-451f-aabc-deb833b75f99",
              "title": "添加了什么级别的标题？",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f4b22660-11ec-451f-aabc-deb833b75f99",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "看看 commit `fdf5493`。这条 commit 所添加的首个 HTML 标题元素是什么？",
                "answers": [
                  {
                    "id": "a1487110913238",
                    "text": "一个 `<h1>`",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110947175",
                    "text": "一个 `<h2>`",
                    "is_correct": true
                  },
                  {
                    "id": "a1487110947679",
                    "text": "一个 `<h3>`",
                    "is_correct": false
                  },
                  {
                    "id": "a1487110948187",
                    "text": "一个 `<h4>`",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 339083,
          "key": "b1ffc3a7-a460-4e3d-ab03-393f774552b2",
          "title": "总结",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b1ffc3a7-a460-4e3d-ab03-393f774552b2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 338857,
              "key": "a0dfb764-9a09-4d7f-bab9-4313a1e88ae3",
              "title": "仓库的历史记录 - 总结",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "9rUf2HbdAd8",
                "china_cdn_id": "9rUf2HbdAd8.mp4"
              }
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}