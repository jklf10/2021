{
  "data": {
    "lesson": {
      "id": 869712,
      "key": "e9652698-f014-4e98-b9dc-c89a868d9860",
      "title": "在 GitHub 上发布你的作品",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "zh-cn",
      "summary": "",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/e9652698-f014-4e98-b9dc-c89a868d9860/681959/1544291166621/Post+your+Work+on+GitHub+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/e9652698-f014-4e98-b9dc-c89a868d9860/681959/1544291164612/Post+your+Work+on+GitHub+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 868980,
          "key": "850c4edb-4c03-4885-9a49-d0b907a90a9b",
          "title": "项目概览",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "850c4edb-4c03-4885-9a49-d0b907a90a9b",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 868183,
              "key": "410373ab-5657-45b8-bf36-bdffa5b953d5",
              "title": "Richard Kalehoff",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "jCs1gdnwEFc",
                "china_cdn_id": "jCs1gdnwEFc.mp4"
              }
            },
            {
              "id": 868184,
              "key": "a5f98858-a03d-48f4-a1fd-42acea253663",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 项目概览\n\n是时候在实践中检验你学习的关于版本控制和 GitHub 的知识！在这个项目中，您将模拟一个真实的工作流程，以使用 Git 重构之前的BikeShare项目。 以下是该项目任务的概述。\n\n## 建立你的仓库\n\n首先，您将“fork”一个存储库以获取此项目的模板副本，然后将其“clone”到本地计算机。你的第一个任务是添加`bikeshare.py`文件、数据文件和`.gitignore`文件，以从版本控制跟踪中排除你的数据文件。这是避免公开共享数据的常见做法，以避免在 GitHub 上跟踪不必要的大型文件，并且数据的更改通常不会影响我们的代码。\n\n## 优化文档\n\n接下来，你将练习使用 Git 创建分支以对项目进行一些更改。在现实世界中，通常使用不同的分支来管理单独功能的开发或项目的更改。你要研究的第一个分支是`文档`。在此分支中，您将在README文件中添加项目文档，并对`bikeshare.py`文件的文档字符串进行改进。然后，您将把“commits”“push”到远程仓库。\n\n## 重构代码\n\n你将要研究的下一个分支将是“重构”。在这里，你可以修改`bikeshare.py`文件，以提高__代码__的效率或可读性。请注意，此分支涉及`bikeshare.py`文件中的代码，而`documentation`分支涉及文件中的文档字符串。这意味着你可以同时处理这些分支而不会发生任何冲突！这是现实世界中的常见做法。\n\n## 合并分支\n\n最后，完成你的作品之后，可以将两个分支合并到`master`分支，然后将其push到远程仓库。\n\n## 提交\n\n为了完成此项目，你需要将你在本项目中用到的所有 Git 命令添加在此[模板](https://docs.google.com/document/d/1DoNBEQJyGHi0qAWpMpQM9lU9_VKh8ubdOY2BmKdvZcc/edit?usp=sharing) 中，并附上你 Github 仓库的链接。",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 868977,
          "key": "e106795b-8c6f-413a-b654-415c19434381",
          "title": "项目细节",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e106795b-8c6f-413a-b654-415c19434381",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 868174,
              "key": "7c735b02-cb0f-4dbf-9019-e9351ecd502d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "##  项目说明\n1. 如果你还没有，那么你的第一个任务就是创建一个 GitHub 个人资料。 你可以访问[https://github.com/](https://github.com/）来执行此操作。\n- 下载文档模板：[Git命令文档](https://docs.google.com/document/d/1DoNBEQJyGHi0qAWpMpQM9lU9_VKh8ubdOY2BmKdvZcc/edit?usp=sharing)。在您的Google云端硬盘上复制并创建此文档的副本。这就是唯一一个你需要提交的文件啦。下面提供了有关如何使用此模板的更多详细信息。\n- 下载[Atom](https://atom.io/) 或其他可以预览 markdown 文件的文本编辑器。如果你不熟悉 Markdown，__任务：文档__页面中提供了有关此内容的更多详细信息。\n- 有关你需要做的设置和编辑等任务，请参阅接下来的几页。请记住，在完成这些任务时，你需要使用的 git 命令复制并粘贴到提交模板中。\n\n## 提交模板: [Git 命令文档](https://docs.google.com/document/d/1DoNBEQJyGHi0qAWpMpQM9lU9_VKh8ubdOY2BmKdvZcc/edit?usp=sharing)\n\n此文档模板中有五个部分。每个部分都包含一个有说明的表，其中包含你在本地和远程仓库中完成的任务，以及复制和粘贴git命令的空间。 完成每项任务后，您将需要在相应的表行中包含或复制并粘贴git命令。\n\n在本文档的所有四个部分的表格中完成所需的内容后，请将此文档导出为PDF文件。 **请在 Udacity 教室的项目提交页面上提交 Git 命令文档的PDF文件。 **此外，你也可以将你的公共 GitHub repository URL 添加至空格中。将此链接添加到PDF，你的项目也会得到审阅。",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 868978,
          "key": "f7ab906b-d9e1-4444-806d-3e8d90324598",
          "title": "任务: 建立你的仓库",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f7ab906b-d9e1-4444-806d-3e8d90324598",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 868175,
              "key": "77a172c8-8493-4c97-bd4e-781670179c8d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "这里是帮助你检查是否完成了项目任务的清单，希望对你有帮助。此外，我们也提供了一些的资源和链接，供你参考。",
              "instructor_notes": ""
            },
            {
              "id": 868177,
              "key": "b625425f-b655-475a-b6ca-dd44ae87835a",
              "title": "第一部分：设置你的仓库",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "b625425f-b655-475a-b6ca-dd44ae87835a",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "从以下 GitHub 仓库<https://github.com/udacity/pdsnd_github>中 fork 一个仓库。",
                "将该 GitHub 仓库 clone 到本地仓库。",
                "将你的 bikeshare.py 和数据文件移动到本地仓库中。",
                "创建一个包含`.csv`文件的.gitignore文件。我们不想将数据推送到GitHub，因为它们往往很大。",
                "检查文件的状态以确保未跟踪数据文件。",
                "Stage 你所改变的内容。",
                "在 commit 的时候，记得添加一些描述性的信息。我们建议你参考[Udacity Git Commit Message Style Guide]（https://udacity.github.io/git-styleguide/）。",
                "Push 你的 commit 到远程仓库。",
                "查看一下 GitHub。确保 push 到远程仓库的文件与本地文件是匹配的，并且那些我们不想添加的文件并没有被添加上去。"
              ],
              "positive_feedback": "干得好！你已经完成整个流程了！",
              "video_feedback": null,
              "description": "**以下步骤将帮助你完成这些任务：1. 处理 README markdown 文件；2. 处理 BikeShare python 文件（在之前的 Python 课程中完成的项目）；3. 将文件发布到 GitHub。**\n\n步骤1. 创建 GitHub 个人资料（如果你还没有）。<br>\n步骤2. 完成下面列出的任务，并在 Git 命令文档中添加必要的响应。"
            }
          ]
        },
        {
          "id": 868979,
          "key": "7529e6b3-5dc2-4f11-90f0-05cad3ed5653",
          "title": "任务：优化文档",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7529e6b3-5dc2-4f11-90f0-05cad3ed5653",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 868178,
              "key": "c88d093e-151c-4fee-a5d2-55708a48023f",
              "title": "第二部分：优化文档",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "c88d093e-151c-4fee-a5d2-55708a48023f",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "在本地仓库上创建一个名为* documentation *的分支。",
                "切换到* documentation *分支。",
                "更新 README.md 文件以确保其与你在 Bikeshare 项目中所做的工作一致。",
                "Stage 你所做的改变。",
                "在 commit 的同时，记得添加一些关于你所做的改变的描述性的文字。",
                "将 commits push 到远程仓库分支。 [这个链接]（https://stackoverflow.com/questions/10565217/do-you-push-every-single-commit）中的内容可以帮助你了解 push 的频率。",
                "切换回* master *分支。",
                "前往 GitHub。请注意，你的项目现在有两个分支，当你更改分支的时候，README 也会更改。"
              ],
              "positive_feedback": "太好了！现在，你可以开始建立起你的文档了。",
              "video_feedback": null,
              "description": "在本节中，你将需要优化与项目相关的文档。\n\n在这部分中，会需要你熟悉 markdown 的基本使用技巧。 在大多数情况下，你可以在 markdown 文件中使用常规文本，但有一些简单的方法可以使这些文本更加美观（如粗体、斜体、标题、列表等）。 如果你在 markdown 语法或者使用上需要帮助，请查看本页底部的资源。\n\n按照以下的任务更新你的项目文档。"
            },
            {
              "id": 868179,
              "key": "239a1d34-48cf-454f-a5c3-27523373dfa8",
              "title": "第三部分：文档的其他更改",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "239a1d34-48cf-454f-a5c3-27523373dfa8",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "切换到本地仓库库上的* documentation *分支。",
                "至少对文档进行2次更改 - 比如说对 README 的其他更改，或者对 bikeshare 文件的文档字符串和行注释的更改。",
                "每次更改后，stage 并 commit 你的更改。当 commit 你的工作的时候，记得对所做的修改添加描述性的文字。你所更改的量应该较小，且与 commmit 信息中所描述的一致。",
                "将更改 push 到远程仓库分支。",
                "切换回* master *分支。",
                "检查本地仓库日志以查看所有分支的更改了什么内容。",
                "前往 GitHub。注意主分支上有多少次提交以及 documentation 分支上有多少次提交。"
              ],
              "positive_feedback": "很好，您完成了与文档相关的更改！",
              "video_feedback": null,
              "description": "在真实世界中，你或者你团队的其他成员可能会需要对 documentation 分支上的文档进行其他更改。要实现这一情况，请按照以下步骤操作："
            },
            {
              "id": 868180,
              "key": "73657f69-c835-44c1-bf12-5ea769d3c0a3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "如果你不熟悉 Markdown，有很多在线资源可以帮助你完成 markdown 相关的操作。在Atom上，你可以使用`ctrl + shift + m`来[预览你的 markdown](https://github.com/atom/markdown-preview)。 以下是一些不错的网站，可以快速了解如何使用Markdown。\n- [GitHub 的 Markdown 指南](https://guides.github.com/features/mastering-markdown/)\n- [Markdown 快速参考](https://en.support.wordpress.com/markdown-quick-reference/)\n- [Markdown CheatSheet](https://guides.github.com/pdfs/markdown-cheatsheet-online.pdf)\n\n没有一种方法可以告诉我们如何撰写 README 文件，但是有一些常规约定可以参考。\n1. 对项目的描述或仓库所含内容的简介。\n2.  该项目可能需要的软件、固件和硬件列表。\n3.  软件和固件的安装说明。\n4.  项目中包含的文件列表。\n5.  版权和许可信息。\n6.  对帮助你创建此项目的任何资源或博客的致谢。\n7.  已知的 bugs\n8.  更新和修订日志。\n\n你可以在[此处](https://help.github.com/articles/about-readmes/)查看有关此 GitHub 资源上的 README 文件的一些有用文档。\n\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 868981,
          "key": "9e6e9dc0-9c10-4df7-b540-55994e527053",
          "title": "任务：重构代码",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9e6e9dc0-9c10-4df7-b540-55994e527053",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 868181,
              "key": "dc5c8ab3-82ef-4713-b541-1050c3fc3015",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "在开始下一组任务之前，让我们快速回顾一下这个概念：重构。\n\n重构是清理代码以使其更精简和更高效，并且在不影响代码的外部功能的情况下整体改进代码的设计。\n\n以下页面包含一些重构 Python 代码的好例子：\n- [Pybit](https://pybit.es/refactoring.html)\n- [VisualStudio from Microsoft](https://docs.microsoft.com/en-us/visualstudio/python/refactoring-python-code)",
              "instructor_notes": ""
            },
            {
              "id": 868182,
              "key": "7d7b0e44-cbcb-4d10-9c97-440ea595873b",
              "title": "第四部分：重构代码",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7d7b0e44-cbcb-4d10-9c97-440ea595873b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "在本地仓库创建名为* refactoring *的分支。",
                "切换到* refactoring *分支。",
                "与你在更改文档时操作过的流程类似，在重构代码时需要进行两项或更多更改。",
                "对于_每个_更改，使用描述文字对你的工作进行 stage 和 commit。",
                "将 commits push 到远程仓库分支。",
                "切换回* master *分支。",
                "前往 GitHub。请注意，你现在有3个分支。注意在移动分支时文件如何变化。"
              ],
              "positive_feedback": "干得好！ 你完成了* refactoring *分支！",
              "video_feedback": null,
              "description": "按照以下说明更改代码，以提高代码效率或可读性。 **所做的实际更改与此项目无关。**重要的是了解工作流程。"
            }
          ]
        },
        {
          "id": 868982,
          "key": "296b5fa0-4e99-492e-83ca-12c7c1a32019",
          "title": "任务：合并分支",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "296b5fa0-4e99-492e-83ca-12c7c1a32019",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 868193,
              "key": "344b203d-4e22-4c41-8b4a-94b1dd49a726",
              "title": "第五部分：合并分支",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "344b203d-4e22-4c41-8b4a-94b1dd49a726",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "切换到* master *分支，如果还没有。",
                "Pull 你和你的同事在过去几天里所做的改变（在这种情况下，你不会有任何更新，Pull 往往是你每天做的第一件事）。",
                "由于你的更改已经全部完成，你希望将所有分支合并到主服务器中。解决任何合并导致的冲突。如果您正确地在分支中拆分工作，则应该没有合并冲突。",
                "你应该会看到一条消息，显示对文件插入和删除的更改。",
                "将仓库 push 到远程仓库。",
                "前往 Github。请注意，你的主分支具有所有更改。",
                "回答[模板](https://docs.google.com/document/d/1DoNBEQJyGHi0qAWpMpQM9lU9_VKh8ubdOY2BmKdvZcc/edit?usp=sharing)中的所有问题并提交 pdf 等待审阅！"
              ],
              "positive_feedback": "做得好！您完成了所有任务。获取准备提交的** Git Commands Documentation **文件，然后就可以进入提交页面啦！",
              "video_feedback": null,
              "description": "现在您已经完成了任务，你的同事也已经仔细检查了你分支上的工作，并且你已准备好继续进行其他的更改，我们需要采取一些步骤！"
            }
          ]
        }
      ]
    }
  }
}