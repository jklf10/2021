WEBVTT
Kind: captions
Language: zh-CN

00:00:01.381 --> 00:00:03.129
shell 类似编程语言

00:00:03.129 --> 00:00:06.660
就像 JavaScript 或 Python 一样 它具有变量

00:00:06.660 --> 00:00:08.699
不过看起来有点不一样

00:00:08.699 --> 00:00:12.419
在 Shell 中 每当你创建或修改一个变量

00:00:12.419 --> 00:00:15.800
你只需给它一个名称和一个等号

00:00:15.800 --> 00:00:18.230
后跟你想给它的值

00:00:18.230 --> 00:00:21.050
记住 等号两边不要加空格

00:00:21.050 --> 00:00:23.600
然后当你想引用这个变量时

00:00:23.600 --> 00:00:27.320
只需用美元符号后跟其名称即可

00:00:27.320 --> 00:00:29.100
Shell 中实际上有两种

00:00:29.100 --> 00:00:30.900
不同类型的变量

00:00:30.899 --> 00:00:33.739
一种叫 Shell 变量

00:00:33.740 --> 00:00:36.469
你之前看到的 LINES 和 COLUMNS 变量

00:00:36.469 --> 00:00:37.719
属于这种类型

00:00:37.719 --> 00:00:41.299
它们是 Shell 程序本身的内部变量

00:00:41.299 --> 00:00:44.829
另一种叫做环境变量

00:00:44.829 --> 00:00:47.259
环境变量是与在 Shell 中

00:00:47.259 --> 00:00:48.969
运行的程序共享的变量

00:00:48.969 --> 00:00:51.670
一个非常重要的环境变量

00:00:51.670 --> 00:00:54.020
是 Path 变量

00:00:54.020 --> 00:00:56.480
它会告诉系统你的程序文件的位置

00:00:56.479 --> 00:00:59.329
那么 当你输入一个命令 如 ls 时

00:00:59.329 --> 00:01:01.519
它会找到运行它的程序

00:01:01.520 --> 00:01:06.680
例如 在我的系统上 ls 程序位于 /bin.ls 中

00:01:06.680 --> 00:01:08.810
所以 它位于 /bin 目录中

00:01:08.810 --> 00:01:12.530
而 /bin 目录可以在我的 PATH 变量中看到

00:01:12.530 --> 00:01:14.299
PATH 变量中的目录

00:01:14.299 --> 00:01:16.280
使用冒号分隔

00:01:16.280 --> 00:01:19.430
Shell 会从第一个开始搜索

00:01:19.430 --> 00:01:21.890
不断向右 直到找到

00:01:21.890 --> 00:01:23.950
你输入的命令

00:01:23.950 --> 00:01:26.450
这就是当我想运行 ls 命令时

00:01:26.450 --> 00:01:27.656
Shell 找到它的方式

00:01:27.656 --> 00:01:29.030
有时你会看到说明

00:01:29.030 --> 00:01:31.489
告诉你将一个目录添加到 PATH

00:01:31.489 --> 00:01:33.739
以便能够找到其中的程序

00:01:33.739 --> 00:01:35.809
要将新目录添加到路径末尾

00:01:35.810 --> 00:01:37.430
你可以这样写

00:01:37.430 --> 00:01:43.150
PATH=$PATH: 后跟新目录

00:01:43.150 --> 00:01:46.120
但是如果你直接在 Shell 提示符下这么做

00:01:46.120 --> 00:01:49.039
这个更改只会持续到关闭 Shell 前

00:01:49.039 --> 00:01:50.829
我们来看看如果你想保留更改

00:01:50.829 --> 00:01:52.780
应该在哪里执行命令

00:01:52.780 --> 00:01:55.590
但是先来做几个测试题

