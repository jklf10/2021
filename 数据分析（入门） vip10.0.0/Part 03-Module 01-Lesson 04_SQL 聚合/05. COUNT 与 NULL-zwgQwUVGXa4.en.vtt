WEBVTT
Kind: captions
Language: en

00:00:00.020 --> 00:00:03.299
The COUNT function can also be used to count

00:00:03.299 --> 00:00:06.785
the number of non-null records in an individual column.

00:00:06.785 --> 00:00:10.730
To illustrate this, let's take a look at the accounts table.

00:00:10.730 --> 00:00:15.795
As you can see, there are 354 rows in the accounts table.

00:00:15.794 --> 00:00:19.024
Now, by substituting "ID" for the *,

00:00:19.024 --> 00:00:23.474
we can see how many non-null records there are in the ID column.

00:00:23.475 --> 00:00:26.495
Let's give the column a more sensible name while we're at it.

00:00:26.495 --> 00:00:29.740
Since there are no null values in the ID column,

00:00:29.739 --> 00:00:32.879
it returns the same result as COUNT(*).

00:00:32.880 --> 00:00:42.840
Now, let's try this with a column that we know contains some null values, primary_poc.

00:00:42.840 --> 00:00:47.015
This time, we get a result that is nine lower than our previous result.

00:00:47.015 --> 00:00:51.215
Let's run a quick query to verify that there are nine null values

00:00:51.215 --> 00:00:58.147
in the primary_poc column.

00:00:58.146 --> 00:01:01.434
And here they are,

00:01:01.435 --> 00:01:03.640
the nine rows with null values.

00:01:03.640 --> 00:01:06.099
One thing you may have noticed is that COUNT can be

00:01:06.099 --> 00:01:08.979
used in columns with non numerical values.

00:01:08.980 --> 00:01:12.950
This is not true of all aggregation functions, but it makes sense.

00:01:12.950 --> 00:01:16.269
The COUNT function is just looking for non-null data,

00:01:16.269 --> 00:01:17.819
and text is not null.

00:01:17.819 --> 00:01:19.569
Some of the functions we're about to learn,

00:01:19.569 --> 00:01:21.004
like SUM and AVERAGE,

00:01:21.004 --> 00:01:23.564
are impossible to apply to text because,

00:01:23.564 --> 00:01:26.659
well, how would you take the average of a bunch of account names?

