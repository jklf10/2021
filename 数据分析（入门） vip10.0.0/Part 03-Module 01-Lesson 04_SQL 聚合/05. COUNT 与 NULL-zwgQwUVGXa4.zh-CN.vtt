WEBVTT
Kind: captions
Language: zh-CN

00:00:00.020 --> 00:00:03.299
COUNT 函数也可以用来计算

00:00:03.299 --> 00:00:06.785
单个列中非空值记录的数量

00:00:06.785 --> 00:00:10.730
为了说明这一点 我们来看一下账户表

00:00:10.730 --> 00:00:15.795
如你所见 该帐户表中有 354 行

00:00:15.794 --> 00:00:19.024
现在 用 “ID” 代替 *

00:00:19.024 --> 00:00:23.474
我们可以看到在 ID 列中有多少非空值记录

00:00:23.475 --> 00:00:26.495
我们给该列起一个合理的名字 account_id_count

00:00:26.495 --> 00:00:29.740
由于 ID 列中没有空值

00:00:29.739 --> 00:00:32.879
它返回与 COUNT（*）相同的结果

00:00:32.880 --> 00:00:42.840
现在 让我们用已知的包含一些空值 primary_poc 列来尝试

00:00:42.840 --> 00:00:47.015
这一次 我们得到了的结果比之前小 9

00:00:47.015 --> 00:00:51.215
我们来运行一个快速查询来验证 这里有 9 个空值

00:00:51.215 --> 00:00:58.147
存在于 primary_poc 列中

00:00:58.146 --> 00:01:01.434
结果显示是这样

00:01:01.435 --> 00:01:03.640
有 9 行显示为空值

00:01:03.640 --> 00:01:06.099
你可能注意到 COUNT 可以

00:01:06.099 --> 00:01:08.979
在非值的列中使用

00:01:08.980 --> 00:01:12.950
并不是所有的聚合函数都是这样 但这样也是有用的

00:01:12.950 --> 00:01:16.269
COUNT 函数只是寻找非空值数据

00:01:16.269 --> 00:01:17.819
并且文本不为空

00:01:17.819 --> 00:01:19.569
我们接下来要学习的一些函数

00:01:19.569 --> 00:01:21.004
比如 SUM 和 AVERAGE

00:01:21.004 --> 00:01:23.564
就不能适用于文本 因为

00:01:23.564 --> 00:01:26.659
你总不可能取一堆帐户名称的平均值吧？

